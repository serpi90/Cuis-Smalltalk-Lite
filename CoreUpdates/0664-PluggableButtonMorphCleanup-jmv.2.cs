'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 28 November 2010 at 9:19:12 am'!!classDefinition: #PluggableButtonMorph category: #'Morphic-Windows'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font getStateSelector actionSelector getLabelSelector getMenuSelector shortcutCharacter askBeforeChanging triggerOnMouseDown offColor onColor feedbackColor showSelectionFeedback allButtons arguments argumentsProvider argumentsSelector '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Windows'!!PluggableButtonMorph methodsFor: 'copying' stamp: 'jmv 11/28/2010 09:18'!veryDeepInner: deepCopier	"Copy all of my instance variables.  Some need to be not copied at all, but shared.  	Warning!!!!  Every instance variable defined in this class must be handled.  We must also implement veryDeepFixupWith:.  See DeepCopier class comment."super veryDeepInner: deepCopier."model _ model.		Weakly copied""getStateSelector _ getStateSelector.		a Symbol""actionSelector _ actionSelector.		a Symbol""getLabelSelector _ getLabelSelector.		a Symbol""getMenuSelector _ getMenuSelector.		a Symbol"askBeforeChanging _ askBeforeChanging veryDeepCopyWith: deepCopier.triggerOnMouseDown _ triggerOnMouseDown veryDeepCopyWith: deepCopier.offColor _ offColor veryDeepCopyWith: deepCopier.onColor _ onColor veryDeepCopyWith: deepCopier.feedbackColor _ feedbackColor veryDeepCopyWith: deepCopier.showSelectionFeedback _ showSelectionFeedback veryDeepCopyWith: deepCopier.arguments _ arguments veryDeepCopyWith: deepCopier.argumentsProvider _ argumentsProvider veryDeepCopyWith: deepCopier.argumentsSelector _ argumentsSelector.  " a Symbol" ! !!PluggableButtonMorph methodsFor: 'event handling' stamp: 'jmv 11/27/2010 22:38'!mouseDown: evt	"Details: If this button is triggered on mouse down or the event is the menu gesture, handle it immediately. Otherwise, make a list of buttons (including the receiver) for mouseMove feedback. This allows a simple radio-button effect among the button submorphs of a given morph."	evt yellowButtonPressed ifTrue: [^ self yellowButtonActivity: evt shiftPressed].	triggerOnMouseDown		ifTrue: [self performAction]		ifFalse: [			self updateFeedbackForEvt: evt].	evt hand		waitForSimulatedYellow: self		event: evt		dblClkSel: #doubleClick:! !!PluggableButtonMorph methodsFor: 'event handling' stamp: 'jmv 11/27/2010 22:40'!mouseUp: evt	showSelectionFeedback _ false.	(borderColor is: #Color) ifFalse:[ borderColor _ #raised ].	self changed.	(self containsPoint: evt cursorPoint) ifTrue: [self performAction]! !!PluggableButtonMorph methodsFor: 'initialization' stamp: 'jmv 11/28/2010 09:18'!initialize	"initialize the state of the receiver"	super initialize.	model _ nil.	getStateSelector _ nil.	actionSelector _ nil.	getLabelSelector _ nil.	getMenuSelector _ nil.	askBeforeChanging _ false.	triggerOnMouseDown _ false.	onColor _ ColorTheme current buttonOn.	offColor _ ColorTheme current buttonOff.	feedbackColor _ Color red.	showSelectionFeedback _ false.	argumentsProvider _ nil.	argumentsSelector _ nil.	self extent: 20 @ 15! !PluggableButtonMorph removeSelector: #askBeforeChanging!PluggableButtonMorph removeSelector: #feedbackColor:!PluggableButtonMorph removeSelector: #mouseMove:!PluggableButtonMorph removeSelector: #offColor!PluggableButtonMorph removeSelector: #shortcutCharacter!PluggableButtonMorph removeSelector: #shortcutCharacter:!PluggableButtonMorph removeSelector: #triggerOnMouseDown!!classDefinition: #PluggableButtonMorph category: #'Morphic-Windows'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font getStateSelector actionSelector getLabelSelector getMenuSelector askBeforeChanging triggerOnMouseDown offColor onColor feedbackColor showSelectionFeedback arguments argumentsProvider argumentsSelector'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Windows'!