'From Cuis 1.0 of 28 November 2009 [latest update: #337] on 8 December 2009 at 3:56:28 pm'!!Object methodsFor: 'testing' stamp: 'eem 5/8/2008 11:13'!isArray	^false! !!Array methodsFor: 'testing' stamp: 'eem 5/8/2008 11:13'!isArray	^true! !!ClassBuilder methodsFor: 'class format' stamp: 'eem 6/13/2008 10:03'!computeFormat: type instSize: newInstSize forSuper: newSuper ccIndex: ccIndex	"Compute the new format for making oldClass a subclass of newSuper.	Return the format or nil if there is any problem."	| instSize isVar isWords isPointers isWeak |	type == #compiledMethod		ifTrue:[^CompiledMethod format].	instSize := newInstSize + (newSuper ifNil:[0] ifNotNil:[newSuper instSize]).	instSize > 254 ifTrue:[		self error: 'Class has too many instance variables (', instSize printString,')'.		^nil].	type == #normal ifTrue:[isVar := isWeak := false. isWords := isPointers := true].	type == #bytes ifTrue:[isVar := true. isWords := isPointers := isWeak := false].	type == #words ifTrue:[isVar := isWords := true. isPointers := isWeak := false].	type == #variable ifTrue:[isVar := isPointers := isWords := true. isWeak := false].	type == #weak ifTrue:[isVar := isWeak := isWords := isPointers := true].	(isPointers not and:[instSize > 0]) ifTrue:[		self error:'A non-pointer class cannot have instance variables'.		^nil].	^(self format: instSize 		variable: isVar 		words: isWords 		pointers: isPointers 		weak: isWeak) + (ccIndex bitShift: 11).! !!ClassBuilder methodsFor: 'public' stamp: 'eem 6/13/2008 10:00'!superclass: aClass	variableByteSubclass: t instanceVariableNames: f 	classVariableNames: d poolDictionaries: s category: cat	"This is the standard initialization message for creating a new class as a 	subclass of an existing class in which the subclass is to 	have indexable byte-sized nonpointer variables."	| oldClassOrNil actualType |	(aClass instSize > 0)		ifTrue: [^self error: 'cannot make a byte subclass of a class with named fields'].	(aClass isVariable and: [aClass isWords])		ifTrue: [^self error: 'cannot make a byte subclass of a class with word fields'].	(aClass isVariable and: [aClass isPointers])		ifTrue: [^self error: 'cannot make a byte subclass of a class with pointer fields'].	oldClassOrNil := aClass environment at: t ifAbsent:[nil].	actualType := (oldClassOrNil notNil				   and: [oldClassOrNil typeOfClass == #compiledMethod])					ifTrue: [#compiledMethod]					ifFalse: [#bytes].	^self 		name: t		inEnvironment: aClass environment		subclassOf: aClass		type: actualType		instanceVariableNames: f		classVariableNames: d		poolDictionaries: s		category: cat! !!LookupKey methodsFor: 'testing' stamp: 'ar 8/14/2003 01:52'!isSpecialReadBinding	"Return true if this variable binding is read protected, e.g., should not be accessed primitively but rather by sending #value messages"	^false! !"Postscript:Rename MethodContext's receivermap inst var to closureOrNil, avoiding ClassBuilder issues by rudely overwriting the class's appropriate inst var name."(MethodContext instVarNames at: 2) = 'receiverMap' ifTrue:	[MethodContext instVarNames at: 2 put: 'closureOrNil']!