'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 12 November 2010 at 2:58 pm'!!TextEditor methodsFor: 'parenblinking' stamp: 'jmv 11/12/2010 14:56'!blinkParen	"Used if Shout"	lastParenLocation ifNotNil: [		self text string size >= lastParenLocation ifTrue: [			self text				addAttribute: TextEmphasis bold				from: lastParenLocation				to: lastParenLocation]]! !!TextEditor methodsFor: 'parenblinking' stamp: 'jmv 11/12/2010 14:55'!blinkPrevParen: aKeyboardEvent	"Used if not Shout"	| openDelimiter closeDelimiter level string here hereChar |	string _ paragraph string.	here _ pointBlock stringIndex.	openDelimiter _ aKeyboardEvent keyCharacter.	closeDelimiter _ '([{' at: (')]}' indexOf: openDelimiter).	level _ 1.	[level > 0 and: [here > 1]]		whileTrue:			[hereChar _ string at: (here _ here - 1).			hereChar = closeDelimiter				ifTrue:					[level _ level - 1.					level = 0						ifTrue: [^ self blinkParenAt: here]]				ifFalse:					[hereChar = openDelimiter						ifTrue: [level _ level + 1]]]! !!TextEditor methodsFor: 'typing support' stamp: 'jmv 11/12/2010 14:44'!dispatchOn: aKeyboardEvent	"Carry out the action associated with this character, if any."	| asciiValue |	self clearParens.  	asciiValue _ aKeyboardEvent keyValue.	"Control keys are handled by KeystrokeActions even if they have any modifiers"	(asciiValue >= 32 and: [		Preferences cmdKeysInText and: [ aKeyboardEvent commandAltKeyPressed ]]) ifTrue: [		^self perform: (self class cmdActions at: asciiValue + 1) with: aKeyboardEvent ].	(')]}' includes: aKeyboardEvent keyCharacter)		ifTrue: [ self blinkPrevParen: aKeyboardEvent ].	^ self perform: (KeystrokeActions at: asciiValue + 1) with: aKeyboardEvent! !