'From Cuis 2.0 of 12 February 2010 [latest update: #418] on 17 February 2010 at 10:18:57 pm'!!PasteUpMorph methodsFor: 'world menu' stamp: 'jmv 2/17/2010 22:15'!findWindow: evt 	"Present a menu names of windows and naked morphs, and activate the one that gets chosen.  Collapsed windows appear below line, expand if chosen; naked morphs appear below second line; if any of them has been given an explicit name, that is what's shown, else the class-name of the morph shows; if a naked morph is chosen, bring it to front and have it don a halo."	| menu expanded collapsed nakedMorphs |	menu := MenuMorph new.	expanded := SystemWindow windowsIn: self				satisfying: [:w | w isCollapsed not].	collapsed := SystemWindow windowsIn: self				satisfying: [:w | w isCollapsed].	nakedMorphs := self submorphsSatisfying: [:m | (m is: #SystemWindow) not].	expanded isEmpty & (collapsed isEmpty & nakedMorphs isEmpty) 		ifTrue: [^Beeper beep].	(expanded 		asSortedCollection: [:w1 :w2 | w1 label caseInsensitiveLessOrEqual: w2 label]) 			do: 				[:w | 				menu 					add: w label					target: w					action: #activateAndForceLabelToShow.				w model canDiscardEdits ifFalse: [menu lastItem color: Color red]].	expanded isEmpty | (collapsed isEmpty & nakedMorphs isEmpty) 		ifFalse: [menu addLine].	(collapsed 		asSortedCollection: [:w1 :w2 | w1 label caseInsensitiveLessOrEqual: w2 label]) 			do: 				[:w | 				menu 					add: w label					target: w					action: #collapseOrExpand.				w model canDiscardEdits ifFalse: [menu lastItem color: Color red]].	nakedMorphs isEmpty ifFalse: [menu addLine].	(nakedMorphs asSortedCollection: 			[:w1 :w2 | 			w1 nameForFindWindowFeature 				caseInsensitiveLessOrEqual: w2 nameForFindWindowFeature]) 		do: 			[:w | 			menu 				add: w nameForFindWindowFeature				target: w				action: #comeToFrontAndAddHalo].	menu addTitle: 'find window' translated.	menu popUpInWorld: self! !!ZipArchive methodsFor: 'reading' stamp: 'jmv 2/17/2010 22:09'!readFrom: aStreamOrFileName	| stream name eocdPosition |	stream _ (aStreamOrFileName is: #Stream)		ifTrue: [name _ aStreamOrFileName name. aStreamOrFileName]		ifFalse: [StandardFileStream readOnlyFileNamed: (name _ aStreamOrFileName)].	stream binary.	eocdPosition _ self class findEndOfCentralDirectoryFrom: stream.	eocdPosition <= 0 ifTrue: [self error: 'can''t find EOCD position'].	self readEndOfCentralDirectoryFrom: stream.	stream position: eocdPosition - centralDirectorySize.	self readMembersFrom: stream named: name! !!ZipEncoder methodsFor: 'initialize-release' stamp: 'jmv 2/17/2010 22:09'!on: aCollectionOrStream	(aCollectionOrStream is: #Stream)		ifTrue:[encodedStream _ aCollectionOrStream]		ifFalse:[	encodedStream _ WriteStream on: aCollectionOrStream].	encodedStream isBinary		ifTrue:[super on: (ByteArray new: 4096)]		ifFalse:[super on: (String new: 4096)].	bitPosition _ bitBuffer _ 0.! !