'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 4 December 2010 at 12:08:09 am'!!CodeProvider methodsFor: 'message list' stamp: 'jmv 12/4/2010 00:03'!decompiledSource	"Obtain a source string by decompiling the method's code.	Also return the string."	| class selector method answer |	class _ self selectedClassOrMetaClass.	selector _ self selectedMessageName.	"Was method deleted while in another project?"	method _ class		compiledMethodAt: selector		ifAbsent: [ ^ '' ].	currentCompiledMethod _ method.	"decompile without temp names "	answer _ (class decompilerClass new		decompile: selector		in: class		method: method) decompileString.	answer _ answer asText makeSelectorBoldIn: class.	^ answer copy.! !!CodeProvider methodsFor: 'message list' stamp: 'jmv 12/4/2010 00:03'!selectedMessage	"Answer a copy of the source code for the selected message.  This generic version is probably actually never reached, since every subclass probably reimplements and does not send to super.  In time, ideally, most, or all, reimplementors would vanish and all would defer instead to a universal version right here.  Everything in good time."	| class selector method |	self showingDecompile ifTrue: [		^ self decompiledSource ].	class _ self selectedClassOrMetaClass.	(class isNil or: [(selector _ self selectedMessageName) isNil]) ifTrue: [^ ''].	method _ class compiledMethodAt: selector ifAbsent: [^ ''].	"method deleted while in another project"	currentCompiledMethod _ method.	^ ((self showComment		ifFalse: [self sourceStringPrettifiedAndDiffed]		ifTrue:	[ self commentContents])			copy asText makeSelectorBoldIn: class)! !!Browser methodsFor: 'message list' stamp: 'jmv 12/4/2010 00:03'!selectedMessage	"Answer a copy of the source code for the selected message."	| class selector method |	self showingDecompile ifTrue: [		^ self decompiledSource ].	class _ self selectedClassOrMetaClass.	selector _ self selectedMessageName.	method _ class compiledMethodAt: selector ifAbsent: [^ ''].	"method deleted while in another project"	currentCompiledMethod _ method.	^ ((self showingDocumentation		ifFalse: [ self sourceStringPrettifiedAndDiffed ]		ifTrue: [ self commentContents ])			copy asText makeSelectorBoldIn: class)! !!ChangeSetBrowser methodsFor: 'initialization' stamp: 'jmv 12/4/2010 00:06'!openAsMorphIn: window rect: rect	"Add a set of changeSetBrowser views to the given top view offset by the given amount"	| aHeight |	aHeight _ 0.25.	self addDependent: window.		"so it will get changed: #relabel"	window addMorph: (PluggableListMorphByItem 				model: self				listGetter: #classList				indexGetter: #currentClassName				indexSetter: #currentClassName:				menuGetter: #classListMenu:shifted:				keystrokeAction: #classListKey:from:)		frame: (((0.0@0 extent: 0.5 @ aHeight)			scaleBy: rect extent) translateBy: rect origin).	window addMorph: (PluggableListMorphByItem 				model: self				listGetter: #messageList				indexGetter: #currentSelector				indexSetter: #currentSelector:				menuGetter: #messageMenu:shifted:				keystrokeAction: #messageListKey:from:)		frame: (((0.5@0 extent: 0.5 @ aHeight)			scaleBy: rect extent) translateBy: rect origin).	 self addLowerPanesTo: window		at: (((0@aHeight corner: 1@1) scaleBy: rect extent) translateBy: rect origin)		with: nil! !!MessageSet methodsFor: 'contents' stamp: 'jmv 12/4/2010 00:04'!selectedMessage	"Answer the source method for the currently selected message."	| source |	self setClassAndSelectorIn: [:class :selector | 		class ifNil: [^ 'Class vanished'].		selector first isUppercase ifTrue: [			selector == #Comment ifTrue: [				currentCompiledMethod _ class organization commentRemoteStr.				^ class comment].			selector == #Definition ifTrue: [				^ class definition].			selector == #Hierarchy ifTrue: [^ class printHierarchy]].		source _ class sourceMethodAt: selector ifAbsent:			[currentCompiledMethod _ nil.			^ 'Missing'].		self showingDecompile ifTrue: [			^ self decompiledSource ].		currentCompiledMethod _ class compiledMethodAt: selector ifAbsent: nil.		self showingDocumentation ifTrue:			[^ self commentContents].	source _ self sourceStringPrettifiedAndDiffed.	^ source asText makeSelectorBoldIn: class]! !CodeProvider removeSelector: #decompiledSourceIntoContentsWithTempNames:!