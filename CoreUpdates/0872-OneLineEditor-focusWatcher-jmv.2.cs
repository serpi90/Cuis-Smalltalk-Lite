'From Cuis 3.1 of 4 March 2011 [latest update: #850] on 17 March 2011 at 7:58:50 am'!!classDefinition: #OneLineEditorMorph category: #'Morphic-Basic'!Morph subclass: #OneLineEditorMorph	instanceVariableNames: 'font emphasis contents editor showCaret pauseBlinking caretRect keyboardFocusWatcher '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Basic'!!OneLineEditorMorph methodsFor: 'accessing' stamp: 'jmv 3/17/2011 07:58'!keyboardFocusWatcher: aMorph	"We are usually used as a part of a bigger morph.	Usually, that morph would be interested in us changing keyboard focus.	An alternative implementation would be to define a new type of event, but:		- I (jmv) prefer explicit message sends to registering in events.		- There are too many evens already defined. It would be good to reduce that."	keyboardFocusWatcher _ aMorph! !!OneLineEditorMorph methodsFor: 'events-processing' stamp: 'jmv 3/17/2011 07:56'!focusKeyboardFor: aKeyboardEvent	"If aKeyboardEvent tab or shift-tab use it to navigate keyboard focus.	ctrl key ignored."	aKeyboardEvent keyValue = 9		ifFalse: [ ^false ].	aKeyboardEvent shiftPressed		ifFalse: [ aKeyboardEvent hand keyboardFocusNext ]		ifTrue: [ aKeyboardEvent hand keyboardFocusPrevious ].	keyboardFocusWatcher ifNotNil: [		"Check again, if for some reason there's nobody else to get focus (quite unlikely), maybe we still have it."		self hasKeyboardFocus ifFalse: [			keyboardFocusWatcher lostFocus: self ]].	^ true! !!classDefinition: #OneLineEditorMorph category: #'Morphic-Basic'!Morph subclass: #OneLineEditorMorph	instanceVariableNames: 'font emphasis contents editor showCaret pauseBlinking caretRect keyboardFocusWatcher'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Basic'!