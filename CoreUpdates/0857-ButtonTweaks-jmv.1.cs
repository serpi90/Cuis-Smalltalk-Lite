'From Cuis 3.1 of 4 March 2011 [latest update: #850] on 11 March 2011 at 3:17:23 pm'!!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 3/11/2011 15:17'!drawEmbossedLabelOn: aCanvas	| availableW center colorForLabel f l labelMargin targetSize w x y |	label ifNotNil: [		colorForLabel _ Theme current buttonLabel.		self isPressed			ifFalse: [				self mouseIsOver					ifFalse: [ colorForLabel _ colorForLabel adjustSaturation: -0.10 brightness: 0.10 ]]			ifTrue: [ colorForLabel _ colorForLabel adjustSaturation: 0.0 brightness: -0.07 ].		f _ self fontToUse.		center _ bounds center.		labelMargin _ 3.		w _ f widthOfString: label.		availableW _ bounds width-labelMargin-labelMargin.		availableW >= w			ifTrue: [				l _ label ]			ifFalse: [				x _ bounds left + labelMargin.				targetSize _ label size * availableW // w.				l _ label squeezedTo: targetSize.				(f widthOfString: l) > availableW ifTrue: [					targetSize _ targetSize - 1.					l _ label squeezedTo: targetSize ]].				w _ f widthOfString: l.		x _ center x - (w // 2).		y _ center y - (f height // 2).		aCanvas			drawStringEmbossed: l			in: (x@y extent: bounds extent - (labelMargin*2-2@4))			font: f			color: colorForLabel ]! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 3/11/2011 15:17'!drawRoundGradientLookOn: aCanvas	| r colorForButton rect colorForButtonGradient lh height left top width bottomLeftForm bottomRightForm gradientForm topLeftForm topRightForm |	rect _ bounds insetBy: 1@3.	self isPressed		ifFalse: [			self mouseIsOver				ifTrue: [						colorForButton _ Color h: color hue s: color saturation * 1.3 v: color brightness * 0.9.					Theme current useButtonGradient						ifTrue: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientBottomFactor ]						ifFalse: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientTopFactor ].					gradientForm _ self class buttonGradient.					topLeftForm _ self class roundedCornerTL.					topRightForm _ self class roundedCornerTR.					bottomLeftForm _ self class roundedCornerBL.					bottomRightForm _ self class roundedCornerBR ]				ifFalse: [					colorForButton _ color.					Theme current useButtonGradient						ifTrue: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientBottomFactor ]						ifFalse: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientTopFactor ].					gradientForm _ self class buttonGradient.					topLeftForm _ self class roundedCornerTL.					topRightForm _ self class roundedCornerTR.					bottomLeftForm _ self class roundedCornerBL.					bottomRightForm _ self class roundedCornerBR ]]		ifTrue: [			colorForButton _ color adjustSaturation: 0.1 brightness: -0.1.			Theme current useButtonGradient				ifTrue: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientTopFactor ]				ifFalse: [ colorForButtonGradient _ colorForButton * Theme current buttonGradientBottomFactor ].			gradientForm _ self class buttonGradientPressed.			topLeftForm _ self class roundedCornerTLPressed.			topRightForm _ self class roundedCornerTRPressed.			bottomLeftForm _ self class roundedCornerBLPressed.			bottomRightForm _ self class roundedCornerBRPressed ].	colorForButton ifNotNil: [		lh _ gradientForm form height.		r _ topLeftForm width.		left _ rect left + r.		top _ rect top.		width _ rect width - r-r.		height _ rect height -r min: lh.		aCanvas fillRectangle: (left@top extent: width@height)  infiniteForm: gradientForm multipliedBy: colorForButton.		aCanvas image: topLeftForm multipliedBy: colorForButton in: (rect topLeft extent: r@height).		aCanvas image: topRightForm multipliedBy: colorForButton in: (rect topRight - (r@0)extent: r@height).		aCanvas fillRectangle: (rect origin + (0@height) extent: rect width@(rect height-height-r)) fillStyle: colorForButtonGradient.		aCanvas image: bottomLeftForm multipliedBy: colorForButton at: rect bottomLeft - (0@r).		aCanvas image: bottomRightForm multipliedBy: colorForButton at: rect bottomRight - (r@r) .		aCanvas fillRectangle: (rect bottomLeft+(r@ r negated) corner:  rect bottomRight - (r@0) ) fillStyle: colorForButtonGradient ].				self drawEmbossedLabelOn: aCanvas! !