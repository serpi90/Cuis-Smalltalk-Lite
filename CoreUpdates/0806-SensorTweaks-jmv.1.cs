'From Cuis 3.0 of 31 January 2011 [latest update: #790] on 21 February 2011 at 3:05:08 pm'!!InputSensor methodsFor: 'keyboard' stamp: 'jmv 2/21/2011 13:54'!kbdTest	"	Sensor kbdTest	"	"This test routine will print the unmodified character, its keycode,	and the OR of all its modifier bits, until the character x is typedAlso useful:	Sensor test	"	| char |	char _ nil.	[ char = $x ] whileFalse: [		[ self keyboardPressed ] whileFalse.		char _ self characterForKeycode: self keyboard.		Display fill: (5@5 extent: 400@20) fillColor: Color white.		(String streamContents: [ :s |			s				nextPut: $-;				nextPut: char;				nextPut: $-;				space;				print: char asciiValue;				space.			self blueButtonPressed ifTrue: [ s nextPutAll: ' blue/tertiary/halo ' ].			self yellowButtonPressed ifTrue: [ s nextPutAll: ' yellow/secondary/menu ' ].			self redButtonPressed ifTrue: [ s nextPutAll: ' red/primary ' ].			self shiftPressed ifTrue: [ s nextPutAll: ' shift ' ].			self controlKeyPressed ifTrue: [ s nextPutAll: ' control/ctrl ' ].			(self primMouseButtons anyMask: 32) ifTrue: [ s nextPutAll: ' macOption ' ].			self commandAltKeyPressed ifTrue: [ s nextPutAll: ' macCommand/winAlt ' ]])		displayAt: 10 @ 10 ].! !!EventSensor methodsFor: 'test' stamp: 'jmv 2/21/2011 13:57'!test	"	Sensor test	"	| char lastStamp stamp |	char _ nil.	lastStamp _ 0.	[ char = $x ] whileFalse: [		Sensor nextEvent ifNotNil: [ :evt |			stamp _ evt at: 2.			stamp - lastStamp > 300 ifTrue: [ '' print ].			self printEventBuffer: evt.			Transcript show: evt.			(evt first = 2 and: [ evt fourth = 0 ]) ifTrue: [				char _ Character value: evt third ].			lastStamp _ stamp]]! !