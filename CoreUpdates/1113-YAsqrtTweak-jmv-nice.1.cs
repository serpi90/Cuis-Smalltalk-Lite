'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 29 October 2011 at 2:28:15 pm'!!Integer methodsFor: 'mathematical functions' stamp: 'jmv 10/29/2011 14:27'!sqrt	"Answer the square root of the receiver."	| selfAsFloat floatResult guess |	selfAsFloat _ self asFloat.	floatResult _ selfAsFloat sqrt.	floatResult isInfinite ifFalse: [		guess _ floatResult truncated.		"If got an exact answer, answer it. Otherwise answer float approximate answer."		guess squared = self			ifTrue: [ ^ guess ]].	"In this case, maybe it failed because we are such a big integer that the Float method becomes	inexact, even if we are a whole square number. So, try the slower but more general method."	selfAsFloat >= Float maxExactInteger asFloat squared		ifTrue: [			guess _ self sqrtFloor.			guess squared = self				ifTrue: [ ^guess ].						"Nothing else can be done. No exact answer means answer must be a Float.			Answer the best we can which is the rounded sqrt."			guess _ (self * 4) sqrtFloor.			^(guess // 2 + (guess \\ 2)) asFloat ].	"We need an approximate result"	^floatResult! !!IntegerTest methodsFor: 'tests - mathematical functions' stamp: 'jmv 10/29/2011 14:15'!testBigReceiverInexactSqrt	"	IntegerTest new testBigReceiverInexactSqrt	"	"Inexact 3rd root (not a whole cube number), so a Float must be answered.	However, receiver is too big for Float arithmethic."	| bigNum result |	bigNum _ 100 factorial squared + 1.		"Add 1 so it is not a whole square"	self assert: bigNum asFloat isInfinite.			"Otherwise, we chose a bad sample"	result _ bigNum sqrt.	self assert: result class == Float.	self deny: result isInfinite.	self assert: result = 100 factorial asFloat.		"No other float is closer. See following lines"	self assert: (result successor asFraction squared - bigNum) abs >= (result asFraction squared - bigNum) abs.	self assert: (result predecessor asFraction squared - bigNum) abs >= (result asFraction squared - bigNum) abs.! !!LargePositiveInteger methodsFor: 'mathematical functions' stamp: 'jmv 10/29/2011 14:21'!sqrt	"If we know for sure no exact solution exists, and we have a reasonable  float approximation,	then answer it without wasting time."	| selfAsFloat |	self mightBeASquare ifFalse: [		selfAsFloat _ self asFloat.		selfAsFloat isFinite ifTrue: [			^self asFloat sqrt ]].	"If some exact solution might exist, or self asFloat isInfinite, call potentially expensive super"	^super sqrt! !