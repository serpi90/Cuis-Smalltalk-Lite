'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 31 August 2011 at 10:03:19 pm'!!AdditionalMethodState methodsFor: 'testing' stamp: 'bgf 12/6/2008 12:15'!hasLiteralSuchThat: aBlock	"Answer true if litBlock returns true for any literal in this array, even if embedded in further array structure.	 This method is only intended for private use by CompiledMethod hasLiteralSuchThat:"	1 to: self basicSize do: [:i |		| propertyOrPragma "<Association|Pragma>" |		propertyOrPragma := self basicAt: i.		(propertyOrPragma isVariableBinding			ifTrue: [(aBlock value: propertyOrPragma key)					or: [(aBlock value: propertyOrPragma value)					or: [propertyOrPragma value isArray						and: [propertyOrPragma value hasLiteralSuchThat: aBlock]]]]			ifFalse: [propertyOrPragma hasLiteralSuchThat: aBlock]) ifTrue:			[^true]].	^false! !!AdditionalMethodState methodsFor: 'testing' stamp: 'eem 11/29/2008 16:40'!hasLiteralThorough: literal	"Answer true if any literal in these properties is literal,	 even if embedded in array structure."	1 to: self basicSize do: [:i |		| propertyOrPragma "<Association|Pragma>" |		propertyOrPragma := self basicAt: i.		(propertyOrPragma isVariableBinding			ifTrue: [propertyOrPragma key == literal					or: [propertyOrPragma value == literal					or: [propertyOrPragma value isArray						and: [propertyOrPragma value hasLiteral: literal]]]]			ifFalse: [propertyOrPragma hasLiteral: literal]) ifTrue:			[^true]].	^false! !!Array methodsFor: 'private' stamp: 'nice 7/20/2011 09:03'!hasLiteral: literal	"Answer true if literal is identical to any literal in this array, even 	if imbedded in further array structure. This method is only intended 	for private use by CompiledMethod hasLiteralSymbol:"	| lit |	1 to: self size do: 		[:index | 		((lit := self at: index) literalEqual: literal) ifTrue: [^true].		(Array == lit class and: [lit hasLiteral: literal]) ifTrue: [^true]].	^false! !!Array methodsFor: 'private' stamp: 'jmv 8/31/2011 22:00'!hasLiteralSuchThat: testBlock	"Answer true if testBlock returns true for any literal in this array, even if imbedded in 	further Arrays or CompiledMethods.  This method is only intended for private use by 	CompiledMethod 	hasLiteralSuchThat:"	| lit |	1 to: self size do: [:index |		(testBlock value: (lit := self at: index)) ifTrue: [^ true].		(lit isArray and: [lit hasLiteralSuchThat: testBlock]) ifTrue: [^ true]].	^ false! !!Association methodsFor: 'testing' stamp: 'nice 7/20/2011 09:00'!literalEqual: otherLiteral	"Answer true if the receiver and otherLiteral represent the same literal.	Variable bindings are literally equals only if identical.	This is how variable sharing works, by preserving identity and changing only the value."	^self == otherLiteral! !!CompiledMethod methodsFor: 'literals' stamp: 'nice 7/20/2011 09:05'!hasLiteral: literal	"Answer whether the receiver references the argument, literal."	2 to: self numLiterals - 1 do: "exclude superclass + selector/properties"		[:index |		((self objectAt: index) literalEqual: literal) ifTrue: [^true]].	^false! !!CompiledMethod methodsFor: 'literals' stamp: 'nice 7/20/2011 09:10'!hasLiteralThorough: literal	"Answer true if any literal in this method is literal,	even if embedded in array structure."	(self penultimateLiteral isMethodProperties	 and: [self penultimateLiteral hasLiteralThorough: literal]) ifTrue:[^true].	2 to: self numLiterals - 1 "exclude superclass + selector/properties"	   do:[:index | | lit |		(((lit := self objectAt: index) literalEqual: literal)		 or: [(lit isVariableBinding and: [lit key == literal])		 or: [lit isArray and: [lit hasLiteral: literal]]]) ifTrue:			[^ true]].	^ false ! !CompiledMethod removeSelector: #hasLiteralThorough:from:!