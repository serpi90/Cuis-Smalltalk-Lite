'From Cuis 3.0 of 18 January 2011 [latest update: #768] on 25 January 2011 at 9:42:50 am'!!Object methodsFor: 'inspecting' stamp: 'jmv 1/25/2011 09:34'!basicInspect	"Create and schedule an Inspector in which the user can examine the 	receiver's variables. This method should not be overriden."	BasicInspector openOn: self! !!Object methodsFor: 'inspecting' stamp: 'jmv 1/25/2011 09:34'!inspect	"Create and schedule an Inspector in which the user can examine the receiver's variables."	self inspectorClass openOn: self! !!Object methodsFor: 'inspecting' stamp: 'jmv 1/25/2011 09:41'!inspectWithLabel: aLabel	"Create and schedule an Inspector in which the user can examine the receiver's variables."	self inspectorClass openOn: self withLabel: aLabel! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 1/25/2011 09:36'!inMorphicWindowOn: anObject	^ self inMorphicWindowOn: anObject label: anObject defaultLabelForInspector! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 1/25/2011 09:36'!inMorphicWindowOn: anObject label: aLabel	" Inspector openAsMorphOn: SystemOrganization "	| window inspector |	inspector _ self inspect: anObject.	window _ (SystemWindow labelled: aLabel) model: inspector.	window		addMorph: (PluggableListMorph new			doubleClickSelector: #inspectSelection;			model: inspector 			listGetter: #fieldList			indexGetter: #selectionIndex			indexSetter: #toggleIndex:			menuGetter: #fieldListMenu:			keystrokeAction: #inspectorKey:from:)		frame: (0@0 corner: self horizontalDividerProportion @ self verticalDividerProportion).	window		addMorph: (TextModelMorph			textProvider: inspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection)		frame: (self horizontalDividerProportion @0 corner: 1@self verticalDividerProportion).	window		addMorph: ((TextModelMorph textProvider: inspector)			askBeforeDiscardingEdits: false)		frame: (0@self verticalDividerProportion corner: 1@1).	window setUpdatablePanesFrom: #(fieldList).	^ window! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 1/25/2011 09:38'!inspect: anObject	"Answer an instance of me to provide an inspector for anObject."		"We call basicNew to avoid a premature initialization; the instance method 	inspect: anObject will do a self initialize."		"This does not open an inspector in the User Interface, it just answers an Inspector Model."	^self basicNew inspect: anObject! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 1/25/2011 09:40'!openOn: anObject	^ (self inMorphicWindowOn: anObject) openInWorld! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 1/25/2011 09:37'!openOn: anObject withLabel: label	^ (self inMorphicWindowOn: anObject label: label) openInWorld! !!LightWidget methodsFor: 'menus' stamp: 'jmv 1/25/2011 09:37'!inspectInMorphic: evt	evt hand attachMorph: ((Inspector inMorphicWindowOn: self) extent: 300@200)! !!Morph methodsFor: 'menus' stamp: 'jmv 1/25/2011 09:37'!inspectInMorphic: evt	evt hand attachMorph: ((Inspector inMorphicWindowOn: self) extent: 300@200)! !!Preferences class methodsFor: 'preferences panel' stamp: 'jmv 1/25/2011 09:42'!openPreferencesInspector	"Open a window on the current set of preferences choices, allowing the user to view and change their settings"		DictionaryOfPreferences inspectWithLabel: 'Preferences'! !!ProcessBrowser methodsFor: 'process actions' stamp: 'jmv 1/25/2011 09:32'!inspectPointers	| tc pointers |	selectedProcess		ifNil: [^ self].	tc _ thisContext.			pointers _ Smalltalk pointersTo: selectedProcess except: {self processList. tc. self}.			pointers isEmpty				ifTrue: [^ self].			OrderedCollectionInspector				openOn: pointers				withLabel: 'Objects pointing to ' , selectedProcess browserPrintString! !!SystemDictionary methodsFor: 'browsing' stamp: 'jmv 1/25/2011 09:32'!browseAllObjectReferencesTo: anObject except: objectsToExclude ifNone: aBlock	"Bring up a list inspector on the objects that point to anObject.	If there are none, then evaluate aBlock on anObject.  "	| aList shortName |	aList _ Smalltalk pointersTo: anObject except: objectsToExclude.	aList size > 0 ifFalse: [^ aBlock value: anObject].	shortName _ (anObject name ifNil: [anObject printString]) contractTo: 20.	OrderedCollectionInspector		openOn: aList		withLabel: 'Objects pointing to ', shortName! !Preferences class removeSelector: #inspectPreferences!Inspector class removeSelector: #openAsMorphOn:!Inspector class removeSelector: #openAsMorphOn:withEvalPane:withLabel:!Inspector class removeSelector: #openAsMorphOn:withEvalPane:withLabel:valueViewClass:!Inspector class removeSelector: #openAsMorphOn:withLabel:!Inspector class removeSelector: #openOn:withEvalPane:!Inspector class removeSelector: #openOn:withEvalPane:withLabel:!