'From Cuis 3.1 of 4 March 2011 [latest update: #850] on 15 March 2011 at 5:29:57 pm'!!classDefinition: #FormCanvas category: #'Morphic-Support'!Canvas subclass: #FormCanvas	instanceVariableNames: 'origin clipRect form port shadowColor '	classVariableNames: 'AccessProtect AuxBlitter AuxForm CachedForms '	poolDictionaries: ''	category: 'Morphic-Support'!!classDefinition: #PluggableButtonMorph category: #'Morphic-Windows'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font icon getStateSelector actionSelector isPressed mouseIsOver magnifiedIcon actWhen '	classVariableNames: 'ButtonGradient ButtonGradientPressed RoundedCornerBL RoundedCornerBLPressed RoundedCornerBR RoundedCornerBRPressed RoundedCornerTL RoundedCornerTLPressed RoundedCornerTR RoundedCornerTRPressed '	poolDictionaries: ''	category: 'Morphic-Windows'!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString collapsedFrame fullFrame isCollapsed updatablePanes widgetsColor layoutMorph topAdjuster bottomAdjuster leftAdjuster rightAdjuster topLeftAdjuster bottomLeftAdjuster topRightAdjuster bottomRightAdjuster '	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTLPlain RoundedCornerTR RoundedCornerTRPlain TitleGradient TopWindow '	poolDictionaries: ''	category: 'Morphic-Windows'!!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'jmv 3/15/2011 17:29'!setDefaultParameters	"change the receiver's appareance parameters"	self color: Theme current menu lighter! !!FillInTheBlankMorph methodsFor: 'drawing' stamp: 'jmv 3/15/2011 17:27'!drawOn: aCanvas	| roundCorners |	roundCorners _ Theme current roundWindowCorners.	roundCorners		ifTrue: [			aCanvas roundRect: bounds color: self fillStyle radius: Theme current roundedWindowRadius ]		ifFalse: [			super drawOn: aCanvas ]! !!FormCanvas methodsFor: 'drawing-roundedRectangles' stamp: 'jmv 3/15/2011 16:37'!roundRect: aRectangle color: aColor radius: r	"	Display getCanvas roundRect: (10@10 extent: 200@100) color: Color red radius: 10	"	"top stripe"	self		image: (FormCanvas topLeftCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: aColor		at: aRectangle topLeft.	self		image: (FormCanvas topRightCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: aColor		at: aRectangle topRight - (r@0).	self fillRectangle: ((aRectangle withHeight: r) insetBy: r@0) color: aColor.	"center stripe"	self fillRectangle: (aRectangle insetBy: (0 @ r corner: 0 @ r)) color: aColor.		"bottom stripe"	self		image: (FormCanvas bottomLeftCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: aColor		at: aRectangle bottomLeft - (0@r).	self		image: (FormCanvas bottomRightCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: aColor		at: aRectangle bottomRight - (r@r) .	self fillRectangle: ((aRectangle bottomLeft + (r@r negated)) extent: (aRectangle width - r - r@r)) color: aColor! !!FormCanvas methodsFor: 'drawing-roundedRectangles' stamp: 'jmv 3/15/2011 16:18'!roundRect: aRectangle color: aColor radius: r gradientTop: topFactor gradientBottom: bottomFactor gradientHeight: h	"	Display getCanvas roundRect: (10@10 extent: 200@100) color: Color red radius: 10 gradientTop: 1.0 gradientBottom: 0.5 gradientHeight: 35	"	"top stripe"	| bottomColor |	self		image: (FormCanvas topLeftCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topLeft.	self		image: (FormCanvas topRightCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topRight - (r@0).	self		fillRectangle: ((aRectangle withHeight: h) insetBy: r@0)		infiniteForm: (FormCanvas verticalGrayGradient: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor.	bottomColor _ aColor * bottomFactor.	"center stripe"	self fillRectangle: (aRectangle insetBy: (0 @ h corner: 0 @ r)) color: bottomColor.		"bottom stripe"	self		image: (FormCanvas bottomLeftCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomLeft - (0@r).	self		image: (FormCanvas bottomRightCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomRight - (r@r) .	self fillRectangle: ((aRectangle bottomLeft + (r@r negated)) extent: (aRectangle width - r - r@r)) color: bottomColor! !!FormCanvas methodsFor: 'drawing-roundedRectangles' stamp: 'jmv 3/15/2011 17:12'!windowFrame: aRectangle color: aColor radius: r border: borderWidth labelHeight: h gradientTop: topFactor gradientBottom: bottomFactor insideColor: insideColor	"	Display getCanvas windowFrame: (10@10 extent: 200@100) color: Color red radius: 10  border: 5 labelHeight: 25 gradientTop: 1.0 gradientBottom: 0.5	"	"top stripe"	| bottomColor he tl tr |	self		image: (FormCanvas topLeftCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topLeft.	self		image: (FormCanvas topRightCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topRight - (r@0).	self		fillRectangle: ((aRectangle withHeight: h) insetBy: r@0)		infiniteForm: (FormCanvas verticalGrayGradient: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor.	bottomColor _ aColor * bottomFactor.	"left and right borders"	tl _ aRectangle topLeft + (0@h).	tr _ aRectangle topRight + (borderWidth negated@h).	he _ borderWidth@(aRectangle height - h - r).	self fillRectangle: (tl extent: he) color: bottomColor.	self fillRectangle: (tr extent: he) color: bottomColor.		"bottom stripe"	self		image: (FormCanvas bottomLeftCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomLeft - (0@r).	self		image: (FormCanvas bottomRightCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomRight - (r@r) .	self fillRectangle: ((aRectangle bottomLeft + (r@borderWidth negated)) extent: (aRectangle width - r - r@borderWidth)) color: bottomColor.	"inside"	self fillRectangle: (aRectangle insetBy: (borderWidth@h corner: borderWidth@borderWidth)) color: insideColor! !!FormCanvas class methodsFor: 'class initialization' stamp: 'jmv 3/15/2011 16:39'!clearFormsCache	CachedForms _ Dictionary new! !!FormCanvas class methodsFor: 'class initialization' stamp: 'jmv 3/15/2011 16:39'!initialize	"FormCanvas initialize"	Smalltalk addToShutDownList: self.	AccessProtect _ Semaphore forMutualExclusion.	self clearFormsCache! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 3/15/2011 15:56'!bottomLeftCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	^CachedForms		at: { #bottomLeft. r. height. gradientTopFactor . gradientBottomFactor }		ifAbsentPut: [			Form				bottomLeftCorner: r				height: height				gradientTop: gradientTopFactor				gradientBottom: gradientBottomFactor ]! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 3/15/2011 15:57'!bottomRightCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	^CachedForms		at: { #bottomRight. r. height. gradientTopFactor . gradientBottomFactor }		ifAbsentPut: [			Form				bottomRightCorner: r				height: height				gradientTop: gradientTopFactor				gradientBottom: gradientBottomFactor ]! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 3/15/2011 15:57'!topLeftCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	^CachedForms		at: { #topLeft. r. height. gradientTopFactor . gradientBottomFactor }		ifAbsentPut: [			Form				topLeftCorner: r				height: height				gradientTop: gradientTopFactor				gradientBottom: gradientBottomFactor ]! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 3/15/2011 15:57'!topRightCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	^CachedForms		at: { #topRight. r. height. gradientTopFactor . gradientBottomFactor }		ifAbsentPut: [			Form				topRightCorner: r				height: height				gradientTop: gradientTopFactor				gradientBottom: gradientBottomFactor ]! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 3/15/2011 16:17'!verticalGrayGradient: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	^CachedForms		at: { #vertical. height. gradientTopFactor . gradientBottomFactor }		ifAbsentPut: [			InfiniteForm				verticalGradient: height				topColor: (Color gray: gradientTopFactor)				bottomColor: (Color gray: gradientBottomFactor) ]! !!MenuMorph methodsFor: 'drawing' stamp: 'jmv 3/15/2011 17:27'!drawOn: aCanvas		| roundCorners |	roundCorners _ Theme current roundWindowCorners.	roundCorners		ifTrue: [			aCanvas roundRect: bounds color: self fillStyle radius: Theme current roundedWindowRadius ]		ifFalse: [			super drawOn: aCanvas ]! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 3/15/2011 16:33'!drawRoundGradientLookOn: aCanvas	| r colorForButton rect bottomFactor topFactor |	rect _ bounds insetBy: 1@3.	self isPressed		ifFalse: [			topFactor _ Theme current buttonGradientTopFactor.			bottomFactor _ Theme current buttonGradientBottomFactor.			self mouseIsOver				ifTrue: [						colorForButton _ Color h: color hue s: color saturation * 1.3 v: color brightness * 0.9 ]				ifFalse: [					colorForButton _ color ]]		ifTrue: [			topFactor _ Theme current buttonGradientBottomFactor.			bottomFactor _ Theme current buttonGradientTopFactor.			colorForButton _ color adjustSaturation: 0.1 brightness: -0.1 ].	colorForButton ifNotNil: [		r _ Theme current roundedButtonRadius.		Theme current useButtonGradient			ifTrue: [				aCanvas					roundRect: rect					color: colorForButton					radius: r					gradientTop: topFactor					gradientBottom: bottomFactor					gradientHeight: Theme current buttonGradientHeight ]			ifFalse: [				aCanvas roundRect: rect color: colorForButton radius: r ]		].				self drawEmbossedLabelOn: aCanvas! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 3/15/2011 17:19'!drawClassicFrameOn: aCanvas color: titleColor	"Window border encompasses title area. No round corners. No title gradient."	borderColor class == Symbol		ifTrue: [			" This would of course be much better...			""			aCanvas fillRectangle: bounds fillStyle: self fillStyle borderWidth: borderWidth borderStyleSymbol: borderColor			"			aCanvas fillRectangle: bounds fillStyle: self fillStyle borderWidth: borderWidth borderStyleSymbol: borderColor baseColorForBorder: self raisedColor			]		ifFalse: [			aCanvas fillRectangle: bounds fillStyle: self fillStyle borderWidth: borderWidth borderStyleSymbol: #simple baseColorForBorder: borderColor ].	aCanvas fillRectangle: self titleAreaInnerRect color: titleColor! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 3/15/2011 17:21'!drawOn: aCanvas	| titleColor roundCorners |	titleColor _ self widgetsColor.	self isTopWindow		ifTrue: [ titleColor _ titleColor lighter ].	roundCorners _ Theme current roundWindowCorners.	roundCorners		ifTrue: [			"Round corners. Optional title gradient."			self drawRoundedFrameOn: aCanvas color: titleColor ]		ifFalse: [			"No round corners. No title gradient."			self drawClassicFrameOn: aCanvas color: titleColor ].	self drawLabelOn: aCanvas! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 3/15/2011 17:20'!drawRoundedFrameOn: aCanvas color: widgetsColor	"Title area is not inside window borders"	| bottomFactor topFactor |	Theme current useWindowTitleGradient		ifTrue: [			topFactor _ Theme current titleGradientTopFactor.			bottomFactor _ Theme current titleGradientBottomFactor ]		ifFalse: [			topFactor _ 1.			bottomFactor _ 1 ].	aCanvas		windowFrame: bounds		color: widgetsColor * Theme current titleGradientExtraLightness		radius: Theme current roundedWindowRadius		border: borderWidth		labelHeight: self labelHeight + borderWidth		gradientTop: topFactor		gradientBottom: bottomFactor		insideColor: self fillStyle.! !!SystemWindow class methodsFor: 'class initialization' stamp: 'jmv 3/15/2011 17:21'!initialize	"	SystemWindow initialize	"	CloseIcon _ nil.	CollapseIcon _ nil.	ExpandIcon _ nil.	MenuIcon _ nil! !!Theme methodsFor: 'other options' stamp: 'jmv 3/15/2011 16:38'!roundedWindowRadius	"Only effective if #roundWindowCorners answers true.	Provide a reasonable default for subclasses."	^8! !!Theme class methodsFor: 'as yet unclassified' stamp: 'jmv 3/15/2011 16:40'!currentTheme: aTheme	CurrentTheme := aTheme new.	SHTextStylerST80 initialize.	World backgroundImage ifNil: [		World color: CurrentTheme background ].	SystemWindow initialize.	FormCanvas clearFormsCache.	World restoreMorphicDisplay.		^ CurrentTheme! !SystemWindow initialize!SystemWindow class removeSelector: #roundedCornerBL!SystemWindow class removeSelector: #roundedCornerBR!SystemWindow class removeSelector: #roundedCornerTL:!SystemWindow class removeSelector: #roundedCornerTLPlain!SystemWindow class removeSelector: #roundedCornerTR:!SystemWindow class removeSelector: #roundedCornerTRPlain!SystemWindow class removeSelector: #titleGradient:!SystemWindow removeSelector: #boundsExcludingTitleArea!SystemWindow removeSelector: #drawClassicFrameOn:titleColor:!SystemWindow removeSelector: #drawWindowBodyOn:color:!SystemWindow removeSelector: #drawWindowBodyOn:roundCorners:widgetsColor:!SystemWindow removeSelector: #drawWindowBodyOn:widgetsColor:!SystemWindow removeSelector: #drawWindowTitleAreaOn:roundCorners:titleColor:useTitleGradient:!SystemWindow removeSelector: #titleAreaRect!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString collapsedFrame fullFrame isCollapsed updatablePanes widgetsColor layoutMorph topAdjuster bottomAdjuster leftAdjuster rightAdjuster topLeftAdjuster bottomLeftAdjuster topRightAdjuster bottomRightAdjuster'	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon TopWindow'	poolDictionaries: ''	category: 'Morphic-Windows'!PluggableButtonMorph class removeSelector: #buttonGradient!PluggableButtonMorph class removeSelector: #buttonGradientPressed!PluggableButtonMorph class removeSelector: #initialize!PluggableButtonMorph class removeSelector: #roundedCornerBL!PluggableButtonMorph class removeSelector: #roundedCornerBLPressed!PluggableButtonMorph class removeSelector: #roundedCornerBR!PluggableButtonMorph class removeSelector: #roundedCornerBRPressed!PluggableButtonMorph class removeSelector: #roundedCornerTL!PluggableButtonMorph class removeSelector: #roundedCornerTLPressed!PluggableButtonMorph class removeSelector: #roundedCornerTR!PluggableButtonMorph class removeSelector: #roundedCornerTRPressed!!PluggableButtonMorph class reorganize!('example' example)('instance creation' model:action: model:stateGetter:action: model:stateGetter:action:label:)!!classDefinition: #PluggableButtonMorph category: #'Morphic-Windows'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font icon getStateSelector actionSelector isPressed mouseIsOver magnifiedIcon actWhen'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Windows'!FormCanvas initialize!FormCanvas removeSelector: #windowFrame:color:radius:border:labelHeight:gradientTop:gradientBottom:!!classDefinition: #FormCanvas category: #'Morphic-Support'!Canvas subclass: #FormCanvas	instanceVariableNames: 'origin clipRect form port shadowColor'	classVariableNames: 'AccessProtect AuxBlitter AuxForm CachedForms'	poolDictionaries: ''	category: 'Morphic-Support'!!FillInTheBlankMorph reorganize!('accessing' response response: selectionInterval)('event handling' handlesMouseDown: mouseDown:)('geometry' extent:)('initialization' createAcceptButton createCancelButton createQueryTextMorph: createTextPaneExtent:acceptBoolean: defaultColor delete editorClass initialize responseUponCancel: setDefaultParameters setQuery:initialAnswer:answerExtent:acceptOnCR: setQuery:initialAnswer:answerHeight:acceptOnCR: updateColor)('invoking' getUserResponse morphicLayerNumber)('menu' accept cancel)('drawing' drawOn:)!