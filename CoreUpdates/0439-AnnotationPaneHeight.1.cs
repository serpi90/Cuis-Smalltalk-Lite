'From Cuis 2.0 of 12 February 2010 [latest update: #418] on 24 February 2010 at 12:26:17 am'!!CodeHolder methodsFor: 'annotation' stamp: 'jmv 2/24/2010 00:21'!defaultAnnotationPaneHeight	"Answer the receiver's preferred default height for new annotation panes."	^ StrikeFont default height * 2 + 8! !!SystemWindow methodsFor: 'geometry' stamp: 'jmv 2/24/2010 00:24'!minPaneHeightForReframe	^StrikeFont default height + Preferences scrollbarThickness + 10! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'jmv 2/24/2010 00:25'!spawnOffsetReframeHandle: event divider: divider 	"The mouse has crossed a secondary (fixed-height) pane divider.  Spawn a reframe handle."	"Only supports vertical adjustments."	| siblings topAdjustees bottomAdjustees topOnly bottomOnly resizer pt delta minY maxY cursor |	owner ifNil: [^self	"Spurious mouseLeave due to delete"].	self isCollapsed ifTrue: [^self].	((self world ifNil: [^self]) firstSubmorph isKindOf: NewHandleMorph) 		ifTrue: [^self	"Prevent multiple handles"].	divider layoutFrame ifNil: [^self].	(#(#top #bottom) includes: divider resizingEdge) ifFalse: [^self].	siblings := divider owner submorphs select: [:m | m layoutFrame notNil].	divider resizingEdge = #bottom 		ifTrue: 			[cursor := Cursor resizeTop.			topAdjustees := siblings select: 							[:m | 							m layoutFrame topFraction = divider layoutFrame bottomFraction 								and: [m layoutFrame topOffset >= divider layoutFrame topOffset]].			bottomAdjustees := siblings select: 							[:m | 							m layoutFrame bottomFraction = divider layoutFrame topFraction 								and: [m layoutFrame bottomOffset >= divider layoutFrame topOffset]]].	divider resizingEdge = #top 		ifTrue: 			[cursor := Cursor resizeBottom.			topAdjustees := siblings select: 							[:m | 							m layoutFrame topFraction = divider layoutFrame bottomFraction 								and: [m layoutFrame topOffset <= divider layoutFrame bottomOffset]].			bottomAdjustees := siblings select: 							[:m | 							m layoutFrame bottomFraction = divider layoutFrame topFraction 								and: [m layoutFrame bottomOffset <= divider layoutFrame bottomOffset]]].	topOnly := topAdjustees copyWithoutAll: bottomAdjustees.	bottomOnly := bottomAdjustees copyWithoutAll: topAdjustees.	(topOnly isEmpty or: [bottomOnly isEmpty]) ifTrue: [^self].	minY := bottomOnly inject: -9999				into: [:y :m | y max: m top + StrikeFont default height + 6 + (divider bottom - m bottom)].	maxY := topOnly inject: 9999				into: [:y :m | y min: m bottom - 48 - (m top - divider top)].	pt := event cursorPoint.	resizer := NewHandleMorph new 				followHand: event hand				forEachPointDo: 					[:p | 					delta := (p y min: maxY max: minY) - pt y.					topAdjustees 						do: [:m | m layoutFrame topOffset: m layoutFrame topOffset + delta].					bottomAdjustees 						do: [:m | m layoutFrame bottomOffset: m layoutFrame bottomOffset + delta].					divider layoutChanged.					pt := pt + delta]				lastPointDo: [:p | ]				withCursor: cursor.	event hand world addMorphInLayer: resizer.	resizer startStepping! !