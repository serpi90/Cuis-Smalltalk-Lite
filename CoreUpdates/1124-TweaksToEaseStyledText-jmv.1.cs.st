'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 4 November 2011 at 10:37:28 am'!!classDefinition: #TheWorldMenu category: #'Morphic-Menus'!Object subclass: #TheWorldMenu	instanceVariableNames: 'myWorld myHand '	classVariableNames: 'ExtraOpenCommands '	poolDictionaries: ''	category: 'Morphic-Menus'!!Editor methodsFor: 'menu messages' stamp: 'jmv 11/4/2011 10:13'!   clipboardStringOrText	| clipContents |	clipContents _ Clipboard retrieveStringOrText.	^ ((clipContents is: #Text) and: [ clipContents respondsTo: #asNonStyledText ])		ifTrue: [ clipContents asNonStyledText ]		ifFalse: [ clipContents ]! !!TheWorldMenu methodsFor: 'action' stamp: 'jmv 11/4/2011 10:23'!         doMenuItem: aCollection with: event	| realTarget selector nArgs |	selector _ aCollection second.	nArgs _ selector numArgs.	realTarget _ aCollection first.	realTarget == #myWorld ifTrue: [realTarget _ myWorld].	realTarget == #myHand ifTrue: [realTarget _ myHand].	realTarget == #theWorldMenu ifTrue: [realTarget _ self].	^nArgs = 0 		ifTrue:[realTarget perform: selector]		ifFalse:[realTarget perform: selector with: event].! !!TheWorldMenu methodsFor: 'construction' stamp: 'jmv 11/4/2011 10:18'!  openMenu	"Build the open window menu for the world."	| menu |	menu _ self menu: 'Open...'.	ExtraOpenCommands ifNotNil: [		self fillIn: menu from: ExtraOpenCommands ].	self fillIn: menu from: {		{'Browser' . { self . #openBrowser}. 'A five-paned tool that lets you see all the code in the system'}.		{'Workspace' . {self . #openWorkspace}. 'A window for evaluating Smalltalk expressions' }.		{'Text Editor' . {self . #openTextEditor}. 'A window for composing text' }.		{'File List' . {self . #openFileList} . 'A tool allowing you to browse any file' }.		{'Transcript' . {self . #openTranscript}. 'A window used to report messages sent to Transcript' }.		{ 'Process Browser' . { ProcessBrowserWindow . #openProcessBrowser } }.		{ 'Emergency Evaluator'. { Transcripter. #emergencyEvaluator } }.		"{'inner world' . { WorldWindow . #test1} }."		nil.		{'Message Names' . { self . #openMessageNames} . 'A tool for finding and editing methods that contain any given keyword in their names.'}.		nil.		{'Simple Change Sorter' . {self . #openChangeSorter1} . 'A tool allowing you to view the methods in a single change set' }.		{'Dual Change Sorter' . {self . #openChangeSorter2} . 'A tool allowing you to compare and manipulate two change sets concurrently' }.		nil.		{'SUnit Test Runner' . {TestRunnerWindow . #openTestRunner} . 'A tool allowing you to compare and manipulate two change sets concurrently' }.	}.	^menu! !!TheWorldMenu class methodsFor: 'services' stamp: 'jmv 11/4/2011 10:28'!                       addExtraOpenCommands: anArray	| labels |	ExtraOpenCommands _ ExtraOpenCommands		ifNil: [ anArray ]		ifNotNil: [			labels _ (anArray collect: [ :a | a first ]) asSet.			anArray, { nil} , (ExtraOpenCommands reject: [ :any | any notNil and: [ labels includes: any first ]])]! !!Theme methodsFor: 'menus' stamp: 'jmv 11/4/2011 10:32'!            miscellaneousIcons	"Everything else."	^ {		#('restore display (r)' 'set display depth...' 'move windows onscreen' 'Utilities saveDisplay.') -> #displayIcon.		#('changes...' 'dual change sorter' 'change sets with this method' 'find a change sorter' 'recent changes in file' 'Undo / Redo history') -> #changesIcon.		#('print PS to file...' ) -> #printIcon.		#('find again (g)' 'full stack (k)') -> #systemIcon.		#('print it (p)' 'check change set for slips') -> #printIcon.		#('accept (s)' 'make changes go to me (m)') -> #acceptIcon.		#('cancel (l)' ) -> #cancelIcon.		#('debug...' 'debug it' 'toggle break on entry') -> #debugIcon.		#('close' 'close all debuggers' 'close top window') -> #closeIcon.		#('collapse' 'hide taskbar' 'collapse all windows') -> #collapseIcon.		#('expand / contract' 'show taskbar' 'expand all windows') -> #expandIcon.		#('menu') -> #windowMenuIcon.		#('browse all' 'browser' 'browse it (b)' 'MessageTally UI and browse' 'browse recent submissions' 'browse full (b)' 'find changed browsers...' 'browse (b)' 'browse my changes') -> #editFindReplaceIcon.		#('workspace' 'workspace with contents') -> #terminalIcon.		#('styled text editor' 'text editor' 'edit this list' 'edit postscript...' 'add postscript...') -> #textEditorIcon.		#('file list' 'find a fileList') -> #systemFileManagerIcon.		#('transcript' 'find a transcript' 'Transcript clear.' 'log to transcript') -> #printerIcon.		#('process browser' 'vm statistics' 'MessageTally all Processes') -> #systemMonitorIcon.		#('emergency evaluator' 'conflicts with other change sets' 'check for slips' 'conflicts with change set opposite' 'conflicts with category opposite') -> #emblemImportantIcon.		#('simple change sorter') -> #halfRefreshIcon.		#('SUnit Test Runner') -> #weatherFewCloudsIcon.		#('system fonts...' 'set font... (k)') -> #preferencesDesktopFontIcon.		#('full screen on') -> #viewFullscreenIcon.		#('full screen off') -> #exitFullscreenIcon.		#('set desktop color...') -> #wallpaperIcon.		#('preferences...' 'what to show...') -> #preferencesIcon.		#('command-key help') -> #keyboardShortcutsIcon.		#('world menu help') -> #globeIcon.		#('useful expressions' 'class comments with it' 'check for uncommented methods' 'check for uncommented classes') -> #chatIcon.		#('set author initials...' 'check for other authors' 'check for any other authors') -> #usersIcon.		#('space left') -> #removableMediaIcon.		#('start drawing all again' 'window color...') -> #graphicsIcon.		#('start stepping again') -> #mediaPlaybackStartIcon.		#('file out current change set' 'fileOut' 'file out (o)') -> #fileOutIcon.		#('recently logged changes...' 'versions (v)' 'recent classes... (r)' 'trim history' 'profile messages (m)') -> #clockIcon.		#('senders of it (n)' 'senders of... (n)' 'local senders of...' 'senders (n)') -> #mailForwardIcon.		#('implementors of it (m)' 'implementors of... (m)' 'implementors of sent messages') -> #developmentIcon.		#('references to it (N)') -> #addressBookIcon.		#('class var refs...' 'class refs (N)' 'class variables' 'class vars' 'local implementors of...' 'subclass template') -> #classIcon.		#('inst var refs...' 'inst var defs...' 'sample instance' 'inspect Pointers (P)') -> #instanceIcon.		#('Use Selection for Find (h)' 'rename class ...' 'rename...' 'change title...') -> #saveAsIcon.		#('method source with it' 'browse method (O)' 'check for uncategorized methods') -> #scriptIcon.		#('method strings with it (E)') -> #genericTextIcon.		#('browse hierarchy (h)' 'move to top' 'promote to top of list') -> #goTopIcon.		#('move up' 'make next-to-topmost') -> #goUpIcon.		#('move to bottom' 'send to back' 'send top window to back') -> #goBottomIcon.		#('inheritance (i)' 'move down') -> #goDownIcon.		#('browse protocol (p)' 'spawn sub-protocol') -> #spreadsheetIcon.		#('spawn full protocol') -> #speadsheetTemplateIcon.		#('alphabetize') -> #fontXGenericIcon.		#('browse' 'show category (C)' 'categorize all uncategorized' 'select change set...' 'view affected class categories') -> #packageIcon.		#('remove from current change set' 'remove empty categories' 'subtract other side (-)' 'remove from this browser') -> #listRemoveIcon.		#('add to current change set' 'add all meths to current chgs' 'add preamble (p)') -> #listAddIcon.		#('toggle diffing (D)' 'toggle selections') -> #switchIcon.		#('reorganize' 'create inst var accessors' 'ChangeSorter reorderChangeSets.' 'reorder all change sets' 'by name' 'by size' 'by date') -> #sendReceiveIcon.		#('unsent methods' 'unreferenced class vars' 'unreferenced inst vars' 'Undeclared inspect.' 'Undeclared removeUnreferencedKeys; inspect.' 'ChangeSorter removeEmptyUnnamedChangeSets.' 'check for unsent messages') -> #junkIcon.		#('update' 'turn on auto-update (a)' 'update list (u)') -> #updateIcon.		#('find changed windows...') -> #newWindowIcon.		#('make undraggable') -> #pushPinIcon.		#('Utilities saveScreenshot.') -> #stillCameraIcon.		#('add new directory') -> #newFolderIcon.		#('select all' 'deselect all') -> #selectAllIcon.		#('sort by date') -> #dateIcon.		#('justified') -> #formatJustifyFillIcon.		#('centered') -> #formatJustifyCenterIcon.		#('set alignment...' 'leftFlush') -> #formatJustifyLeftIcon.		#('rightFlush') -> #formatJustifyRightIcon.		#('signal Semaphore (S)') -> #haloHelpIcon.		#('Change Paragraph Style...' 'Change Character Style...' 'Remove Character Style' 'Replace all uses of Paragraph Style...' 'Replace all uses of Character Style...') -> #fontXGenericIcon.	}! !!classDefinition: #TheWorldMenu category: #'Morphic-Menus'!Object subclass: #TheWorldMenu	instanceVariableNames: 'myWorld myHand'	classVariableNames: 'ExtraOpenCommands'	poolDictionaries: ''	category: 'Morphic-Menus'!