'From Cuis 1.0 of 6 March 2009 [latest update: #5989] on 9 March 2009 at 10:26:19 am'!!CompiledMethod methodsFor: 'printing' stamp: 'jmv 3/9/2009 09:25'!author	"(CompiledMethod compiledMethodAt: #timeStamp) author"		^(self timeStamp copyUpTo: $ ) copyWithout: Character lf.! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:21'!agreedContributors"This is a list of all Squeak contributors whom Yoshiki Ohshima contacted and get the favorable words, but have not returned a signed distribution agreement yet.Nov 25th  2008jmv - Taken from Yoshiki Ohshima's squeak4.0-relicensingTools3.zip---initials         name"^ #('ac'               'Andrew Catton''pad'		'Pierre-Andre Dreyfuss')! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:26'!allContributors	| bag author |	bag _ Bag new.	Smalltalk allBehaviorsDo: [ :behavior |		behavior methodsDo: [ :compiledMethod |			author _ compiledMethod author.			author notEmpty ifTrue: [				bag add: author ]]].	^bag! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:34'!contributionsOf: aString	"	Smalltalk contributionsOf: 'JMV'	"	| author answer |	answer _ OrderedCollection new.	Smalltalk allBehaviorsDo: [ :behavior |		behavior methodsDo: [ :compiledMethod |			author _ compiledMethod author.			aString = author ifTrue: [				answer add: compiledMethod who]]].	^answer! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:43'!missingAuthorsWithMethods	"	Smalltalk missingAuthorsWithMethods	"	| author signatories answer |	answer _ Dictionary new.	signatories _ self okContributors.	Smalltalk allBehaviorsDo: [ :behavior |		behavior methodsDo: [ :compiledMethod |			author _ compiledMethod author.			(author isEmpty or: [ signatories includes: author]) ifFalse: [				(answer at: author ifAbsentPut: [OrderedCollection new])					add: compiledMethod who]]].	^answer! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:21'!newContributors"This is a list of all Squeak contributors who started after the relicensing effort was started and therefore know that the license is under MIT.Nov 26th  2008jmv - Taken from Yoshiki Ohshima's squeak4.0-relicensingTools3.zip---initials         name"^ #('aw'               'Alessandro Warth''be'			'Bernd Eckardt''cjs'			'(from trac)''eem'		'Eliot Emilio Miranda''jf'			'Jan Fietz''lg'               'Luke Gorrie''jl'			'Jens Linke''JSM'	   'John S Mcintosh''thf'			'an Impara employee''sjg'			'Simon Guest''kph'		'Keith Hodges''kks'            'kks''meta-auto'	'generated code''programmatic'     'generated code''wbk'		'Bryce Kampjes')! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:42'!okContributors	"Answer initials and names of authors whose code is under MIT license"	| answer |	answer _ Set new.	self returnedSignatories pairsDo: [:initials :name | answer add: initials ].	self newContributors pairsDo: [:initials :name | answer add: initials ].	self agreedContributors pairsDo: [:initials :name | answer add: initials ].	^answer! !!SystemDictionary methodsFor: 'code authors' stamp: 'jmv 3/9/2009 09:21'!returnedSignatories"This is a list of all Squeak contributors who have returned a signed distribution agreement.Nov 25th  2008jmv - Taken from Yoshiki Ohshima's squeak4.0-relicensingTools3.zip---initials         name"^ #('AB'               'Alexandre Bergel''ab'               'Avi Bryant or Alexandre Bergel''ACG'              'Andrew C. Greenberg''acg'              'Andrew C. Greenberg''ack'              'Alan Kay''ads'              'Adam Spitz''AFi'              'Alain Fischer''ajh'              'Anthony Hannan''aka'              'Mark Guzdial''al'               'Adrian Lienhard or Alexander Lazarevic''aoy'              'Andres Otaduy''apb'              'Andrew P. Black''apl'              'Alain Plantec''ar'               'Andreas Raab''???'               'Andreas Raab''asm'              'Alejandro Magistrello''avi'              'Avi Bryant''ba'			'Bob Arning''bf'               'Bert Freudenberg''BEO'              'Bruce O''Neel ''beo'              'Bruce O''Neel ''BG'               'Boris Gaertner''bg'               'Boris Gaertner''bh'               'Bob Hartwig''BJP'              'Bijan Parsia''BJP9/9/1998'              'Bijan Parsia''bk'              'Bolot Kerimbaev''bkv'              'Brent Vukmer''bob'			'Bob Arning''bolot'            'Bolot Kerimbaev''bootstrap'        'Pavel Krivanek''BP'               'Brent Pinkney''bp'               'Brent Pinkney or Bernhard Pieber''brp'              'Brent Pinkney''brp`'              'Brent Pinkney''btr'              'Brian Rice''bvs'              'Ben Schroeder''cbc'              'Chris Cunningham''ccn'              'Chris Norton''ccn+ceg'          'Chris Norton and Carl Gundel''ceg'       'Carl Gundel''CdG'              'Cees de Groot''cds'              'C. David Shaffer''chronograph'               'Tetsuya Hayashi''cmm'              'Chris Muller''crl'              'Craig Latta''cwp'              'Colin Putney''daf'              'Dave Faught''dao'              'danil osipchuk''das'              'David A Smith''DAS'              'David A Smith''dc'               'Damien Cassou''dd'               'Dominique Dutoit''de'               'Scott Wallace''dew'              'Doug Way''DF'               'Diego Fernandez''dgd'              'Diego Gomez Deck''dhhi'             'Dan Ingalls''di'               'Dan Ingalls''di'               'Dan Ingalls''6/5/97'               'Dan Ingalls''6/6/97'               'Dan Ingalls''6/7/97'               'Dan Ingalls''6/8/97'               'Dan Ingalls''6/9/97'               'Dan Ingalls''6/10/97'               'Dan Ingalls''6/11/97'               'Dan Ingalls''6/13/97'               'Dan Ingalls''6/18/97'               'Dan Ingalls''djp'              'David J. Pennell''DM'               'Duane Maxwell''dm'               'Duane Maxwell/EntryPoint''DSM'              'Duane Maxwell''DSM10/15/1999'              'Duane Maxwell''drm'              'Delbert Murphy''dtl'              'Dave Lewis''dv'              'Daniel Vainsencher''dvf'              'Daniel Vainsencher''dvf6/10/2000'              'Daniel Vainsencher''eat'              'Eric Arseneau Tremblay''edc'              'Edgar DeCleene or Marcus Denker''efc'              'Eddie Cottongim''efo'              'Emilio Oca''em'               'Ernest Micklei?''emm'              'Ernest Micklei''es'               'Enrico Spinielli''fbs'              'Frank Shearar''FBS'              'Frank Shearar''fbs'              'Frank Shearar''fc'               'Frank Caggiano''fcs'              'Frank Sergeant''fm'               'Florin Mateoc''gh'               'Goran Krampe (nee Hultgren)''gk'               'Goran Krampe (nee Hultgren)''gm'               'German Morales''go'               'Georg Gollmann''gsa'              'German Arduino''HEG'              'Henrik Ekenberg''HilaireFernandes' 'Hilaire Fernandes''hk'               'Herbert Konig''hmm'              'Hans-Martin Mosner''hpt'              'Hernan Tylim''huma'             'Lyndon Tremblay''ich.'             'Yuji Ichikawa''ikp'              'Ian Piumarta''jaf'              'Jan Fietz''jam'              'Javier Musa''jb'              'Jim Benson''jcg'              'Joshua Gargus''jdf'              'David Farber''jdr'              'Javier Diaz-Reinoso''je'               'Joern Eyrich''je77'             'Jochen Rick''JF'               'Julian Fitzell''jf'               'Julian Fitzell''jhm'              'John Maloney''jm'              'John Maloney''jm'              'John Maloney''jla'              'Jerry Archibald''jlb'              'Jim Benson''jmb'              'Hans Baveco''JMM'              'John McIntosh''JMV'              'Juan Manuel Vuletich''jmv'              'Juan Manuel Vuletich''jon'              'Jon Hylands''JP'               'Joseph Pelrine''jp'               'Joseph Pelrine''jrm'              'John-Reed Maffeo''jrp'              'John Pierce''jsp'              'Jeff Pierce''JW'               'Jesse Welton''jws'			'John Sarkela''JWS'		'John Sarkela''ka'               'Kazuhiro Abe''kfr'              'Karl Ramberg''KLC'              'Ken Causey''klc'              'Ken Causey''KR'               'korakurider''KTT'              'Kurt Thams''kwl'              'Klaus D. Witzel''ky'               'Koji Yokokawa''laza'             'Alexander Lazarevic''LB'               'Leo Burd''LC'               'Leandro Caniglia''lc'               'Leandro Caniglia''LEG'              'Gerald Leeb''len'              'Luciano Esteban Notarfrancesco''lr'               'Lukas Renggli''lrs'              'Lorenzo Schiavina''ls'               'Lex Spoon''LS'               'Lex Spoon''m3r'              'Maurice Rabb''MAL'              'Michael Latta''mas'              'Mark Schwenk''m'                'Marcus Denker''MD'               'Marcus Denker''md'               'Marcus Denker''md\'              'Marcus Denker''mdr'              'Mike Rutenberg''mga'              'Markus Galli''miki'             'Mikael Kindborg''mikki'            'Mikael Kindborg''mir'              'Michael Rueger''mist'             'Michal Starke''MJG'              'Mark Guzdial''mjg'              'Mark Guzdial''mjg8/31/1998'              'Mark Guzdial''mjg9/9/1998'              'Mark Guzdial''mjg9/23/1998'              'Mark Guzdial''mjr'              'Mike Roberts''mjt'              'Mike Thomas''mk'               'Matej Kosik''mlr'              'Michael Rueger''MPW'              'Marcel Weiher''mpw'              'Marcel Weiher''mrm'              'Martin McClure''MPH'              'Michael Hewner''MU'               'Masashi Umezawa''mu'               'Masashi Umezawa''mw'               'Martin Wirblat''nb'               'Naala Brewer''nice'             'Nicolas Cellier''nk'               'Ned Konz''nop'              'Jay Carlson''Noury'            'Noury Bouraqadi''NS'               'Nathanael Schaerli''panda'            'Michael Rueger''PHK'              'Peter Keeler''pk'               'Pavel Krivanek''pm'               'Patrick Mauritz''pnm'              'Paul McDonough''pnm8/23/2000'              'Paul McDonough''RAA'              'Bob Arning''RAA3/28/2000'              'Bob Arning''r++'              'Gerardo Richarte''raa'              'Bob Arning''raok'             'Richard A. O''Keefe''rbb'              'Brian Brown''rca'              'Russell Allen''reThink'          'Paul McDonough''rew'              'Roger Whitney''rhi'              'Robert Hirschfeld''rh'              'Robert Hirschfeld''Rik'              'Rik Fischer SmOOdy''rk'               'Ram Krishnan''rkris'               'Ram Krishnan''RJT'              'Ron Teitelbaum''RM'			'Rick McGeer''rr'               'Romain Robbes''rw'               'Roel Wuyts''rw'              'Robert Withers''rww'              'Robert Withers''sbw'              'Stephan B. Wessels''SD'               'Stephane Ducasse''sd'               'Stephane Ducasse''stephaneducassse'               'Stephane Ducasse''sge'              'Steve Elkins''shrink'           'Pavel Krivanek''slg'              'Steve Gilbert''sm'               'Simon Michael''sma'              'Stefan Matthias Aust''sn'               'Suslov Nikolay''spfa'             'Stephane Rollandin''sps'              'Steven Swerling''sqr'              'Andres Valloud''SqR'              'Andres Valloud''SqR!!!!'            'Andres Valloud''SqR!!!!!!!!'         'Andres Valloud''sr'               'Stephan Rudlof''ssa'              'Sam S. Adams''Sames'            'Samuel S. Shuster''SSS'              'Samuel S. Shuster''st'               'Samuel Tardieu''stephaneducasse'  'Stephane Ducasse''stp'              'Stephen Travis Pope''sumim'            'Masato Sumi''svp'              'Stephen Vincent Pair''sw'               'Scott Wallace''sws'              'Scott Wallace''T2'               'Toshiyuki Takeda''tak'              'Takashi Yamamiya''tao'              'Tim Olson''tb'               'Todd Blanchard or Torsten Bergman''TBn'              'Torsten Bergmann''tbn'              'Torsten Bergmann''tetha'            'Tetsuya Hayashi''tfei'             'The Fourth Estate, Inc.''th'               'Torge Husfeldt''ti'               'Tobias Isenberg''TJ'               'TJ Leone''tk'               'Ted Kaehler''tk9/13/97'               'Ted Kaehler''tk12/6/2004'               'Ted Kaehler''tk11/29/2004'               'Ted Kaehler''tk11/26/2004'               'Ted Kaehler''tk'               'Thomas Kowark''tlk'              'Tom Koenig''TN'               'korakurider''tonyg'		'Tony Garnock-Jones''TPR'              'Tim Rowledge''tpr'              'Tim Rowledge''TAG'              'Travis Griggs''TRee'             'Trygve Reenskaug''ts'          'Shortsleeved''Tsutomu'          'Tsutomu Hiroshima''tween'            'Andy Tween''vb'               'Vassili Bykov''vbdew'               'Vassili Bykov and Doug Way''vj'               'Vladimir Janousek''wiz'              'Jerome Peace''wod'              'Bill Dargel''ykoubo'           'Koji Yokokawa''yo'               'Yoshiki Ohshima''ward'             'Ward Cunningham''zz'               'Serge Stinckwich')! !SystemDictionary removeSelector: #contributorsNotSignatories!SystemDictionary removeSelector: #signatories!SystemDictionary removeSelector: #signatoriesString!!SystemDictionary reorganize!('accessing' organization)('class names' classNamed: classNames flushClassNameCache forgetClass:logged: hasClassNamed: removeClassNamed: renameClass:as: renameClassNamed:as:)('dictionary access' associationAtOrAbove:ifAbsent: associationOrUndeclaredAt: at:put: atOrAbove:ifAbsent: atOrBelow:ifAbsent: environmentForCategory: includesKeyOrAbove: kernelCategories scopeFor:from:envtAndPathIfFound:)('housekeeping' browseObsoleteMethodReferences browseUndeclaredReferences cleanOutUndeclared compressSources condenseChanges condenseSources forgetDoIts macroBenchmark1 macroBenchmark3 makeInternalRelease obsoleteBehaviors obsoleteClasses obsoleteMethodReferences reclaimDependents recompileAllFrom: removeAllLineFeeds removeEmptyMessageCategories testDecompiler testFormatter testFormatter2 verifyChanges)('image, changes name' changeImageNameTo: changesName fullNameForChangesNamed: fullNameForImageNamed: imageName imageName: imagePath sourcesName vmPath)('memory space' bytesLeft bytesLeft: bytesLeftString createStackOverflow garbageCollect garbageCollectMost installLowSpaceWatcher lowSpaceThreshold lowSpaceWatcher lowSpaceWatcherProcess memoryHogs okayToProceedEvenIfSpaceIsLow primBytesLeft primLowSpaceSemaphore: primSignalAtBytesLeft: primitiveGarbageCollect signalLowSpace useUpMemory useUpMemoryWithArrays useUpMemoryWithContexts useUpMemoryWithTinyObjects)('code authors' agreedContributors allContributors contributionsOf: missingAuthorsWithMethods newContributors okContributors returnedSignatories)('miscellaneous' exitToDebugger extraVMMemory extraVMMemory: getSystemAttribute: getVMParameters handleUserInterrupt hasMorphic listBuiltinModule: listBuiltinModules listLoadedModule: listLoadedModules logError:inContext:to: osVersion platformName platformSubtype setMacFileInfoOn: unloadModule: verifyMorphicAvailability vmParameterAt: vmParameterAt:put: vmVersion)('objects from disk' objectForDataStream: storeDataOn:)('printing' printElementsOn:)('profiling' clearProfile dumpProfile profile: startProfiling stopProfiling)('retrieving' allBehaviorsDo: allCallsOn: allCallsOn:and: allClasses allClassesDo: allClassesImplementing: allGlobalRefs allGlobalRefsWithout: allImplementedMessages allImplementedMessagesWithout: allImplementorsOf: allImplementorsOf:localTo: allMethodsInCategory: allMethodsWithSourceString:matchCase: allMethodsWithString: allObjectsDo: allObjectsSelect: allPrimitiveMessages allPrimitiveMethodsInCategories: allSelect: allSelectNoDoits: allSentMessages allSentMessagesWithout: allUnSentMessages allUnSentMessagesIn: allUnSentMessagesWithout: allUnimplementedCalls allUnusedClassesWithout: isThereAnImplementorOf: numberOfImplementorsOf: pointersTo: pointersTo:except: pointersToItem:of: poolUsers selectorsWithAnyImplementorsIn: unimplemented)('shrinking' abandonSources abandonTempNames computeImageSegmentation discardFFI discardFlash discardMIDI discardNetworking discardOddsAndEnds discardSpeech discardTrueType discardWonderland fileOutAndRemove: fileOutAndRemove:retainingRoots: fileOutAndRemove:withOtherClasses:andOtherMessages: lastRemoval presumedSentMessages removeAllUnSentMessages removeSelector: reportClassAndMethodRemovalsFor: unusedClasses unusedClassesAndMethodsWithout: writeImageSegmentsFrom:withKernel:)('snapshot and quit' add:toList:after: addToShutDownList: addToShutDownList:after: addToStartUpList: addToStartUpList:after: lastQuitLogPosition processShutDownList: processStartUpList: quitPrimitive readDocumentFile removeFromShutDownList: removeFromStartUpList: saveAs saveAsEmbeddedImage saveAsNewVersion saveChangesInFileNamed: saveImageInFileNamed: saveImageSegments saveSession send:toClassesNamedIn:with: setGCParameters setPlatformPreferences shutDown shutDownSound snapshot:andQuit: snapshotEmbeddedPrimitive snapshotPrimitive unbindExternalPrimitives)('sources, change log' aboutThisSystem assureStartupStampLogged closeSourceFiles copyright currentChangeSetString datedVersion endianness event: externalizeSources forceChangesToDisk internalizeChangeLog internalizeSources isBigEndian isLittleEndian lastUpdateString logChange: logChange:preamble: openSourceFiles recover: systemInformationString timeStamp: version writeRecentCharacters:toFileNamed: writeRecentToFile)('special objects' clearExternalObjects compactClassesArray externalObjects hasSpecialSelector:ifTrueSetByte: recreateSpecialObjectsArray registerExternalObject: specialNargsAt: specialObjectsArray specialSelectorAt: specialSelectorSize specialSelectors unregisterExternalObject:)('copying' veryDeepCopyWith:)('deprecated' removeClassFromSystem:logged: swapBytesIn:from:to:)('toDeprecate' getFileNameFromUser snapshot:andQuit:embedded:)('ui' confirmRemovalOf:on: inspectGlobals)('browsing' browseAllAccessesTo:from: browseAllCallsOn: browseAllCallsOn:and: browseAllCallsOn:localTo: browseAllCallsOnClass: browseAllImplementorsOf: browseAllImplementorsOf:localTo: browseAllImplementorsOfList: browseAllImplementorsOfList:title: browseAllMethodsInCategory: browseAllObjectReferencesTo:except:ifNone: browseAllSelect: browseAllSelect:name:autoSelect: browseAllStoresInto:from: browseAllUnSentMessages browseAllUnimplementedCalls browseClassCommentsWithString: browseClassesWithNamesContaining:caseSensitive: browseInstVarDefs: browseInstVarRefs: browseMessageList:name: browseMessageList:name:autoSelect: browseMethodsWhoseNamesContain: browseMethodsWithSourceString: browseMethodsWithString: browseMethodsWithString:matchCase: browseObsoleteReferences showMenuOf:withFirstItem:ifChosenDo: showMenuOf:withFirstItem:ifChosenDo:withCaption:)!