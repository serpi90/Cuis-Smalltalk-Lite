'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 19 November 2010 at 11:26:52 am'!!classDefinition: #DarkColorTheme category: #'Theme-Themes'!ColorTheme subclass: #DarkColorTheme	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Theme-Themes'!!DarkColorTheme commentStamp: 'jmv 11/18/2010 13:15' prior: 0!Most colors are the based on ColorTheme:	baseColor adjustSaturation: -0.1 brightness: -0.7!!classDefinition: #FormCanvas category: #'Morphic-Support'!Canvas subclass: #FormCanvas	instanceVariableNames: 'origin clipRect form port shadowColor auxForm auxBlitter '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Support'!!classDefinition: #SoftColorTheme category: #'Theme-Themes'!ColorTheme subclass: #SoftColorTheme	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Theme-Themes'!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes paneColor '	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon TopWindow RoundedCornerBR RoundedCornerBL RoundedCornerTR RoundedCornerTL TitleGradient '	poolDictionaries: ''	category: 'Morphic-Windows'!!CodeHolder methodsFor: 'controls' stamp: 'jmv 11/18/2010 12:50'!addOptionalButtonsTo: window at: fractions plus: verticalOffset	"If the receiver wishes it, add a button pane to the window, and answer the verticalOffset plus the height added"	| delta buttons divider |	self wantsOptionalButtons ifFalse: [^verticalOffset].	delta _ self defaultButtonPaneHeight.	buttons _ self optionalButtonRow 		color: (Display depth <= 8			ifTrue: [ Color transparent ]			ifFalse: [ (ColorTheme current buttonColorFrom: self class windowColor) ]).	divider _ BorderedSubpaneDividerMorph forBottomEdge.	divider extent: 4@4; color: Color transparent; borderColor: #raised; borderWidth: 2.	window 		addMorph: buttons		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@verticalOffset corner: 0@(verticalOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(verticalOffset + delta - 1) corner: 0@(verticalOffset + delta))).	^ verticalOffset + delta! !!CodeHolder methodsFor: 'controls' stamp: 'jmv 11/19/2010 09:12'!decorateForInheritance	"Check to see if the currently-viewed method has a super send or an override, and if so, change screen feedback, unless the #decorateBrowserButtons says not to."	| aColor aButton flags |	(aButton _ self inheritanceButton) ifNil: [^ self].	((currentCompiledMethod isKindOf: CompiledMethod) and: [Preferences decorateBrowserButtons])		ifFalse: [^aButton offColor: Color transparent].	"This table duplicates the old logic, but adds two new colors for the cases where there is a superclass definition, but this method doesn't call it."	flags _ 0.	self isThisAnOverride ifTrue: [ flags _ flags bitOr: 4 ].	currentCompiledMethod sendsToSuper ifTrue: [ flags _ flags bitOr: 2 ].	self isThereAnOverride ifTrue: [ flags _ flags bitOr: 1 ].	aColor _ {		"This is NOTan override. There is no super implementation."		Color transparent.								"no sends to super. there is not an override"		(Color tan lighter alpha: 0.5).					"no sends to super. there is an override"		(Color red alpha: 0.5).							"sends to super. there is not an override. Error: no super to call"		(Color red alpha: 0.5).							"sends to super. there is  an override. Error: no super to call"		"This is an override. There is some super implementation"		(Color red muchLighter alpha: 0.5).				"doesn't have sub; has super but doesn't call it"		(Color r: 0.94 g: 0.823 b: 0.673 alpha: 0.5).		"has sub; has super but doesn't call it"		(Color green muchLighter alpha: 0.5).			"doesn't have sub; has super and callsl it"		(Color blue muchLighter alpha: 0.5).			"has sub; has super and callsl it"	} at: flags + 1.	aButton offColor: aColor! !!CodeHolder methodsFor: 'diffs' stamp: 'jmv 11/18/2010 13:21'!lineDiffButton	"Return a checkbox that lets the user decide whether regular diffs should be shown or not"	| outerButton button |	outerButton _ AlignmentMorph proportional.	outerButton		 borderWidth: 2;		 borderColor: #raised.	outerButton color: Color transparent.	button _ UpdatingThreePhaseButtonMorph checkBox.	button		 target: self;		 actionSelector: #toggleLineDiffing;		 getSelector: #showingLineDiffs.	outerButton		addMorph: button		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 0 @ 1)				offsets: (2 @ 3 corner: 18 @ 0));		addMorph: (StringMorph contents: 'lineDiffs' color: ColorTheme current buttonLabel) lock		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 1 @ 1)				offsets: (18 @ 2 corner: 0 @ 0)).	outerButton setBalloonText: 'Show code differences from the previous version, line by line.'.	^ outerButton! !!CodeHolder methodsFor: 'diffs' stamp: 'jmv 11/18/2010 13:21'!prettyLineDiffButton	"Return a checkbox that lets the user decide whether prettyDiffs should be shown or not"	| outerButton button |	outerButton _ AlignmentMorph proportional.	outerButton		 borderWidth: 2;		 borderColor: #raised.	outerButton color: Color transparent.	button _ UpdatingThreePhaseButtonMorph checkBox.	button		 target: self;		 actionSelector: #togglePrettyLineDiffing;		 getSelector: #showingPrettyLineDiffs.	outerButton		addMorph: button		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 0 @ 1)				offsets: (2 @ 3 corner: 18 @ 0));		addMorph: (StringMorph contents: 'linePrettyDiffs' color: ColorTheme current buttonLabel) lock		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 1 @ 1)				offsets: (18 @ 2 corner: 0 @ 0)).	(self isKindOf: VersionsBrowser)		ifTrue: [ outerButton setBalloonText: 'Show pretty-printed code differences from the previous version, line by line.' ]		ifFalse: [ outerButton setBalloonText: 'Show pretty-printed code differences between the file-based method and the in-memory version, line by line.' ].	^ outerButton.! !!CodeHolder methodsFor: 'diffs' stamp: 'jmv 11/18/2010 13:21'!prettyWordDiffButton	"Return a checkbox that lets the user decide whether prettyDiffs should be shown or not"	| outerButton button |	outerButton _ AlignmentMorph proportional.	outerButton		 borderWidth: 2;		 borderColor: #raised.	outerButton color: Color transparent.	button _ UpdatingThreePhaseButtonMorph checkBox.	button		 target: self;		 actionSelector: #togglePrettyWordDiffing;		 getSelector: #showingPrettyWordDiffs.	outerButton		addMorph: button		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 0 @ 1)				offsets: (2 @ 3 corner: 18 @ 0));		addMorph: (StringMorph contents: 'wordPrettyDiffs' color: ColorTheme current buttonLabel) lock		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 1 @ 1)				offsets: (18 @ 2 corner: 0 @ 0)).	(self isKindOf: VersionsBrowser)		ifTrue: [ outerButton setBalloonText: 'Show pretty-printed code differences from the previous version, word by word.' ]		ifFalse: [ outerButton setBalloonText: 'Show pretty-printed code differences between the file-based method and the in-memory version, word by word.' ].	^ outerButton.! !!CodeHolder methodsFor: 'diffs' stamp: 'jmv 11/18/2010 13:21'!wordDiffButton	"Return a checkbox that lets the user decide whether regular diffs should be shown or not"	| outerButton button |	outerButton _ AlignmentMorph proportional.	outerButton		 borderWidth: 2;		 borderColor: #raised.	outerButton color: Color transparent.	button _ UpdatingThreePhaseButtonMorph checkBox.	button		 target: self;		 actionSelector: #toggleWordDiffing;		 getSelector: #showingWordDiffs.	outerButton		addMorph: button		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 0 @ 1)				offsets: (2 @ 3 corner: 18 @ 0));		addMorph: (StringMorph contents: 'wordDiffs' color: ColorTheme current buttonLabel) lock		fullFrame:			(LayoutFrame				fractions: (0 @ 0 corner: 1 @ 1)				offsets: (18 @ 2 corner: 0 @ 0)).	outerButton setBalloonText: 'Show code differences (better algorithm) from the previous version.'.	^ outerButton.! !!Browser methodsFor: 'class functions' stamp: 'jmv 11/18/2010 12:34'!buildMorphicSwitches	| instanceSwitch commentSwitch classSwitch row aColor |	instanceSwitch := PluggableButtonMorph 				model: self				stateGetter: #instanceMessagesIndicated				action: #indicateInstanceMessages.	instanceSwitch		label: 'instance';		askBeforeChanging: true;		borderWidth: 0.	commentSwitch := PluggableButtonMorph 				model: self				stateGetter: #classCommentIndicated				action: #plusButtonHit.	commentSwitch		label: '?' asText allBold;		askBeforeChanging: true;		setBalloonText: 'class comment';		borderWidth: 0.	classSwitch := PluggableButtonMorph 				model: self				stateGetter: #classMessagesIndicated				action: #indicateClassMessages.	classSwitch		label: 'class';		askBeforeChanging: true;		borderWidth: 0.	row _ AlignmentMorph proportional.	row		addMorph: instanceSwitch fullFrame: (LayoutFrame fractions: (0@0 corner: 0.5@1));		addMorph: commentSwitch fullFrame: (LayoutFrame fractions: (0.51@0 corner: 0.65@1));		addMorph: classSwitch fullFrame: (LayoutFrame fractions: (0.66@0 corner: 1@1)).	aColor := Color colorFrom: self class windowColor.	row color: aColor.	aColor := aColor muchLighter.	{ 		instanceSwitch.		commentSwitch.		classSwitch} do: [:m | 				m					color: aColor;					onColor: ColorTheme current switchOn					offColor: ColorTheme current switchOff].	^row! !!ColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 12:49'!buttonColorFrom: aColor	^ aColor paler! !!ColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!buttonLabel	^ Color black! !!ColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!windowLabel	^ Color black! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:43'!browser	^ Color lightGreen duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:49'!changeList	^self messageSet! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:48'!changeSorter	^ self messageSet! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!classCommentVersionsBrowser	^(Color r: 0.769 g: 0.653 b: 1.0) duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!debugger	^Color lightRed duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!fileContentsBrowser	^Color tan duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!fileList	^ Color lightMagenta duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!messageNames	^(Color r: 0.645 g: 1.0 b: 0.452) duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!messageSet	^Color lightBlue duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!object	^Color white duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!packageBrowser	^ (Color r: 1.0 g: 1.0 b: 0.6) duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!testRunner	^ (Color r: 0.650 g: 0.753 b: 0.976) duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!transcript	^ Color lightOrange duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!versionsBrowser	^(Color r: 0.869 g: 0.753 b: 1.0) duller! !!ColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!workspace	^ Color lightYellow duller! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 10:19'!embossedTitles	^false! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 10:24'!roundWindowCorners	^false! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/19/2010 11:14'!roundedCornerRadius	"Only effective if #roundWindowCorners answers true.	Provide a reasonable default for subclasses."	^7! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/19/2010 10:36'!titleGradientBottomFactor	"Will only be used for color themes that answer true to #useWindowTitleGradient"	^0.85! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/19/2010 10:38'!titleGradientExtraLightness	"Will only be used for color themes that answer true to #useWindowTitleGradient"	"To compensate for the darkening effect of the gradient, if desired	Default value is 1.0 / #titleGradientBottomFactor, so bottom of gradient is original title color,	and top of gradient is a lighter shade."	^1.1765! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/19/2010 10:35'!titleGradientTopFactor	"Will only be used for color themes that answer true to #useWindowTitleGradient"	^1.0! !!ColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 10:34'!useWindowTitleGradient	^false! !!BluesPalette methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:44'!browser	^ Color lightBlue duller! !!Conformist methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!buttonLabel	^ Color white! !!Conformist methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!windowLabel	^ Color white! !!Conformist methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:45'!browser	^ Color gray duller! !!DarkColorTheme methodsFor: 'colors' stamp: 'jmv 11/19/2010 11:08'!background	^ Color darkGray darker! !!DarkColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:26'!buttonLabel	^Color gray: 0.8! !!DarkColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 14:51'!paneColorFrom: aColor	^ (aColor adjustSaturation: -0.2 brightness: 0.3) alpha: 0.9! !!DarkColorTheme methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:05'!windowLabel	^Color gray: 0.6! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:14'!browser	^ Color r: 0.255 g: 0.3 b: 0.21! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:08'!classCommentVersionsBrowser	^ Color r: 0.251 g: 0.226 b: 0.3! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:09'!debugger	^ Color r: 0.3 g: 0.27 b: 0.27! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:10'!fileContentsBrowser	^ Color r: 0.1 g: 0.1 b: 0.072! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:11'!fileList	^ Color r: 0.4 g: 0.36 b: 0.4! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:11'!messageNames	^ Color r: 0.213 g: 0.3 b: 0.165! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:12'!messageSet	^ Color r: 0.27 g: 0.3 b: 0.3! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:12'!object	^Color r: 0.3 g: 0.298 b: 0.298! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:12'!packageBrowser	^ Color r: 0.3 g: 0.3 b: 0.21! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:13'!testRunner	^ Color r: 0.211 g: 0.232 b: 0.276! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:13'!transcript	^ Color r: 0.3 g: 0.25 b: 0.15! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:13'!versionsBrowser	^ Color r: 0.277 g: 0.256 b: 0.3! !!DarkColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 13:14'!workspace	^ Color r: 0.3 g: 0.3 b: 0.27! !!DarkColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 12:03'!embossedTitles	^true! !!DarkColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 12:03'!roundWindowCorners	^true! !!DarkColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 12:03'!useWindowTitleGradient	^true! !!DarkColorTheme methodsFor: 'widget colors' stamp: 'jmv 11/18/2010 13:34'!switchOff	^ Color r: 0.344 g: 0.405 b: 0.283! !!DarkColorTheme methodsFor: 'widget colors' stamp: 'jmv 11/18/2010 13:32'!switchOn	^Color r: 0.255 g: 0.3 b: 0.21! !!DarkColorTheme methodsFor: 'menu colors' stamp: 'jmv 11/19/2010 11:09'!menu	^ Color darkGray! !!DarkColorTheme methodsFor: 'menu colors' stamp: 'jmv 11/19/2010 11:10'!menuText	^Color gray: 0.9! !!Debugger methodsFor: 'controls' stamp: 'jmv 11/18/2010 12:51'!addOptionalButtonsTo: window at: fractions plus: verticalOffset	"Add button panes to the window.  A row of custom debugger-specific buttons (Proceed, Restart, etc.) is always added, and if optionalButtons is in force, then the standard code-tool buttons are also added.  Answer the verticalOffset plus the height added."	| delta buttons divider anOffset |	anOffset _ (Preferences optionalButtons and: [Preferences extraDebuggerButtons | true])		ifTrue:			[super addOptionalButtonsTo: window at: fractions plus: verticalOffset]		ifFalse:			[verticalOffset].	delta _ self defaultButtonPaneHeight.	buttons _ self customButtonRow.	buttons color: (Display depth <= 8 		ifTrue: [ Color transparent ]		ifFalse: [ (ColorTheme current buttonColorFrom: self class windowColor) ]).	divider _ BorderedSubpaneDividerMorph forBottomEdge.	divider extent: 4@4; color: Color transparent; borderColor: #raised; borderWidth: 2.	window 		addMorph: buttons		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@anOffset corner: 0@(anOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(anOffset + delta - 1) corner: 0@(anOffset + delta))).	^ anOffset + delta! !!FormCanvas methodsFor: 'drawing-images' stamp: 'jmv 11/17/2010 13:33'!image: aForm multipliedBy: aColor at: aPoint	"Multiply aForm and aColor, then blend over destination.	aForm is a kind of advanced stencil, supplying brightness and opacity at each pixel	Display getCanvas image: SystemWindow roundedCornerTR multipliedBy: Color blue at: 20@20	"	self buildAuxWith: aForm multipliedWith: aColor.	self translucentImage: auxForm at: aPoint sourceRect: aForm boundingBox! !!FormCanvas methodsFor: 'drawing-rectangles' stamp: 'jmv 11/17/2010 13:34'!fillRectangle: aRectangle fillStyle: aFillStyle	"Fill the given rectangle."	self shadowColor ifNotNil: [		^self fillRectangle: aRectangle color: aFillStyle asColor ].	(aFillStyle isKindOf: InfiniteForm) ifTrue: [		^self fillRectangle: aRectangle tilingWith: aFillStyle form rule: Form paint ].	(aFillStyle isSolidFill) ifTrue: [		^self fillRectangle: aRectangle color: aFillStyle asColor].	self fillRectangle: aRectangle color: aFillStyle asColor! !!FormCanvas methodsFor: 'drawing-rectangles' stamp: 'jmv 11/17/2010 14:05'!fillRectangle: aRectangle infiniteForm: anInfiniteForm multipliedBy: aColor	"Fill aRectangle with the equivalent of anInfiniteForm multiplied by aColor	aForm is a kind of advanced stencil, supplying brightness and opacity at each pixel	Similar to #image:multipliedBy:at:	Display getCanvas fillRectangle: (10@10 extent: 100@100) infiniteForm: (SystemWindow titleGradient: 12) multipliedBy: Color red.	"	self buildAuxWith: anInfiniteForm form multipliedWith: aColor.	^self fillRectangle: aRectangle tilingWith: auxForm rule: Form paint! !!FormCanvas methodsFor: 'drawing-rectangles' stamp: 'jmv 11/17/2010 13:34'!fillRectangle: aRectangle tilingWith: aForm rule: aCombinationRule	"We assume that aForm is part of an InfiniteForm"	| additionalOffset rInPortTerms clippedPort targetTopLeft clipOffset ex 	targetBox patternBox savedMap top left |	"this is a bit of a kludge to get the form to be aligned where I *think* it should be.	something better is needed, but not now"	additionalOffset _ 0@0.	ex _ aForm extent.	rInPortTerms _ aRectangle translateBy: origin.	clippedPort _ port clippedBy: rInPortTerms.	targetTopLeft _ clippedPort clipRect topLeft truncateTo: ex.	clipOffset _ rInPortTerms topLeft - targetTopLeft.	additionalOffset _ (clipOffset \\ ex) - ex.	"do it iteratively"	targetBox _ clippedPort clipRect.	patternBox _ aForm boundingBox.	savedMap _ clippedPort colorMap.	clippedPort sourceForm: aForm;		fillColor: nil;		combinationRule: aCombinationRule;		sourceRect: (0@0 extent: patternBox extent);		colorMap: (aForm colormapIfNeededFor: clippedPort destForm).	top _ (targetBox top truncateTo: patternBox height) + additionalOffset y.	left _  (targetBox left truncateTo: patternBox width) + additionalOffset x.	left to: (targetBox right - 1) by: patternBox width do:		[:x | top to: (targetBox bottom - 1) by: patternBox height do:			[:y | clippedPort destOrigin: x@y; copyBits]].	clippedPort colorMap: savedMap! !!FormCanvas methodsFor: 'private' stamp: 'jmv 11/17/2010 13:33'!buildAuxWith: aForm multipliedWith: aColor	| h w |	w _ aForm width.	h _ aForm height.	auxForm		ifNotNil: [			w _ w max: auxForm width.			h _ h max: auxForm height.			(auxForm width < w or: [ auxForm height < h ]) ifTrue: [ auxForm _ nil ]].	auxForm		ifNil: [			auxForm _ Form extent: w@h depth: 32.			auxBlitter _ BitBlt toForm: auxForm ].		auxForm fillColor: aColor.	auxBlitter		sourceForm: aForm;		combinationRule: Form rgbMul;		sourceRect: aForm boundingBox;		copyBits.! !!Object class methodsFor: 'windowColor' stamp: 'jmv 11/18/2010 12:42'!windowColor	^ ColorTheme current object! !!ChangeList class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:38'!windowColor	^ ColorTheme current changeList! !!ColorTheme class methodsFor: 'colors' stamp: 'jmv 11/19/2010 10:11'!beCurrent	CurrentPalette := self basicNew initialize.	Preferences		initializeTextHighlightingParameters; 		restoreDefaultMenuParameters.	SHTextStylerST80 initialize.	World world color: ColorTheme current background.	ThreePhaseButtonMorph initialize.	SystemWindow initialize.	^ CurrentPalette! !!Debugger class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:40'!windowColor	^ ColorTheme current debugger! !!FileContentsBrowser class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:41'!windowColor	^ ColorTheme current fileContentsBrowser! !!InfiniteForm class methodsFor: 'instance creation' stamp: 'jmv 11/19/2010 09:34'!verticalGradient: h topColor: topColor bottomColor: bottomColor	"	(InfiniteForm 		verticalGradient: 120		topColor: Color lightBlue		bottomColor: Color gray) display	(InfiniteForm 		verticalGradient: 120		topColor: Color white		bottomColor: (Color gray: 0.85)) display	"	| form w c |	w _ 200.	form _ Form extent: w@h depth: 32.	0 to: h-1 do: [ :y |		c _ bottomColor mixed: (1.0 * y / (h-1)) with: topColor.		0 to: w-1 do: [ :x |			form colorAt: x@y put: c ]].	^self with: form! !!MessageSet class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:41'!windowColor	^ ColorTheme current messageSet! !!MessageNames class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:41'!windowColor	^ ColorTheme current messageNames! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 11/18/2010 13:03'!drawOn: aCanvas 	| w f center x y |	super drawOn: aCanvas.	f _ self fontToUse.	center _ bounds center.	label ifNotNil: [		w _ f widthOfString: label.		x _ bounds width > w			ifTrue: [ center x - (w // 2) ]			ifFalse: [ bounds left +4].		y _ center y - (f height // 2).		aCanvas drawString: label at: x@y font: f color: ColorTheme current buttonLabel ].	showSelectionFeedback ifTrue: [		aCanvas frameRectangle: self innerBounds width: 2 color: feedbackColor].! !!SimpleServiceEntry methodsFor: 'performing service' stamp: 'jmv 11/18/2010 12:51'!buttonToTriggerIn: aFileList 	"Answer a button that will trigger the receiver service in a file list"	| aButton |	aButton := PluggableButtonMorph 				model: self				stateGetter: nil				action: #performServiceFor:.	aButton arguments: { 				aFileList}.	aButton		color: Color transparent;		label: self buttonLabel;		askBeforeChanging: true.	aButton color: (ColorTheme current buttonColorFrom: aFileList class windowColor).	aButton setBalloonText: self description.	^aButton! !!SoftColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 12:03'!roundWindowCorners	^true! !!SoftColorTheme methodsFor: 'other options' stamp: 'jmv 11/18/2010 12:03'!useWindowTitleGradient	^true! !!SoftColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:44'!browser	^Color r: 0.5 g: 0.7 b: 0.4! !!SoftColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:46'!fileList	^ Color r: 0.7 g: 0.55 b: 0.7! !!SoftColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:45'!messageSet	^ Color r: 0.5 g: 0.66 b: 0.66! !!SoftColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 09:45'!transcript	^ Color r: 0.8 g: 0.6 b: 0.3! !!StringMorph class methodsFor: 'instance creation' stamp: 'jmv 11/18/2010 13:19'!contents: aString color: aColor	" 'StringMorph contents: str' is faster than 'StringMorph new contents: str' "	^ (self contents: aString)		color: aColor;		yourself! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/18/2010 10:55'!drawClassicFrameOn: aCanvas titleColor: titleColor	"Window border encompasses title area. No round corners. No title gradient."	aCanvas fillRectangle: bounds fillStyle: self fillStyle borderStyle: self borderStyle.	aCanvas fillRectangle: self titleAreaInnerRect color: titleColor! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/18/2010 14:08'!drawLabelOn: aCanvas	ColorTheme current embossedTitles		ifFalse: [			aCanvas				drawString: labelString				in: self labelRectangle				font: Preferences windowTitleFont				color: ColorTheme current windowLabel ]		ifTrue: [			aCanvas				drawStringEmbossed: labelString				in: self labelRectangleForEmbossed				font: Preferences windowTitleFont				color: ColorTheme current windowLabel ]! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/19/2010 11:16'!drawOn: aCanvas	| titleColor paneColorToUse roundCorners titleGradient |	paneColorToUse _ self paneColorToUse.	titleColor _ self isTopWindow		ifTrue: [ paneColorToUse lighter ]		ifFalse: [ paneColorToUse ].	roundCorners _ ColorTheme current roundWindowCorners.	titleGradient _ ColorTheme current useWindowTitleGradient.	roundCorners | titleGradient		ifTrue: [			"Title area is not inside window borders"			self drawWindowBodyOn: aCanvas roundCorners: roundCorners paneColor: paneColorToUse.			self drawWindowTitleAreaOn: aCanvas roundCorners: roundCorners titleColor: titleColor useTitleGradient: titleGradient ]		ifFalse: [			"Window border encompasses title area. No round corners. No title gradient."			self drawClassicFrameOn: aCanvas titleColor: titleColor ].	self drawLabelOn: aCanvas! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/19/2010 10:13'!drawWindowBodyOn: aCanvas roundCorners: doRoundCorners paneColor: paneColor	"Title area is not inside window borders"	| r bl tl tr he tw bw |	doRoundCorners		ifFalse: [			aCanvas				fillRectangle: self boundsExcludingTitleArea				fillStyle: self fillStyle				borderStyle: self borderStyle ]		ifTrue: [			r _ ColorTheme current roundedCornerRadius.			aCanvas image: SystemWindow roundedCornerBL multipliedBy: paneColor at: bounds bottomLeft - (0@r).			aCanvas image: SystemWindow roundedCornerBR multipliedBy: paneColor at: bounds bottomRight - (r@r) .			aCanvas fillRectangle: self innerBounds fillStyle: self fillStyle.			tl _ bounds topLeft + (0@self labelHeight).			tr _ bounds topRight + (borderWidth negated@self labelHeight).			bl _ bounds bottomLeft + (r@borderWidth negated).			he _ borderWidth@(bounds height - self labelHeight - r).			tw _ bounds width@borderWidth.			bw _ bounds width - r - r@borderWidth.			aCanvas fillRectangle: (tl extent: he) fillStyle: paneColor.			aCanvas fillRectangle: (tr extent: he) fillStyle: paneColor.			aCanvas fillRectangle: (bl extent: bw) fillStyle: paneColor.			aCanvas fillRectangle: (tl extent: tw) fillStyle: paneColor ]! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/19/2010 10:43'!drawWindowTitleAreaOn: aCanvas roundCorners: doRoundCorners titleColor: titleColor useTitleGradient: useTitleGradient	| r h c |	h _ self labelHeight.	c _ useTitleGradient ifTrue: [ titleColor * ColorTheme current titleGradientExtraLightness ] ifFalse: [ titleColor ].	doRoundCorners		ifFalse: [			useTitleGradient				ifTrue: [ aCanvas fillRectangle: self titleAreaRect infiniteForm: (SystemWindow titleGradient: h) multipliedBy: c ]				ifFalse: [ aCanvas fillRectangle: self titleAreaRect color: c ]]		ifTrue: [			r _ ColorTheme current roundedCornerRadius.			useTitleGradient				ifTrue: [					aCanvas fillRectangle: (self titleAreaRect insetBy: r@0) infiniteForm: (SystemWindow titleGradient: h) multipliedBy: c.					aCanvas image: (SystemWindow roundedCornerTL: h) multipliedBy: c at: bounds topLeft.					aCanvas image: (SystemWindow roundedCornerTR: h) multipliedBy: c at: bounds topRight - (r@0)				]				ifFalse: [					aCanvas fillRectangle: (self titleAreaRect insetBy: r@0) color: c.					aCanvas image: (SystemWindow roundedCornerTL: h) multipliedBy: c at: bounds topLeft.					aCanvas image: (SystemWindow roundedCornerTR: h) multipliedBy: c at: bounds topRight - (r@0) 				]		]! !!SystemWindow methodsFor: 'geometry' stamp: 'jmv 11/19/2010 11:11'!labelRectangleForEmbossed	"Actually the whole label area"	| tl br e x0 y0 x1 y1 |	tl _ bounds topLeft.	br _ bounds bottomRight.	e _ self boxExtent.	x0 _ tl x + ( e x * 4 + 14).	y0 _ tl y.	x1 _ br x - 1.	y1 _ tl y + e y + 1.	^x0@y0 corner: x1@y1			! !!SystemWindow methodsFor: 'panes' stamp: 'jmv 11/18/2010 12:35'!paneColor	| cc |	(cc := paneColor) ifNotNil: [^cc].	Display depth > 2 		ifTrue: [			model ifNotNil: [					model isInMemory 						ifTrue: [							cc := Color colorFrom: model class windowColor.							(cc = Color lightYellow or: [cc = Color white]) 								ifTrue: [ cc := Color gray: 0.67 ]]].			cc ifNil: [cc := paneMorphs isEmptyOrNil ifFalse: [paneMorphs first color]]].	cc ifNil: [cc := Color white].	self paneColor: cc.	^cc! !!SystemWindow methodsFor: 'testing' stamp: 'jmv 11/18/2010 14:18'!isOpaqueMorph	"false only if roundedCorners!!"	^ColorTheme current roundWindowCorners not! !!SystemWindow class methodsFor: 'class initialization' stamp: 'jmv 11/19/2010 10:38'!initialize	"	SystemWindow initialize	"	CloseIcon _ nil.	CollapseIcon _ nil.	ExpandIcon _ nil.	MenuIcon _ nil.	RoundedCornerBL _ nil.	RoundedCornerBR _ nil.	RoundedCornerTL _ nil.	RoundedCornerTR _ nil.	TitleGradient _ nil! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 11/19/2010 11:04'!roundedCornerBL	"	RoundedCornerBL _ nil.	Display getCanvas translucentImage: self roundedCornerBL at: 10@60	"	| f w r d l bw |	r _ ColorTheme current roundedCornerRadius.	w _ r.	(RoundedCornerBL notNil and: [ RoundedCornerBL width = w and: [ RoundedCornerBL height = w ]]) ifFalse: [		bw _ 1.3.		f _ Form			extent: w @ w			depth: 32.		0			to: w - 1			do: [ :y |				0					to: w - 1					do: [ :x |						d _ ((w-1-x) @ y) r.						l _ ((r - d max: 0.0) min: bw) / bw.						f							colorAt: x @ y							put: (Color white alpha: l) ]].		RoundedCornerBL _ f ].	^ RoundedCornerBL! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 11/19/2010 11:05'!roundedCornerBR	"	RoundedCornerBR _ nil.	Display getCanvas translucentImage: self roundedCornerBR at: 10@60	"	| f w r d l bw |	r _ ColorTheme current roundedCornerRadius.	w _ r.	(RoundedCornerBR notNil and: [ RoundedCornerBR width = w and: [ RoundedCornerBR height = w ]]) ifFalse: [		bw _ 1.3.		f _ Form			extent: w @ w			depth: 32.		0			to: w - 1			do: [ :y |				0					to: w - 1					do: [ :x |						d _ (x @ y) r.						l _ ((r - d max: 0.0) min: bw) / bw.						f							colorAt: x @ y							put: (Color white alpha: l) ]].		RoundedCornerBR _ f ].	^ RoundedCornerBR! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 11/19/2010 11:03'!roundedCornerTL: height	"	RoundedCornerTL _ nil.	Display getCanvas translucentImage: self roundedCornerTL at: 520@10	"	| f w r d l bw topColor bottomColor c |	r _ ColorTheme current roundedCornerRadius.	w _ r.	(RoundedCornerTL notNil and: [ RoundedCornerTL width = w and: [ RoundedCornerTL height = height] ]) ifFalse: [		ColorTheme current useWindowTitleGradient			ifTrue: [				topColor _ Color white * ColorTheme current titleGradientTopFactor.				bottomColor _ Color white * ColorTheme current titleGradientBottomFactor ]			ifFalse: [				bottomColor _ topColor _ Color white ].		bw _ 1.3.		f _ Form			extent: w @ height			depth: 32.		0			to: height - 1			do: [ :y |				c _ bottomColor mixed: (1.0 * y / (height-1)) with: topColor.				0					to: w - 1					do: [ :x |						l _ 1.0.						y < r ifTrue: [							d _ ((w-1-x) @ (w-1-y)) r.							l _ ((r - d max: 0.0) min: bw) / bw ].						f							colorAt: x @ y							put: (c alpha: l) ]].		RoundedCornerTL _ f ].	^ RoundedCornerTL! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 11/19/2010 11:04'!roundedCornerTR: height	"	RoundedCornerTR _ nil.	Display getCanvas translucentImage: self roundedCornerTR at: 10@60	"	| f w r d l bw topColor bottomColor c |	r _ ColorTheme current roundedCornerRadius.	w _ r.	(RoundedCornerTR notNil and: [ RoundedCornerTR width = w and: [ RoundedCornerTR height = height ]]) ifFalse: [		ColorTheme current useWindowTitleGradient			ifTrue: [				topColor _ Color white * ColorTheme current titleGradientTopFactor.				bottomColor _ Color white * ColorTheme current titleGradientBottomFactor ]			ifFalse: [				bottomColor _ topColor _ Color white ].		bw _ 1.3.		f _ Form			extent: w @ height			depth: 32.		0			to: height - 1			do: [ :y |				c _ bottomColor mixed: (1.0 * y / (height-1)) with: topColor.				0					to: w - 1					do: [ :x |						l _ 1.0.						y < r ifTrue: [							d _ (x @ (w-y-1)) r.							l _ ((r - d max: 0.0) min: bw) / bw ].						f							colorAt: x @ y							put: (c alpha: l) ]].		RoundedCornerTR _ f ].	^ RoundedCornerTR! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 11/19/2010 10:39'!titleGradient: h	"	TitleGradient _ nil.	"	(TitleGradient isNil or: [ TitleGradient form height ~= h ]) ifTrue: [		TitleGradient _ InfiniteForm 		verticalGradient: h		topColor: Color white * ColorTheme current titleGradientTopFactor		bottomColor: Color white * ColorTheme current titleGradientBottomFactor ].	^ TitleGradient! !!ThreePhaseButtonMorph class methodsFor: 'class initialization' stamp: 'jmv 11/18/2010 13:25'!initialize	"	ThreePhaseButtonMorph initialize	"	| extent inset c |	extent := 12@12.	inset := 3.	Icons := Dictionary new.	c := ColorTheme current buttonLabel.	#(CheckBoxOff CheckBoxOn CheckBoxPressed) do: [:button |		| f r |		f := Form extent: extent depth: 32.		f borderWidth: 1 color: c.		r := f boundingBox insetBy: inset.		button == #CheckBoxPressed ifTrue: [f border: r width: 1 fillColor: c ].		button == #CheckBoxOn ifTrue: [f fill: r fillColor: c].		Icons at: button put: f ]! !!Uniformity methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!buttonLabel	^ Color black! !!Uniformity methodsFor: 'colors' stamp: 'jmv 11/18/2010 13:02'!windowLabel	^ Color black! !!Uniformity methodsFor: 'tool colors' stamp: 'jmv 11/18/2010 12:45'!browser	^ Color white duller! !!VersionsBrowser class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:43'!windowColor	^ ColorTheme current versionsBrowser! !!ClassCommentVersionsBrowser class methodsFor: 'window color' stamp: 'jmv 11/18/2010 12:39'!windowColor	^ ColorTheme current classCommentVersionsBrowser! !Uniformity removeSelector: #label!ThreePhaseButtonMorph initialize!SystemWindow initialize!SystemWindow class removeSelector: #recreateBoxes!SystemWindow class removeSelector: #roundedCornerRadius!SystemWindow class removeSelector: #roundedCornerTL!SystemWindow class removeSelector: #roundedCornerTR!SystemWindow removeSelector: #windowColor!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes paneColor'	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTR TitleGradient TopWindow'	poolDictionaries: ''	category: 'Morphic-Windows'!InfiniteForm class removeSelector: #verticalGreyGradient:!InfiniteForm removeSelector: #asForm!InfiniteForm removeSelector: #displayOnPort:offsetBy:!InfiniteForm removeSelector: #isBitmapFill!InfiniteForm removeSelector: #isGradientFill!FormCanvas removeSelector: #infiniteFillRectangle:fillStyle:!!classDefinition: #FormCanvas category: #'Morphic-Support'!Canvas subclass: #FormCanvas	instanceVariableNames: 'origin clipRect form port shadowColor auxForm auxBlitter'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Support'!Form removeSelector: #asForm!DarkColorTheme removeSelector: #changeList!DarkColorTheme removeSelector: #changeSorter!Conformist removeSelector: #label!ColorTheme removeSelector: #label!Color removeSelector: #isBitmapFill!Color removeSelector: #isGradientFill!