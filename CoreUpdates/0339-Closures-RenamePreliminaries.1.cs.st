'From Cuis 1.0 of 28 November 2009 [latest update: #337] on 7 December 2009 at 6:16:40 pm'!Smalltalk renameClassNamed: #CompiledMethodWithNode as: #NonClosureCompiledMethodWithNode!Smalltalk renameClassNamed: #Compiler as: #NonClosureCompiler!Smalltalk renameClassNamed: #Decompiler as: #NonClosureDecompiler!Smalltalk renameClassNamed: #LiteralDictionary as: #NonClosureLiteralDictionary!Smalltalk renameClassNamed: #ParseNode as: #NonClosureParseNode!Smalltalk renameClassNamed: #AssignmentNode as: #NonClosureAssignmentNode!Smalltalk renameClassNamed: #BlockArgsNode as: #NonClosureBlockArgsNode!Smalltalk renameClassNamed: #BlockNode as: #NonClosureBlockNode!Smalltalk renameClassNamed: #BraceNode as: #NonClosureBraceNode!Smalltalk renameClassNamed: #CascadeNode as: #NonClosureCascadeNode!Smalltalk renameClassNamed: #CommentNode as: #NonClosureCommentNode!Smalltalk renameClassNamed: #DecompilerConstructor as: #NonClosureDecompilerConstructor!Smalltalk renameClassNamed: #Encoder as: #NonClosureEncoder!Smalltalk renameClassNamed: #LeafNode as: #NonClosureLeafNode!Smalltalk renameClassNamed: #LiteralNode as: #NonClosureLiteralNode!Smalltalk renameClassNamed: #MessageNode as: #NonClosureMessageNode!Smalltalk renameClassNamed: #MessageAsTempNode as: #NonClosureMessageAsTempNode!Smalltalk renameClassNamed: #MethodNode as: #NonClosureMethodNode!Smalltalk renameClassNamed: #MethodTempsNode as: #NonClosureMethodTempsNode!Smalltalk renameClassNamed: #ParseStack as: #NonClosureParseStack!Smalltalk renameClassNamed: #ParserRemovedUnusedTemps as: #NonClosureParserRemovedUnusedTemps!Smalltalk renameClassNamed: #ReturnNode as: #NonClosureReturnNode!Smalltalk renameClassNamed: #Scanner as: #NonClosureScanner!Smalltalk renameClassNamed: #Parser as: #NonClosureParser!Smalltalk renameClassNamed: #SelectorNode as: #NonClosureSelectorNode!Smalltalk renameClassNamed: #KeyWordNode as: #NonClosureKeyWordNode!Smalltalk renameClassNamed: #VariableNode as: #NonClosureVariableNode!Smalltalk renameClassNamed: #LiteralVariableNode as: #NonClosureLiteralVariableNode!Smalltalk renameClassNamed: #TempVariableNode as: #NonClosureTempVariableNode!!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 18:05'!actualCompiledMethodWithNodeClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ CompiledMethodWithNode ]"		ifFalse: [ NonClosureCompiledMethodWithNode ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:46'!actualCompilerClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ Compiler ]"		ifFalse: [ NonClosureCompiler ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:52'!actualDecompilerClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ Decompiler ]"		ifFalse: [ NonClosureDecompiler ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:55'!actualEncoderClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ Encoder ]"		ifFalse: [ NonClosureEncoder ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:57'!actualMessageNodeClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ MessageNode ]"		ifFalse: [ NonClosureMessageNode ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:46'!actualParserClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ Parser ]"		ifFalse: [ NonClosureParser ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:46'!actualScannerClass	"Sending this message replaces direct references to some class"	^self usingClosureCompiler		"ifTrue: [ Scanner ]"		ifFalse: [ NonClosureScanner ]! !!SystemDictionary methodsFor: 'Compiler swapping' stamp: 'jmv 12/7/2009 17:22'!usingClosureCompiler	^false! !