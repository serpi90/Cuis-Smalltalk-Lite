'From Cuis 3.0 of 31 January 2011 [latest update: #790] on 23 February 2011 at 10:47:54 pm'!!Morph methodsFor: 'initialization' stamp: 'jmv 2/23/2011 20:26'!openCenteredInWorld	self		position: Display extent - self extent // 2;		openInWorld.! !!Morph methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:34'!computeFullBounds	"Private. Compute the actual full bounds of the receiver"	(submorphs isEmpty or: [ self clipsSubmorphs ]) ifTrue: [  ^bounds ].	^ bounds quickMerge: self submorphBounds! !!Morph methodsFor: 'layout' stamp: 'jmv 2/23/2011 22:46'!doLayoutIfNeeded	"Return self. Recompute the layout if necessary."	fullBounds ifNotNil: [ ^self ].	"Errors at this point can be critical so make sure we catch 'em all right"	[self layoutAndComputeFullBounds] on: Exception do: [ :ex |		"This should do it unless you don't screw up the bounds"		fullBounds _ bounds.		ex pass ]! !!Morph methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:35'!layoutAndComputeFullBounds	"Compute a new layout of submorphs based on the given layout bounds."	fullBounds _ self computeFullBounds! !!AlignmentMorph methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:32'!layoutAndComputeFullBounds	"Compute a new layout of submorphs based on the given layout bounds."	submorphs isEmpty ifTrue: [		^fullBounds _ bounds].	self submorphsDo: [ :m | 		m doesLayout ifTrue: [			m applyLayoutFrameIn: self layoutBounds ]].	fullBounds _ self computeFullBounds! !!BalloonMorph methodsFor: 'initialization' stamp: 'jmv 2/23/2011 20:22'!popUpForHand: aHand	"Pop up the receiver as balloon help for the given hand"	self lock.	self setProperty: #morphicLayerNumber toValue: self morphicLayerNumber.	aHand world addMorphFront: self.	aHand balloonHelp: self.! !!HandMorph methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:29'!fullBounds	"Extend my bounds by the shadow offset when carrying morphs."	self doLayoutIfNeeded.	^submorphs isEmpty		ifTrue: [ fullBounds ]		ifFalse: [ fullBounds topLeft corner: fullBounds bottomRight + self shadowOffset ]! !!LayoutMorph methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:33'!layoutAndComputeFullBounds	"Compute a new layout based on the given layout bounds."	submorphs isEmpty ifTrue: [		^fullBounds _ bounds].	direction == #horizontal ifTrue: [		self layoutSubmorphsHorizontallyIn: self layoutBounds ].	direction == #vertical ifTrue: [		self layoutSubmorphsVerticallyIn: self layoutBounds ].	fullBounds _ self computeFullBounds! !!LayoutMorph methodsFor: 'adjust' stamp: 'jmv 2/23/2011 22:45'!adjustHorizontallyBy: aLayoutAdjustMorph at: aPoint	| delta l ls r rs newWidth i lCurrentWidth rCurrentWidth doNotResizeBelow |	doNotResizeBelow _ 2.	i _ submorphs indexOf: aLayoutAdjustMorph.	l _ self submorphs at: i +1.	ls _ l layoutSpec.	lCurrentWidth _ l width.	r _ self submorphs at: i - 1.	rs _ r layoutSpec.	rCurrentWidth _ r width.	delta _ aPoint x - aLayoutAdjustMorph center x.	delta _ delta max: doNotResizeBelow - lCurrentWidth.	delta _ delta min: rCurrentWidth - doNotResizeBelow.		lCurrentWidth > 0 ifTrue: [		newWidth _ lCurrentWidth + delta.		ls maybeProportionalWidth: (newWidth / lCurrentWidth * ls proportionalWidth) fixedOrMinimum: newWidth ].	rCurrentWidth > 0 ifTrue: [		newWidth _ rCurrentWidth - delta.		rs maybeProportionalWidth: (newWidth / rCurrentWidth * rs proportionalWidth) fixedOrMinimum: newWidth ].	self layoutAndComputeFullBounds! !!LayoutMorph methodsFor: 'adjust' stamp: 'jmv 2/23/2011 22:45'!adjustVerticallyBy: aLayoutAdjustMorph at: aPoint	| delta l ls r rs newHeight i lCurrentHeight rCurrentHeight doNotResizeBelow |	doNotResizeBelow _ 2.	i _ submorphs indexOf: aLayoutAdjustMorph.	l _ self submorphs at: i +1.	ls _ l layoutSpec.	lCurrentHeight _ l height.	r _ self submorphs at: i - 1.	rs _ r layoutSpec.	rCurrentHeight _ r height.	delta _ aPoint y - aLayoutAdjustMorph center y.	delta _ delta max: doNotResizeBelow - lCurrentHeight.	delta _ delta min: rCurrentHeight - doNotResizeBelow.		lCurrentHeight > 0 ifTrue: [		newHeight _ lCurrentHeight + delta.		ls maybeProportionalHeight: (newHeight / lCurrentHeight * ls proportionalHeight) fixedOrMinimum: newHeight ].	rCurrentHeight > 0 ifTrue: [		newHeight _ rCurrentHeight - delta.		rs maybeProportionalHeight: (newHeight / rCurrentHeight * rs proportionalHeight) fixedOrMinimum: newHeight ].	self layoutAndComputeFullBounds! !!SystemWindow methodsFor: 'layout' stamp: 'jmv 2/23/2011 20:33'!layoutAndComputeFullBounds	"Compute a new layout of submorphs based on the given layout bounds."	submorphs isEmpty ifTrue: [		^fullBounds _ bounds].	self submorphsDo: [ :m | 		m doesLayout ifTrue: [			m applyLayoutFrameIn: self layoutBounds ]].	fullBounds _ self computeFullBounds! !LayoutMorph removeSelector: #layoutSubmorphsIn:!Morph removeSelector: #layoutSubmorphsIn:!