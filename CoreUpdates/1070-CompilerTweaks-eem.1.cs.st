'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 31 August 2011 at 7:59:43 am'!!BlockLocalTempCounter methodsFor: 'private' stamp: 'eem 1/22/2011 12:48'!doJoin	scanner pc < blockEnd ifTrue:		[stackPointer := joinOffsets at: scanner pc ifAbsent: [scanner followingPc]]	"the ifAbsent: handles a caseOf:otherwise: where all cases return, which results	 in the branch around the otherwise being unreached.  e.g. in the following		jumpTo: L2	 is unreached.		| t |		t caseOf: { [nil] -> [^thisContext method abstractSymbolic] }		  otherwise: ['Oh no Mr Bill!!']		pushTemp: 0		pushConstant: nil		send: #= (1 arg)		jumpFalseTo: L1		pushThisContext: 		send: #method (0 args)		send: #abstractSymbolic (0 args)		returnTop		jumpTo: L2	L1:		pushConstant: 'Oh no Mr Bill!!'	L2:		returnTop"! !!Parser methodsFor: 'error correction' stamp: 'jmv 8/31/2011 07:59'!defineClass: className	"prompts the user to define a new class,  	asks for it's category, and lets the users edit further  	the definition"	| sym cat def d2 |	sym := className asSymbol.	cat := FillInTheBlank request: 'Enter class category : ' initialAnswer: self encoder classEncoding theNonMetaClass category.	cat		ifEmpty: [cat := 'Unknown'].	def := 'Object subclass: #' , sym , '		instanceVariableNames: '''' 		classVariableNames: ''''		poolDictionaries: ''''		category: ''' , cat , ''''.	d2 := FillInTheBlank request: 'Edit class definition : ' initialAnswer: def.	d2		ifEmpty: [d2 := def].	Compiler evaluate: d2.	^ encoder		global: (Smalltalk associationAt: sym)		name: sym! !