'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 23 December 2010 at 11:29:12 pm'!!Paragraph methodsFor: 'access' stamp: 'jmv 8/26/2010 11:19'!caretRect	^caretRect! !!Paragraph methodsFor: 'access' stamp: 'jmv 9/21/2009 09:19'!editor: anEditor	"Can be nil.	But if not nil, must be the same editor used in any TextMorph"	editor _ anEditor! !!Paragraph methodsFor: 'access' stamp: 'di 10/24/97 17:38'!extent	^ container width @ (lines last bottom - lines first top)! !!Paragraph methodsFor: 'access' stamp: 'jmv 8/26/2010 12:00'!focused	^ focused! !!Paragraph methodsFor: 'access' stamp: 'jmv 8/26/2010 12:01'!focused: aBoolean	focused _ aBoolean! !!Paragraph methodsFor: 'access' stamp: 'sbw 10/13/1999 22:31'!numberOfLines	^lines size! !!Paragraph methodsFor: 'access' stamp: 'jmv 8/26/2010 12:00'!showCaret	^showCaret! !!Paragraph methodsFor: 'access' stamp: 'jmv 8/26/2010 10:39'!showCaret: aBool	showCaret _ aBool! !!Paragraph methodsFor: 'composition' stamp: 'di 10/22/97 11:13'!compositionRectangle	^ container! !!Paragraph methodsFor: 'display' stamp: 'jmv 8/26/2010 12:15'!displayInsertionMarkAtX: x top: top bottom: bottom emphasis: emphasis on: aCanvas	self displayThinInsertionMarkAtX: x top: top bottom: bottom emphasis: emphasis on: aCanvas! !!Paragraph methodsFor: 'fonts-display' stamp: 'jmv 6/29/2010 12:44'!displayOn: aCanvas using: displayScanner at: somePosition	"Send all visible lines to the displayScanner for display"	| visibleRectangle offset leftInRun line |	visibleRectangle _ aCanvas clipRect.	offset _ (somePosition - positionWhenComposed) truncated.	leftInRun _ 0.	(self lineIndexForPoint: visibleRectangle topLeft)		to: (self lineIndexForPoint: visibleRectangle bottomRight)		do: [ :i |			line _ lines at: i.			self displaySelectionInLine: line on: aCanvas.			leftInRun _ displayScanner displayLine: line offset: offset leftInRun: leftInRun ]! !!Paragraph methodsFor: 'selection' stamp: 'jm 11/19/97 22:56'!containsPoint: aPoint	^ (lines at: (self lineIndexForPoint: aPoint)) rectangle		containsPoint: aPoint! !!Paragraph methodsFor: 'selection' stamp: 'di 11/30/97 12:10'!selectionRects	"Return an array of rectangles representing the selection region."	selectionStart ifNil: [^ Array new].	^ self selectionRectsFrom: selectionStart to: selectionStop! !!Paragraph methodsFor: 'selection' stamp: 'di 12/2/97 19:57'!selectionStart: startBlock selectionStop: stopBlock	selectionStart _ startBlock.	selectionStop _ stopBlock.! !!Paragraph methodsFor: 'private' stamp: 'di 10/26/97 15:57'!adjustRightX	| shrink |	shrink _ container right - maxRightX.	lines do: [:line | line paddingWidth: (line paddingWidth - shrink)].	container _ container withRight: maxRightX! !!Paragraph methodsFor: 'private' stamp: 'di 4/14/98 13:17'!fastFindFirstLineSuchThat: lineBlock	"Perform a binary search of the lines array and return the index	of the first element for which lineBlock evaluates as true.	This assumes the condition is one that goes from false to true for	increasing line numbers (as, eg, yval > somey or start char > somex).	If lineBlock is not true for any element, return size+1."	| index low high |	low _ 1.	high _ lines size.	[index _ high + low // 2.	low > high]		whileFalse: 			[(lineBlock value: (lines at: index))				ifTrue: [high _ index - 1]				ifFalse: [low _ index + 1]].	^ low! !!Paragraph methodsFor: 'private' stamp: 'jmv 10/20/2004 15:58'!lastLine	^lines last! !!Paragraph methodsFor: 'private' stamp: 'di 4/14/98 13:13'!lineIndexForPoint: aPoint	"Answer the index of the line in which to select the character nearest to aPoint."	| i py |	py _ aPoint y truncated.	"Find the first line at this y-value"	i _ (self fastFindFirstLineSuchThat: [:line | line bottom > py]) min: lines size.	"Now find the first line at this x-value"	[i < lines size and: [(lines at: i+1) top = (lines at: i) top				and: [aPoint x >= (lines at: i+1) left]]]		whileTrue: [i _ i + 1].	^ i! !!Paragraph methodsFor: 'private' stamp: 'di 10/24/97 17:40'!lines	^ lines! !!Paragraph methodsFor: 'private' stamp: 'nk 6/23/2004 14:50'!moveBy: delta	lines do: [:line | line moveBy: delta].	positionWhenComposed _ (positionWhenComposed ifNil: [ container origin ]) + delta.	container _ container translateBy: delta! !!Paragraph methodsFor: 'private' stamp: 'di 10/21/97 21:36'!positionWhenComposed: pos	positionWhenComposed _ pos! !!Paragraph methodsFor: 'initialization' stamp: 'jmv 8/26/2010 12:00'!initialize	focused _ false.	showCaret _ false.! !