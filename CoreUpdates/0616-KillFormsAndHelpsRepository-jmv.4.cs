'From Cuis 2.7 of 3 September 2010 [latest update: #600] on 12 October 2010 at 9:46:18 am'!!classDefinition: #HaloMorph category: #'Morphic-Widgets'!Morph subclass: #HaloMorph	instanceVariableNames: 'target innerTarget positionOffset angleOffset growingOrRotating haloBox simpleMode '	classVariableNames: 'HandleSize Icons '	poolDictionaries: ''	category: 'Morphic-Widgets'!!classDefinition: #MenuMorph category: #'Morphic-Menus'!BorderedMorph subclass: #MenuMorph	instanceVariableNames: 'defaultTarget selectedItem stayUp popUpOwner activeSubMenu titleMorph '	classVariableNames: 'CloseBoxImage PushPinImage CloseIcon PushPinIcon '	poolDictionaries: ''	category: 'Morphic-Menus'!!classDefinition: #SketchMorph category: #'Morphic-Basic'!Morph subclass: #SketchMorph	instanceVariableNames: 'originalForm '	classVariableNames: 'PaintingIcon '	poolDictionaries: ''	category: 'Morphic-Basic'!!classDefinition: #ColorPickerMorph category: #'Morphic-Widgets'!SketchMorph subclass: #ColorPickerMorph	instanceVariableNames: 'selectedColor sourceHand deleteOnMouseUp updateContinuously target selector argument originalColor isModal clickedTranslucency '	classVariableNames: 'ColorChart DragBox FeedbackBox RevertBox TransText TransparentBox EyedropperIcon '	poolDictionaries: ''	category: 'Morphic-Widgets'!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes paneColor '	classVariableNames: 'CloseBoxImage CollapseBoxImage TopWindow ExpandIcon CloseIcon CollapseIcon MenuIcon '	poolDictionaries: ''	category: 'Morphic-Windows'!!classDefinition: #ThreePhaseButtonMorph category: #'Morphic-Widgets'!ImageMorph subclass: #ThreePhaseButtonMorph	instanceVariableNames: 'offImage pressedImage state target actionSelector arguments actWhen '	classVariableNames: 'AuthorModeOwner Icons '	poolDictionaries: ''	category: 'Morphic-Widgets'!!CodeHolder methodsFor: 'misc' stamp: 'jmv 10/11/2010 23:59'!menuButton	"Answer a button that brings up a menu.  Useful when adding new features, but at present is between uses"	| aButton |	aButton _ IconicButton new target: self;		labelGraphic: SystemWindow menuIcon;		color: Color transparent; 		actWhen: #buttonDown;		actionSelector: #offerMenu;		yourself.	aButton setBalloonText: 'click here to get a menu with further options'.	^ aButton! !!LightWidget methodsFor: 'halos and balloon help' stamp: 'jmv 10/11/2010 23:26'!balloonHelpTextForHandle: aHandle	"Answer a string providing balloon help for the given halo handle"	|  itsSelector |	itsSelector _ aHandle eventHandler firstMouseSelector.	#(		(chooseEmphasisOrAlignment		'Emphasis & alignment')		(chooseFont							'Change font')		(chooseStyle							'Change style')		(dismiss								'Remove')		(doDebug:with:						'Debug')		(doDirection:with:					'Choose forward direction')		(doDup:with:							'Duplicate')		(doMenu:with:						'Menu')		(doGrab:with:							'Pick up')		(doRecolor:with:						'Change color')		(maybeDoDup:with:					'Duplicate')		(mouseDownInCollapseHandle:with:	'Collapse')		(mouseDownOnHelpHandle:			'Help')		(startDrag:with:						'Move')		(startGrow:with:						'Change size') 		(startRot:with:						'Rotate')) 	do:[ :pair |		itsSelector == pair first ifTrue: [^ pair last]].	(itsSelector == #mouseDownInDimissHandle:with:) ifTrue: [		'Remove from screen'].	^ 'unknown halo handle'! !!Morph methodsFor: 'halos and balloon help' stamp: 'jmv 10/11/2010 23:26'!balloonHelpTextForHandle: aHandle	"Answer a string providing balloon help for the given halo handle"	|  itsSelector |	itsSelector _ aHandle eventHandler firstMouseSelector.	#(		(chooseEmphasisOrAlignment			'Emphasis & alignment')		(chooseFont								'Change font')		(chooseStyle								'Change style')		(dismiss									'Remove')		(doDebug:with:							'Debug')		(doDirection:with:						'Choose forward direction')		(doDup:with:								'Duplicate')		(doMenu:with:							'Menu')		(doGrab:with:								'Pick up')		(doRecolor:with:							'Change color')		(maybeDoDup:with:						'Duplicate')		(mouseDownInCollapseHandle:with:	'Collapse')		(mouseDownOnHelpHandle:			'Help')		(startDrag:with:							'Move')		(startGrow:with:							'Change size') 		(startRot:with:							'Rotate')) 	do:		[ :pair | itsSelector == pair first ifTrue: [^ pair last]].	(itsSelector == #mouseDownInDimissHandle:with:) ifTrue: [			'Remove from screen'].	^ 'unknown halo handle'! !!HaloMorph methodsFor: 'copying' stamp: 'jmv 10/11/2010 23:24'!veryDeepInner: deepCopier	"Copy all of my instance variables.  Some need to be not copied at all, but shared.  	Warning!!!!  Every instance variable defined in this class must be handled.  We must also implement veryDeepFixupWith:.  See DeepCopier class comment."	super veryDeepInner: deepCopier.	"target _ target.		Weakly copied"	"innerTarget _ innerTarget.		Weakly copied"	positionOffset _ positionOffset veryDeepCopyWith: deepCopier.	angleOffset _ angleOffset veryDeepCopyWith: deepCopier.	growingOrRotating _ growingOrRotating veryDeepCopyWith: deepCopier.	haloBox _ haloBox! !!HaloMorph methodsFor: 'initialization' stamp: 'jmv 10/11/2010 23:24'!initialize	"initialize the state of the receiver"	super initialize.	""	growingOrRotating _ false! !!HaloMorph methodsFor: 'private' stamp: 'jmv 10/11/2010 23:33'!addHandle: handleSpec on: eventName send: selector to: recipient 	"Add a handle within the halo box as per the haloSpec, and set it up to respond to the given event by sending the given selector to the given recipient.  Return the handle."	| handle aPoint iconName colorToUse |	aPoint := self 				positionIn: haloBox				horizontalPlacement: handleSpec horizontalPlacement				verticalPlacement: handleSpec verticalPlacement.	handle := EllipseMorph 				newBounds: (Rectangle center: aPoint extent: HandleSize asPoint)				color: (colorToUse := Color colorFrom: handleSpec color).	self addMorph: handle.	(iconName := handleSpec iconSymbol) ifNotNil: [			| form |			form := Icons at: iconName ifAbsent: [self class perform: iconName].			form ifNotNil: [					handle addMorphCentered: (ImageMorph new								image: form;								color: colorToUse makeForegroundColor;								lock)]].	handle 		on: #mouseUp		send: #endInteraction		to: self.	handle 		on: eventName		send: selector		to: recipient.	handle 		setBalloonText: (target balloonHelpTextForHandle: handle) translated.	^handle! !!HaloMorph methodsFor: 'private' stamp: 'jmv 10/11/2010 23:33'!addHandleAt: aPoint color: aColor icon: iconName on: eventName send: selector to: recipient	"Add a handle centered at the given point with the given color, and set it up to respond to the given event by sending the given selector to the given recipient.  Return the handle."	| handle |	handle _ EllipseMorph		newBounds: (Rectangle center: aPoint extent: self handleSize asPoint)		color: aColor.	self addMorph: handle.	iconName ifNotNil:		[ | form |		form _ Icons at: iconName ifAbsent: [self class perform: iconName].		form ifNotNil:			[handle addMorphCentered: (ImageMorph new				image: form; 				color: aColor makeForegroundColor;				lock)]].	handle on: #mouseUp send: #endInteraction to: self.	handle on: eventName send: selector to: recipient.	handle setBalloonText: (target balloonHelpTextForHandle: handle) translated.	^ handle! !!HaloMorph methodsFor: 'private' stamp: 'jmv 10/11/2010 23:25'!addHandles	| box |	target isWorldMorph ifTrue: [^ self addHandlesForWorldHalos].	self removeAllMorphs.  "remove old handles, if any"	self bounds: target worldBoundsForHalo.  "update my size"	box _ self basicBox.	target addHandlesTo: self box: box.	self addName.	growingOrRotating _ false.	self layoutChanged.	self changed.! !!HaloMorph class methodsFor: 'class initialization' stamp: 'jmv 10/11/2010 23:32'!initialize	"HaloMorph initialize"	Preferences preferenceAt: #haloEnclosesFullBounds ifAbsent: [		Preferences addPreference: #haloEnclosesFullBounds			category: #halos			default: false			balloonHelp: 'if true, halos will enclose the full bounds of the target Morph, rather than just the bounds'	].  	HandleSize _ 16.	Icons _ Dictionary new.	Preferences resetHaloSpecifications! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:11'!collapseIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #collapseIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAAAoAAAAQAQMAAAAVsXwDAAAABlBMVEX///8AAABVwtN+AAAAHklEQVR4XmNABnIMDPUMDIkNDAcboegxI0jEBqEEAJsXBuQ1QnVfAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:12'!debugIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #debugIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAKklEQVR4XmOAA2YGBsYGBoYDDAIHGCQOMPAfYGB/wMBQwMBgwcAgAVcFAILSBWOb9kW7AAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:12'!dismissIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #dismissIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAHklEQVR4XmNABjwGDHwFDOwPGJgPgBCQAeQCBZEAAHDUBMlabZn2AAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:13'!dragIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #dragIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAHklEQVR4XmOAAxkLBgEOBvEXDCwKCATkAgWBUjAAAFCjA2d9sn1WAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:31'!duplicateIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #duplicateIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAIUlEQVR4XmNABvINDAJA9INBoINBkINBnoOBEYh+ICsBAGU3BBJiY6CZAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:14'!fontEmphIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #fontEmphIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAIklEQVR4XmNABvJ7GOQXMEgoMEg4MMhVMMg5MEg0QBEMAABvFwTnHxf6BAAAAABJRU5ErkJggg==' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:14'!fontSizeIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #fontSizeIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAIElEQVR4XmNAgA8MDA1QxNfAwPGAgaOBgacBRAIRDAAAkngGC2jZE2AAAAAASUVORK5CYII=' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:15'!fontStyleIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #fontStyleIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAIElEQVR4XmNABvIVDJwODBwODFwODHwFIJIDjGQc4EoASL8DJ688wKQAAAAASUVORK5CYII=' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:15'!grabIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #grabIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAKklEQVR4XmMAAsYGEGJyYGBRYOAQYBDgYFB/wiCiwcBjABIBIvYHDDAAAG8cBEtTRUljAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:16'!helpIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #helpIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAJElEQVR4XmOAAOYDDOwPGHgMQIgBiBIYGA4wMDaAEBDAGQwMAIjBBXexsDsxAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:16'!menuIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #menuIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAE0lEQVR4XmOAA/4PUMQhgE4iAQClMwZDP3yc0QAAAABJRU5ErkJggg==' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:16'!paintIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #paintIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAKUlEQVR4XmOAAwkGBjkGBu4GBp4DDCwJDGwGDMwSDIwdDAw3GBgK4KoAV3UEFJk+w6QAAAAASUVORK5CYII=' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:17'!recolorIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #recolorIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAKElEQVR4XmNAAAEGhgoG5g8MjB8YmBIYWBIYOBYwCDIwCDEwyCAUAQBsPgQaQ/Ai2wAAAABJRU5ErkJggg==' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:31'!rotateIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #rotateIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAI0lEQVR4XmOAAMYGBiYwg/0BA4sGg4oKCIkogLgg4ABSAAYAW2gEA7XBkhoAAAAASUVORK5CYII=' base64Decoded asByteArray readStream ]! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:17'!scaleIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ Icons at: #scaleIcon ifAbsentPut: [		Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEX///8AAABVwtN+AAAAGklEQVR4XmNABvwXGDgCEAjIZRBg4P+ArAQAYQsELjspgUgAAAAASUVORK5CYII=' base64Decoded asByteArray readStream ]! !!IconicButton methodsFor: 'initialization' stamp: 'jmv 10/11/2010 23:54'!setDefaultLabel	self labelGraphic: HaloMorph paintIcon! !!MenuMorph methodsFor: 'construction' stamp: 'jmv 10/12/2010 09:45'!addStayUpIcons	| closeBox pinBox w |	(self valueOfProperty: #hasStayUpIcons ifAbsent: [ false ])		ifTrue: [		 	self removeProperty: #needsStayUpIcons.			^self ].	titleMorph ifNil: [		"Title not yet there. Flag ourself, so this method is called again when adding title."		self setProperty: #needsStayUpIcons toValue: true.		^ self].	closeBox := IconicButton new target: self;		actionSelector: #delete;		labelGraphic: self class closeIcon;		color: Color transparent;		extent: 14 @ 16;		borderWidth: 0.	pinBox := IconicButton new target: self;		actionSelector: #stayUp:;		arguments: {true};		labelGraphic: self class pushPinIcon;		color: Color transparent;		extent: 14 @ 15;		borderWidth: 0.	w _ (titleMorph hasSubmorphs ifTrue: [ titleMorph firstSubmorph width ] ifFalse: [ 0 ]) + 42.	self addMorphFront: 		(AlignmentMorph proportional			height: (titleMorph height max: 19);			width: w;	"Make room for buttons"			color: Color transparent;			addMorph: closeBox				fullFrame: (LayoutFrame fractions: (0@0 corner: 0@1) offsets: (0@0 corner: 16@0));			addMorph: titleMorph				fullFrame: (LayoutFrame fractions: (0@0 corner: 1@1) offsets: (17@0 corner: -17@0));			addMorph: pinBox				fullFrame: (LayoutFrame fractions: (1@0 corner: 1@1) offsets: (-16@0 corner: 0@0))).	self setProperty: #hasStayUpIcons toValue: true.	self removeProperty: #needsStayUpIcons! !!MenuMorph class methodsFor: 'images' stamp: 'jmv 10/12/2010 09:44'!closeIcon	"Supplied here because we don't necessarily have ComicBold"	^ CloseIcon ifNil: [		CloseIcon _ Form			extent: 10 @ 16			depth: 2			fromArray: #(0 0 0 0 1342259200 1409630208 353697792 89391104 				22020096 89391104 353697792 1409630208 1342259200 0 0 0 )			offset: 0 @ 0 ].! !!MenuMorph class methodsFor: 'images' stamp: 'jmv 10/12/2010 09:45'!pushPinIcon	"Answer the push-pin image, creating and caching it at this time if it is absent"	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s |			PNGReadWriter				putForm: (Form fromFileNamed: 'pushPinImage.png')				onStream: s]) asString base64Encoded)	"	^ PushPinIcon ifNil: [ PushPinIcon _ (Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAAA0AAAAOCAYAAAD0f5bSAAACGklEQVR4XoWSX0hTYRjGT+d85ztnZ1qToGJQoankAtuaIyGsnBdR3mQSFtMIAonSWRcy0quu8ioc2lxeCGIQSRetckNG2FUXlnZZMeefOfFmdWMQdfPruK7EQS+8Nx/83ud53vdTStX0i2lqa2tobmnhdMtFBgYHUf5XbrebV6kUrYl1jNFlZOt96k/6WVldKQ1nMhl0XedzZg0tnkexWx3LoZ+9QcDvLw3lcjkcpsHrmRTVUzn2xDdQY+vIoY8Iy0U0Gv0HFgoFEokEi4uLTE5O4nBaXLt+laGF7za0rZS3VTcxPefwnvKh5PN5fD4fgUAATdOQmo44UInp3Etv/A3mUxuKbaDbLZq7MGwXSiQSobOzk46ODhyG5HZPL+6xrxiPFhBPsojYKjL6DTm6hKz04XK5UNraLtNz9w7J2STJ5Ax/fv+i6eUmIm7nGF7CrGlEN8rQrH1FJ+FwGKW/P0KV/wwP53/wLveTBx8KOGJryMdfMLwXcDrK6bvXRygUYmJigq2tLZT5TwuouoEcmLWt5JHbCpG3iEPVqKqGbk+fmnq2e9UnPB5E/XnU0RXE2DLm8SZ0Vdh2dBtUCQaDO6FsNkt5WRlSGBjBW4jhTDG06HuOrA8ihChudgfU3d2NZVm0t1+xj2qhH6zC9F5CHvMiDGfxd4yMjOyE6urqSKfTxcf3c3N0dd3kyOGj7K+ooKGhkfHx8V15/gJScSdVQWdhoAAAAABJRU5ErkJggg==' base64Decoded asByteArray readStream	)]! !!MenuMorph class methodsFor: 'as yet unclassified' stamp: 'jmv 10/12/2010 09:45'!initialize	CloseIcon _ nil.	PushPinIcon _ nil! !!Preferences class methodsFor: 'halos' stamp: 'jmv 10/11/2010 23:03'!haloSpecifications	"Answer a list of HaloSpecs that describe which halos are to be used, what they should look like, and where they should be situated"	^ Parameters at: #HaloSpecs ifAbsent: [			self installHaloTheme: #iconicHaloSpecifications.			^ Parameters at: #HaloSpecs]	"Preferences haloSpecifications"	"Preferences resetHaloSpecifications"! !!Preferences class methodsFor: 'halos' stamp: 'jmv 10/11/2010 23:31'!iconicHaloSpecifications	"Answer an array that characterizes the locations, colors, icons, and selectors of the halo handles that may be used in the iconic halo scheme"	"Preferences resetHaloSpecifications"^ #(	"selector						horiz				vert					color info						icon key	 ---------						------				-----------			-------------------------------		---------------"	(addCollapseHandle:		left				topCenter		(tan)							collapseIcon)	(addDebugHandle:			right				topCenter		(blue veryMuchLighter)		debugIcon)	(addDismissHandle:			left				top				(red muchLighter)			dismissIcon)	(addRotateHandle:			left				bottom			(blue)							rotateIcon)	(addMenuHandle:			leftCenter		top				(red)							menuIcon)	(addGrabHandle:				center			top				(black)							grabIcon)	(addDragHandle:				rightCenter		top				(brown)						dragIcon)	(addDupHandle:				right				top				(green)						duplicateIcon)		(addHelpHandle:				center			bottom			(lightBlue)					helpIcon)	(addGrowHandle:			right				bottom			(yellow)						scaleIcon)	(addFontSizeHandle:		leftCenter		bottom			(lightGreen)					fontSizeIcon)	(addFontStyleHandle:		center			bottom			(lightRed)						fontStyleIcon)	(addFontEmphHandle:		rightCenter		bottom			(lightBrown darker)			fontEmphIcon)	(addRecolorHandle:			right				bottomCenter	(magenta darker)			recolorIcon))! !!Preferences class methodsFor: 'standard queries' stamp: 'jmv 10/11/2010 22:51'!menuButtonInToolPane	^ true! !!SketchMorph methodsFor: 'initialization' stamp: 'jmv 10/11/2010 23:57'!initialize	^ self initializeWith: self class paintingIcon deepCopy.! !!ColorPickerMorph methodsFor: 'menu' stamp: 'jmv 10/11/2010 23:51'!pickUpColorFor: aMorph	"Show the eyedropper cursor, and modally track the mouse through a mouse-down and mouse-up cycle"      | aHand localPt |	aHand _ aMorph ifNil: [self activeHand] ifNotNil: [aMorph activeHand].	aHand ifNil: [aHand _ self currentHand].	self addToWorld: aHand world near: (aMorph ifNil: [aHand world]) fullDisplayBounds.	self owner ifNil: [^ self].	aHand showTemporaryCursor: self class eyedropperIcon 			hotSpotOffset: 6 negated @ 4 negated.    "<<<< the form was changed a bit??"	self updateContinuously: false.	[Sensor anyButtonPressed]		whileFalse: 			 [self trackColorUnderMouse].	self deleteAllBalloons.	localPt _ Sensor cursorPoint - self topLeft.	self inhibitDragging ifFalse: [		(DragBox containsPoint: localPt) ifTrue:			["Click or drag the drag-dot means to anchor as a modeless picker"			^ self anchorAndRunModeless: aHand].	].	(clickedTranslucency _ TransparentBox containsPoint: localPt)		ifTrue: [selectedColor _ originalColor].	self updateContinuously: true.	[Sensor anyButtonPressed]		whileTrue:			 [self updateTargetColorWith: self indicateColorUnderMouse].	aHand newMouseFocus: nil;		showTemporaryCursor: nil;		flushEvents.	self delete.		  ! !!SketchMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:56'!paintingIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ PaintingIcon ifNil: [		PaintingIcon _ Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAACkAAAA0CAYAAAAXKBGzAAABgElEQVR4XuWZP5KCMBTGU1p6BEtLSkpLj7ClJUfwCJaWW3oES46w5R7B0tLSUj9nGLMxgUjeP1xmvhEI4G++l/cIifvobbfKl1kwcdASOBHQXIBDpQSa86e/c+cus78aAlYHFAPNDXEKEGoXzKGXghwN+k629oWbLePDBzR17ZZV62bV9SHs45x/DRwb4yAJJGA6OF8ALSlBpJAxwCFQdsgcF01BQn5fDLWutzYgw6Qx52IIC+egMLNFBxpUzrAOMMxDph62+ro3bp/CsSlIH87XojES6tDBUCWOkkHCLS5IsnBv1v2QaBdPotjNAAkdxTEl4FvAfTcitJ1US5RkjRwNahHyBXTo4uP+KTXQPrjT+VXfjQJorAEgMUAN0KSbKRc7SYd+upDQTxsHxHmVBEo1ou/BNYDht6QvlpQ81lpJNeBmK+qUXwZmZnPJ3j7cs7ifA6m9wiAyfPu3kCwTBiIuaoCyfKhRgorMupXATnrmTWyNx8RCqXlADuDJL9jfAEQTbn3reyhsAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!ColorPickerMorph class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:39'!eyedropperIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ EyedropperIcon ifNil: [		EyedropperIcon _ Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAACYAAAAkCAYAAADl9UilAAABiklEQVR4XuXYoZKDMBAGYO6ZYpBIJBKJYngTHoHJEyCRlUhMfCWyEonc5l+aTI62c+qy6TQzO7HfbDY/abPvX5+yjNZk2paMUqTtngbKQsiCiPcHzpYsykIYdCrgWimcCTH2KH05WJZR13UUGaX52F6hQhgqKszP1BsUZkwx6oeSQrUe9Y8wjoFH/XV80VDHzVMcB8f+AqUEUFj6FAO+Y4/8ctGgYqI8DoAA5+q5SxFR4zjSPM+MCGdJFDVNE63rSljLsjDmOQ4EUNu2MWrfd7per5zk6JJGakjMVIi63W5kjD1FO/DKdqrve96joy6XC3foF8p+gvI89wjumMdFRKGA0lYFVFmWcs+Yc6eAwkwpybcV4sANOaO0obquqSgK2U6FN8+hmqaRQyGbzijMk+hMhSjcPIdKolNhRgEV/Sn8aqZCFDJKtFNI9HNGAYU0F0PhlYAPsosDdAhxIIpqzfE6cCjMU1VV8r+YAUMcuM/LMAxp/IwHDEcmeutCzLtK5t+YpDDfD/vkdQfdhqlIh/LZTwAAAABJRU5ErkJggg==' base64Decoded asByteArray readStream.		EyedropperIcon offset: -12 @ -35 ]! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 10/12/2010 09:40'!createCloseBox	^ self createBox labelGraphic: self class closeIcon;		 extent: self boxExtent;		 actionSelector: #closeBoxHit;		 setBalloonText: 'close this window' translated! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 10/12/2010 09:42'!createCollapseBox	^ self createBox labelGraphic: self class collapseIcon;		 extent: self boxExtent;		 actionSelector: #collapseOrExpand;		 setBalloonText: 'collapse this window'! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 10/12/2010 00:00'!createExpandBox	^ self createBox 				labelGraphic: self class expandIcon;			 extent: self boxExtent;		 actWhen: #buttonUp;		 actionSelector: #expandBoxHit;		 setBalloonText: 'expand to full screen' translated! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 10/12/2010 00:00'!createMenuBox	^ self createBox 				labelGraphic: self class menuIcon;		 extent: self boxExtent;		 actWhen: #buttonDown;		 actionSelector: #offerWindowMenu;		 setBalloonText: 'window menu' translated! !!SystemWindow class methodsFor: 'instance creation' stamp: 'jmv 10/12/2010 09:40'!closeIcon	"Supplied here because we don't necessarily have ComicBold"	CloseIcon ifNil: [		CloseIcon _ (Form			extent: 9@9			depth: 16			fromArray: #( 65537 0 0 1 65536 65537 65536 0 65537 65536 1 65537 1 65537 0 0 65537 65537 65536 0 0 1 65537 0 0 0 65537 65537 65536 0 1 65537 1 65537 0 65537 65536 0 65537 65536 65537 0 0 1 65536)			offset: 0@0)].	CloseIcon _ (CloseIcon asFormOfDepth: 32) fixAlpha.	^CloseIcon! !!SystemWindow class methodsFor: 'instance creation' stamp: 'jmv 10/12/2010 09:42'!collapseIcon	"Supplied here because we don't necessarily have ComicBold"	CollapseIcon ifNil: [		CollapseIcon _ (Form			extent: 10@10			depth: 16			fromArray: #( 0 131074 131074 131074 0 2 131074 131074 131074 131072 131074 131072 0 2 131074 131074 0 0 0 131074 131074 0 0 0 131074 131074 0 0 0 131074 131074 0 0 0 131074 131074 131072 0 2 131074 2 131074 131074 131074 131072 0 131074 131074 131074 0)			offset: 0@0)].	CollapseIcon _ (CollapseIcon asFormOfDepth: 32) fixAlpha.	^CollapseIcon! !!SystemWindow class methodsFor: 'class initialization' stamp: 'jmv 10/12/2010 09:42'!recreateBoxes	CloseIcon _ nil.	CollapseIcon _ nil! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:59'!expandIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ ExpandIcon ifNil: [		ExpandIcon _ Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAJ0lEQVR4XmNgYOD4jx1jAGyCJCnEsIEYE0lXSMgzKHysHqCfQtwYAJeTKiCsUgn2AAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!SystemWindow class methodsFor: 'accessing - icons' stamp: 'jmv 10/11/2010 23:59'!menuIcon	"Created using:	Clipboard default clipboardText:	 	((ByteArray streamContents:[:s|			PNGReadWriter				putForm: (aForm)				onStream: s]) asString base64Encoded)	"	^ MenuIcon ifNil: [		MenuIcon _ Form fromBinaryStream: 'iVBORw0KGgoAAAANSUhEUgAAAAsAAAAKCAYAAABi8KSDAAAALUlEQVR4XmNgYGD8TzyGEEQAFMXImuAm4VJMtMmETEdxM+09iO4MDJosDxLGAMTrOwH2L4NmAAAAAElFTkSuQmCC' base64Decoded asByteArray readStream ]! !!ThreePhaseButtonMorph class methodsFor: 'class initialization' stamp: 'jmv 10/11/2010 23:07'!initialize	"ThreePhaseButtonMorph initialize"	| extent inset |	extent _ 12@12.	inset _ 3.	Icons _ Dictionary new.	#(CheckBoxOff CheckBoxOn CheckBoxPressed) do: [:button |		| f r |		f _ ColorForm extent: extent depth: 1.		f colors: {Color transparent. Color black}.		f borderWidth: 1.		r _ f boundingBox insetBy: inset.		button == #CheckBoxPressed ifTrue: [f border: r width: 1].		button == #CheckBoxOn ifTrue: [f fillBlack: r].		Icons at: button put: f ]! !!ThreePhaseButtonMorph class methodsFor: 'instance creation' stamp: 'jmv 10/11/2010 23:07'!checkBox	"Answer a button pre-initialized with checkbox images."	| f |	^self new		onImage: (f _ Icons at: #CheckBoxOn);		pressedImage: (Icons at: #CheckBoxPressed);		offImage: (Icons at: #CheckBoxOff);		extent: f extent + (2@0);		yourself! !ThreePhaseButtonMorph initialize!!classDefinition: #ThreePhaseButtonMorph category: #'Morphic-Widgets'!ImageMorph subclass: #ThreePhaseButtonMorph	instanceVariableNames: 'offImage pressedImage state target actionSelector arguments actWhen'	classVariableNames: 'AuthorModeOwner Icons'	poolDictionaries: ''	category: 'Morphic-Widgets'!SystemWindow class removeSelector: #closeBoxImage!SystemWindow class removeSelector: #collapseBoxImage!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes paneColor'	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon TopWindow'	poolDictionaries: ''	category: 'Morphic-Windows'!!classDefinition: #ColorPickerMorph category: #'Morphic-Widgets'!SketchMorph subclass: #ColorPickerMorph	instanceVariableNames: 'selectedColor sourceHand deleteOnMouseUp updateContinuously target selector argument originalColor isModal clickedTranslucency'	classVariableNames: 'ColorChart DragBox EyedropperIcon FeedbackBox RevertBox TransText TransparentBox'	poolDictionaries: ''	category: 'Morphic-Widgets'!!classDefinition: #SketchMorph category: #'Morphic-Basic'!Morph subclass: #SketchMorph	instanceVariableNames: 'originalForm'	classVariableNames: 'PaintingIcon'	poolDictionaries: ''	category: 'Morphic-Basic'!MenuMorph class removeSelector: #closeBoxImage!MenuMorph initialize!MenuMorph class removeSelector: #pushPinImage!!classDefinition: #MenuMorph category: #'Morphic-Menus'!BorderedMorph subclass: #MenuMorph	instanceVariableNames: 'defaultTarget selectedItem stayUp popUpOwner activeSubMenu titleMorph'	classVariableNames: 'CloseIcon PushPinIcon'	poolDictionaries: ''	category: 'Morphic-Menus'!HaloMorph class removeSelector: #dupIcon!HaloMorph initialize!HaloMorph removeSelector: #addCircleHandles!HaloMorph removeSelector: #addFewerHandlesHandle:!HaloMorph removeSelector: #addFullHandles!HaloMorph removeSelector: #addGraphicalHandle:at:on:send:to:!HaloMorph removeSelector: #addGraphicalHandleFrom:at:!HaloMorph removeSelector: #addHandleAt:color:on:send:to:!HaloMorph removeSelector: #addSimpleHandles!HaloMorph removeSelector: #addSimpleHandlesForWorldHalos!HaloMorph removeSelector: #addSimpleHandlesTo:box:!HaloMorph removeSelector: #basicBoxForSimpleHalos!HaloMorph removeSelector: #directionArrowLength!HaloMorph removeSelector: #handleAllowanceForIconicHalos!HaloMorph removeSelector: #simpleFudgeOffset!!classDefinition: #HaloMorph category: #'Morphic-Widgets'!Morph subclass: #HaloMorph	instanceVariableNames: 'target innerTarget positionOffset angleOffset growingOrRotating haloBox'	classVariableNames: 'HandleSize Icons'	poolDictionaries: ''	category: 'Morphic-Widgets'!Morph removeSelector: #addSimpleHandlesTo:box:!Smalltalk removeClassNamed: #FormsAndHelpsRepository!