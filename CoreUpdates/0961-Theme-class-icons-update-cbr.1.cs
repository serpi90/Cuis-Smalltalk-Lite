'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 9 May 2011 at 1:18:56 am'!!classDefinition: 'Theme class' category: #'Theme-Core'!Theme class	instanceVariableNames: ''!!Theme class methodsFor: 'accessing' stamp: 'cbr 5/6/2011 12:08'!decorations	^ Decorations! !!Theme class methodsFor: 'accessing' stamp: 'cbr 5/6/2011 12:05'!decorations: aDictionary	Decorations _ aDictionary! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/5/2011 23:39'!baseDirectoryFor: aTheme	^ (FileDirectory default directoryNamed: self repositoryName) 		directoryNamed: aTheme asString! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 12:03'!bootstrap	"Destructive. Loads up an initial icon set."	self decorations: (Theme mapDecorationContextsTo: Theme)! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 01:08'!decorationsCollect: aBlock for: aTheme	^ (self baseDirectoryFor: aTheme) withAllSubdirectoriesCollect: aBlock! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 11:19'!exportIcon: image asPNGNamed: aString	"self exportIcon: self newIcon asPNGNamed: 'newIcon'"	| writer |	writer := PNGReadWriter on: (FileStream newFileNamed: aString, '.png').	[ writer nextPutImage: image ]			ensure: [writer close]! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 11:19'!filesOfResolution: aString decor: decorationContext in: aTheme	| files |	files _ (self baseDirectoryFor: aTheme)		directoryNamed: aString , FileDirectory pathNameDelimiter asString , decorationContext.	^ files		entries select: [ :i | '*.png' match: i name ]! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 11:20'!import: assetName atResolution: aString fromDecor: decorationContext theme: theme	| delimiter |		delimiter _ FileDirectory pathNameDelimiter asString.	^ Form fromFileNamed:		(self baseDirectoryFor: theme) pathName , 		delimiter,		aString ,		delimiter ,		decorationContext ,		delimiter , 		assetName! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 09:03'!importPNGFromFilenamed: aString	"Theme importPNGFromFilenamed: 'video-display.png'"	| form bytes object clipboard | 		form _ Form fromFileNamed: aString ", '.png'".		bytes _ PNGReadWriter bytesFor: form.		object _ bytes asString base64Encoded.		clipboard _ Clipboard default storeObject: object.	self flag: #todo. "am I repeating myself here? --cbr"	^ clipboard retrieveStringOrText! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 12:05'!load: aTheme	Decorations _ Decorations union: (self mapDecorationContextsTo: aTheme)! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/6/2011 11:22'!mapDecorationContextsTo: aTheme	| directories map theme |		directories _ (aTheme splitPathsFor: aTheme) reject: [ :i | i size < 3 ].		map _ Dictionary new.		theme _  aTheme asString.	directories do: [ :dir |		| dimensions decorationContext supportedFiles importedGraphics |			dimensions _ dir second.			decorationContext _ dir third.			supportedFiles _ aTheme				filesOfResolution: dimensions 				decor: decorationContext				in: aTheme.			importedGraphics _ supportedFiles collect: [ :i | 				| shortName | shortName _ (i name findBetweenSubStrs: #( . )) first.				shortName -> (self 					import: i name 					atResolution: dimensions					fromDecor: decorationContext					theme: aTheme)			].		map at: theme ifAbsentPut: [ Dictionary new ].			(map at: theme) at: dimensions ifAbsentPut: [ Dictionary new ].		((map at: theme) at: dimensions)			at: decorationContext			put: (importedGraphics as: Dictionary).	].	^ map! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 4/27/2011 00:52'!repositoryName	^ 'Themes'! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/5/2011 23:53'!scanBaseDirectoryFor: aTheme	^ self 		decorationsCollect: [ :i |			(i pathName 				findBetweenSubStrs: {self repositoryName}) last 		]		for: aTheme! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/5/2011 23:53'!splitPathsFor: aTheme	^ (self scanBaseDirectoryFor: aTheme) collect: [ :i | 		i findBetweenSubStrs: { FileDirectory pathNameDelimiter } 	]! !!Theme class methodsFor: 'class initialization' stamp: 'cbr 5/9/2011 01:09'!currentTheme: aTheme	CurrentTheme := aTheme new.	SHTextStylerST80 initialize.	World backgroundImage ifNil: [ World color: CurrentTheme background ].	SystemWindow initialize.	FormCanvas clearFormsCache.	Taskbar reset; initialize.	World restoreMorphicDisplay.	"Smalltalk addToStartUpList: self" self flag: #todo. "Do I really need this? What's it do? --cbr"		^ CurrentTheme! !!Theme class reorganize!('instance creation' beCurrent)('accessing' current decorations decorations:)('importing/exporting' baseDirectoryFor: bootstrap decorationsCollect:for: exportIcon:asPNGNamed: filesOfResolution:decor:in: import:atResolution:fromDecor:theme: importPNGFromFilenamed: load: mapDecorationContextsTo: repositoryName scanBaseDirectoryFor: splitPathsFor:)('class initialization' currentTheme:)!