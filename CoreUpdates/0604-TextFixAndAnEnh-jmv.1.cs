'From Cuis 2.7 of 3 September 2010 [latest update: #600] on 9 September 2010 at 2:06:31 pm'!!String methodsFor: 'copying' stamp: 'jmv 9/8/2010 15:23'!, aStringOrText	^ (aStringOrText is: #Text)		ifTrue: [ self asText , aStringOrText ]		ifFalse: [ super , aStringOrText ].! !!Text methodsFor: 'converting' stamp: 'jmv 9/9/2010 10:16'!replaceFrom: start to: stop withString: replacementString attributes: attributesArray startingAt: repStart 	"This destructively replaces elements from start to stop in the receiver starting at index, repStart, in replacementCollection. 	Do it to both the string and the runs.	The size does not change"	| newRepRuns |	string replaceFrom: start to: stop with: replacementString startingAt: repStart.	newRepRuns _ RunArray new: stop-start+1 withAll: attributesArray.	runs _ runs copyReplaceFrom: start to: stop with: newRepRuns.	"Ensure the ParagraphAttributes invariant for the interval that could have been affected"	self fixParagraphAttributesFrom: start to: start + replacementString size - 1! !!TextStream methodsFor: 'as yet unclassified' stamp: 'jmv 9/9/2010 10:17'!nextPutAllString: aString withAttributes: attributesArray	"Optimized access to get around Text at:Put: overhead"	| n |	n _ aString size.     position + n > writeLimit       ifTrue: [       	self growTo: position + n + 10].	collection 		replaceFrom: position+1		to: position + n		withString: aString		attributes: attributesArray		startingAt: 1.	position _ position + n! !