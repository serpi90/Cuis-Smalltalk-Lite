'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 10 November 2010 at 1:36:09 pm'!!String methodsFor: 'converting' stamp: 'jmv 11/10/2010 13:31'!withLineEndings: lineEndingString	"assume the string is textual, and that CR, LF, and CRLF are all 	valid line endings.  Replace each occurence with a single CR"	| cr lf crlf inPos outPos outString lineEndPos newOutPos lineEndingSize |	cr _ Character cr.	lf _ Character linefeed.	crlf _ CharacterSet new.	crlf add: cr; add: lf.	inPos _ 1.	outPos _ 1.	lineEndingSize _ lineEndingString size.	"This could be extremely inefficient if lineEndingString size > 1"	outString _ String new: self size * lineEndingSize.	[		lineEndPos _ self indexOfAnyOf: crlf startingAt: inPos ifAbsent: [0].		lineEndPos ~= 0 ] whileTrue: [			newOutPos _ outPos + (lineEndPos - inPos).			outString replaceFrom: outPos to: newOutPos - 1 with: self startingAt: inPos.			1 to: lineEndingSize do: [ :i |				outString at: newOutPos put: (lineEndingString at: i).				newOutPos _ newOutPos + 1 ].			outPos _ newOutPos.			((self at: lineEndPos) = cr and: [ lineEndPos < self size and: [ (self at: lineEndPos+1) = lf ] ]) ifTrue: [				"CRLF ending"				inPos _ lineEndPos + 2 ]			ifFalse: [ 				"CR or LF ending"				inPos _ lineEndPos + 1 ]. ].	"no more line endings.  copy the rest"	newOutPos _ outPos + (self size - inPos).	outString replaceFrom: outPos to: newOutPos with: self startingAt: inPos.	^outString copyFrom: 1 to: newOutPos! !!String methodsFor: 'converting' stamp: 'jmv 11/10/2010 13:35'!withSqueakLineEndings	"assume the string is textual, and that CR, LF, and CRLF are all 	valid line endings.  Replace each occurence with a single CR"	^ self withLineEndings: String cr! !String removeSelector: #withInternetLineEndings!