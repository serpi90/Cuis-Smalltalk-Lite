'From Cuis 3.1 of 4 March 2011 [latest update: #850] on 12 April 2011 at 9:42:37 am'!!LayoutMorphTest methodsFor: 'tests' stamp: 'jmv 4/12/2011 09:37'!testLayout1	"	self new testLayout1	"	| pane row1 row2 row3 r1c1 r1c2 r1c3 r1c4 r1c5 r2c1 r2c2 r2c3 r3c1 r3c2 r3c3 |	pane _ LayoutMorph newColumn separation: 5.	pane color: Color red.	row1 _ LayoutMorph newRow separation: 5.	row1 color: Color red;		addMorph: (r1c1 _ RectangleMorph new color: (Color h: 60 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 10);		addMorph: (r1c2 _ RectangleMorph new color: Color blue)			layoutSpec: (LayoutSpec proportionalWidth: 0.8);		addMorph: (r1c3 _ RectangleMorph new color: (Color h: 30 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.4);		addMorph: (r1c4 _ RectangleMorph new color: (Color h: 30 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.15);		addMorph: (r1c5 _ RectangleMorph new color: (Color h: 60 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 20 fixedHeight: 20).	pane addMorph: row1 layoutSpec: LayoutSpec useAll.	row2 _ LayoutMorph newRow separation: 5.	row2 color: Color red;		addMorph: (r2c1 _ RectangleMorph new color: Color blue)			layoutSpec: (LayoutSpec proportionalWidth: 0.8);		addMorph: (r2c2 _ RectangleMorph new color: (Color h: 30 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.4);		addMorph: (r2c3 _ RectangleMorph new color: (Color h: 30 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.2).	pane addMorph: row2 layoutSpec: LayoutSpec useAll.	row3 _ LayoutMorph newRow separation: 5.	row3 color: Color red;		addMorph: (r3c1 _ RectangleMorph new color: (Color h: 120 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 20 proportionalHeight: 0.8);		addMorph: (r3c2 _ RectangleMorph new color: (Color h: 90 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.5 fixedHeight: 40);		addMorph: (r3c3 _ RectangleMorph new color: (Color h: 150 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 30 proportionalHeight: 1.0).	pane addMorph: row3 layoutSpec: (LayoutSpec fixedHeight: 60).	pane openInWorld; extent: 408@300.	World doOneCycleNow.	self assert: row1 width = (pane width - 10).	self assert: r1c1 width class == SmallInteger.	self assert: r1c1 height class == SmallInteger.	self assert: r1c1 width = 10.	self assert: r1c1 height = (row1 height - 10).	self assert: r1c2 width = 200.	self assert: r1c2 height = (row1 height - 10).	self assert: r1c3 width = (r1c2 width / 0.8 * 0.4) rounded.	self assert: r1c3 height = (row1 height - 10).	self assert: r1c4 width = (r1c2 width / 0.8 * 0.15) rounded.	self assert: r1c4 height = (row1 height - 10).	self assert: r1c5 width = 20.	self assert: r1c5 height = 20.	self assert: row2 width = (pane width - 10).	self assert: r2c1 width = 216.	self assert: r2c1 height = (row2 height - 10).	self assert: r2c2 width = (r2c1 width / 0.8 * 0.4) rounded.	self assert: r2c2 height = (row2 height - 10).	self assert: r2c3 width = (r2c1 width / 0.8 * 0.2) rounded.	self assert: r2c3 height = (row2 height - 10).	self assert: row3 width = (pane width - 10).	self assert: row3 height = 60.	self assert: r3c1 width = 20.	self assert: r3c1 height = (row3 height - 10 * 0.8) rounded.	self assert: r3c2 width = (row3 width - 10 - 20 - 10 - 30 * 0.5) rounded.	self assert: r3c2 height = 40.	self assert: r3c3 width = 30.	self assert: r3c3 height = (row3 height - 10).	pane delete! !!LayoutMorphTest methodsFor: 'tests' stamp: 'jmv 4/12/2011 09:42'!testLayout2	"	self new testLayout2	"	| pane row c1 c2 c3 |	pane _ LayoutMorph newColumn separation: 5.	pane color: Color red.	row _ LayoutMorph newRow separation: 5.	row		color: (Color h: 270 s: 0.2 v: 0.6);		addMorph: (c1 _ RectangleMorph new color: (Color h: 120 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 20 proportionalHeight: 0.8 minorDirectionPadding: #bottom);		addMorph: (c2 _ RectangleMorph new color: (Color h: 90 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.8 fixedHeight: 40 minorDirectionPadding: #top);		addMorph: (c3 _ RectangleMorph new color: (Color h: 150 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 30 proportionalHeight: 0.7 minorDirectionPadding: #center).	pane addMorph: row layoutSpec: (LayoutSpec proportionalHeight: 0.9).	pane openInWorld; extent: 400@300.	World doOneCycleNow.	self assert: row width = (pane width - 10).	self assert: row height = (pane height - 10 * 0.9) rounded.	self assert: c1 bottom = (row bottom - 5) description: 'Should be at bottom'.	self assert: c1 width = 20.	self assert: c1 height = (row height - 10 * 0.8) rounded.	self assert: c2 top = (row top + 5) description: 'Should be at top'.	self assert: c2 width = 256.	self assert: c2 height = 40.	self assert: ((c3 top - row top) - (row bottom - c3 bottom)) abs < 2 description: 'Should be centered'.	self assert: c3 width = 30.	self assert: c3 height = (c1 height / 0.8 * 0.7) rounded.	pane delete! !!LayoutMorphTest methodsFor: 'tests' stamp: 'jmv 4/12/2011 09:42'!testLayout3	"	self new testLayout3	"	| pane row innerRow i1 i2 i3 c2 c3 |	pane _ LayoutMorph newColumn separation: 5.	pane color: Color red.	row _ LayoutMorph newRow separation: 5.	innerRow _ LayoutMorph newRow color: Color red;  separation: 5.	innerRow		addMorph: (i1 _ RectangleMorph new  borderWidth: 0)			layoutSpec: (LayoutSpec fixedWidth: 10 fixedHeight: 10);		addMorph: (i2 _ RectangleMorph new  borderWidth: 0)			layoutSpec: (LayoutSpec fixedWidth: 10 fixedHeight: 10);		addMorph: (i3 _ RectangleMorph new  borderWidth: 0)			layoutSpec: (LayoutSpec proportionalWidth: 1.0 fixedHeight: 10).	row		color: (Color h: 270 s: 0.2 v: 0.6);		addMorph: innerRow			layoutSpec: (LayoutSpec proportionalWidth: 0.5 fixedHeight: 30 minorDirectionPadding: #center);		addMorph: (c2 _ RectangleMorph new color: (Color h: 90 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec proportionalWidth: 0.5 fixedHeight: 40 minorDirectionPadding: #top);		addMorph: (c3 _ RectangleMorph new color: (Color h: 150 s: 0.6 v: 0.6))			layoutSpec: (LayoutSpec fixedWidth: 30 proportionalHeight: 1.0).	pane addMorph: row layoutSpec: (LayoutSpec fixedHeight: 200).	pane openInWorld; extent: 400@300.	World doOneCycleNow.	self assert: row left = (pane left + 5).	self assert: row width = (pane width - 10).	self assert: row height = 200.	self assert: innerRow left = (row left + 5).	self assert: (innerRow top - row top) = (row bottom - innerRow bottom) description: 'Should be centered'.	self assert: innerRow width = (pane width - 10 - 10 - 30 - 10 * 0.5) rounded.	self assert: innerRow height = 30.	self assert: i1 left = (innerRow left + 5).	self assert: (i1 top - innerRow top) = (innerRow bottom - i1 bottom) description: 'Should be centered'.	self assert: i1 width = 10.	self assert: i1 height = 10.	self assert: i2 left = (innerRow left + 20).	self assert: (i2 top - innerRow top) = (innerRow bottom - i2 bottom) description: 'Should be centered'.	self assert: i2 width = 10.	self assert: i2 height = 10.	self assert: i3 left = (innerRow left + 35).	self assert: (i3 top - innerRow top) = (innerRow bottom - i3 bottom) description: 'Should be centered'.	self assert: i3 width = (innerRow width - 40).	self assert: i3 height = 10.	self assert: c2 top = (row top + 5) description: 'Should be at top'.	self assert: c2 width = (pane width - 10 - 10 - 30 - 10 * 0.5) rounded.	self assert: c2 height = 40.	self assert: (c3 top - row top) = (row bottom - c3 bottom) description: 'Should be centered'.	self assert: c3 width = 30.	self assert: c3 height = (row height - 10).	pane delete! !