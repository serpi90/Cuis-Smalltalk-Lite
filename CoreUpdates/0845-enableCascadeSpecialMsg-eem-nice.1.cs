'From Cuis 3.0 of 18 January 2011 [latest update: #768] on 3 March 2011 at 9:16:11 am'!!ParseNode methodsFor: 'testing' stamp: 'eem 2/3/2011 09:12'!ensureCanCascade: encoder! !!BlockNode methodsFor: 'code generation (closures)' stamp: 'eem 2/3/2011 09:19'!deoptimize	optimized := false.	optimizedMessageNode := nil! !!MessageNode methodsFor: 'testing' stamp: 'eem 2/3/2011 09:08'!canCascade	^receiver ~~ NodeSuper! !!MessageNode methodsFor: 'testing' stamp: 'eem 2/3/2011 09:19'!ensureCanCascade: encoder	special > 0 ifTrue:		[special := 0.		 selector := encoder encodeSelector: selector key.		 arguments do:			[:each|			each isBlockNode ifTrue:				[each deoptimize]]]! !!Parser methodsFor: 'expression types' stamp: 'eem 2/3/2011 09:50'!cascade	" {; message} => CascadeNode."	| rcvr msgs |	parseNode canCascade ifFalse:		[^self expected: 'Cascading not'].	parseNode ensureCanCascade: encoder.	rcvr := parseNode cascadeReceiver.	msgs := OrderedCollection with: parseNode.	[self match: #semicolon]		whileTrue: 			[parseNode := rcvr.			(self messagePart: 3 repeat: false)				ifFalse: [^self expected: 'Cascade'].			parseNode canCascade ifFalse:				[^self expected: '<- No special messages'].			parseNode ensureCanCascade: encoder.				parseNode cascadeReceiver.			msgs addLast: parseNode].	parseNode := CascadeNode new receiver: rcvr messages: msgs! !