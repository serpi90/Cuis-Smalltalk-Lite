'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 23 November 2010 at 11:43:34 am'!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes paneColor widgetsColor '	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTR TitleGradient TopWindow '	poolDictionaries: ''	category: 'Morphic-Windows'!!ColorTheme methodsFor: 'colors' stamp: 'jmv 11/23/2010 11:21'!paneBackgroundFrom: aColor	^ aColor veryMuchLighter! !!Conformist methodsFor: 'colors' stamp: 'jmv 11/23/2010 11:21'!paneBackgroundFrom: aColor	^ Color r: 15.7 g: 16.5 b: 21.2! !!DarkBluesPalette methodsFor: 'colors' stamp: 'jmv 11/23/2010 11:21'!paneBackgroundFrom: aColor	^ Color hue: 212 chroma: 0.6 luminance: 0.4! !!DarkColorTheme methodsFor: 'colors' stamp: 'jmv 11/23/2010 11:21'!paneBackgroundFrom: aColor	^ (aColor adjustSaturation: -0.2 brightness: 0.3) alpha: 0.9! !!Morph methodsFor: 'accessing' stamp: 'jmv 11/23/2010 11:40'!adoptWidgetsColor: paneColor	self submorphsDo:[:m| m adoptWidgetsColor: paneColor].! !!ScrollBar methodsFor: 'accessing' stamp: 'jmv 11/23/2010 11:37'!adoptWidgetsColor: aColor	"Adopt the given pane color"	aColor ifNil:[^self].	self sliderColor: aColor.! !!ScrollPane methodsFor: 'access' stamp: 'jmv 11/23/2010 11:37'!adoptWidgetsColor: paneColor	super adoptWidgetsColor: paneColor.	scrollBar adoptWidgetsColor: paneColor.	hScrollBar adoptWidgetsColor: paneColor.! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/23/2010 11:38'!colorForInsets	^self widgetsColor colorForInsets! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/23/2010 11:41'!drawOn: aCanvas	| titleColor widgetsColorToUse roundCorners titleGradient |	widgetsColorToUse _ self widgetsColor.	titleColor _ self isTopWindow		ifTrue: [ widgetsColorToUse lighter ]		ifFalse: [ widgetsColorToUse ].	roundCorners _ ColorTheme current roundWindowCorners.	titleGradient _ ColorTheme current useWindowTitleGradient.	roundCorners | titleGradient		ifTrue: [			"Title area is not inside window borders"			self drawWindowBodyOn: aCanvas roundCorners: roundCorners widgetsColor: widgetsColorToUse.			self drawWindowTitleAreaOn: aCanvas roundCorners: roundCorners titleColor: titleColor useTitleGradient: titleGradient ]		ifFalse: [			"Window border encompasses title area. No round corners. No title gradient."			self drawClassicFrameOn: aCanvas titleColor: titleColor ].	self drawLabelOn: aCanvas! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/23/2010 11:41'!drawWindowBodyOn: aCanvas roundCorners: doRoundCorners widgetsColor: widgetsColor	"Title area is not inside window borders"	| r bl tl tr he tw bw |	doRoundCorners		ifFalse: [			aCanvas				fillRectangle: self boundsExcludingTitleArea				fillStyle: self fillStyle				borderStyle: self borderStyle ]		ifTrue: [			r _ ColorTheme current roundedCornerRadius.			aCanvas image: SystemWindow roundedCornerBL multipliedBy: widgetsColor at: bounds bottomLeft - (0@r).			aCanvas image: SystemWindow roundedCornerBR multipliedBy: widgetsColor at: bounds bottomRight - (r@r) .			aCanvas fillRectangle: self innerBounds fillStyle: self fillStyle.			tl _ bounds topLeft + (0@self labelHeight).			tr _ bounds topRight + (borderWidth negated@self labelHeight).			bl _ bounds bottomLeft + (r@borderWidth negated).			he _ borderWidth@(bounds height - self labelHeight - r).			tw _ bounds width@borderWidth.			bw _ bounds width - r - r@borderWidth.			aCanvas fillRectangle: (tl extent: he) fillStyle: widgetsColor.			aCanvas fillRectangle: (tr extent: he) fillStyle: widgetsColor.			aCanvas fillRectangle: (bl extent: bw) fillStyle: widgetsColor.			aCanvas fillRectangle: (tl extent: tw) fillStyle: widgetsColor ]! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 11/23/2010 11:39'!raisedColor	^self widgetsColor raisedColor! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 11/23/2010 11:39'!model: anObject	super model: anObject.	self widgetsColor: nil! !!SystemWindow methodsFor: 'menu' stamp: 'jmv 11/23/2010 11:39'!setWindowColor	"Allow the user to select a new basic color for the window"	ColorPickerMorph new		choseModalityFromPreference;		sourceHand: self activeHand;		target: self;		selector: #setWindowColor:;		originalColor: self widgetsColor;		putUpFor: self			near: self fullDisplayBounds! !!SystemWindow methodsFor: 'menu' stamp: 'jmv 11/23/2010 11:39'!setWindowColor: incomingColor	| existingColor aColor |	incomingColor ifNil: [^ self].  "it happens"	aColor _ incomingColor asNontranslucentColor.	(aColor = ColorPickerMorph perniciousBorderColor 		or: [aColor = Color black]) ifTrue: [^ self].	existingColor _ self widgetsColor.	existingColor ifNil: [^ Beeper beep].	self widgetsColor: aColor.	self changed! !!SystemWindow methodsFor: 'panes' stamp: 'jmv 11/23/2010 11:40'!addMorph: aMorph fullFrame: aLayoutFrame	super addMorph: aMorph fullFrame: aLayoutFrame.	paneMorphs _ paneMorphs copyReplaceFrom: 1 to: 0 with: (Array with: aMorph).	aMorph adoptWidgetsColor: self widgetsColor.	(aMorph is: #BorderedMorph) ifTrue: [		aMorph borderWidth: 2; borderColor: #inset; color: Color transparent ].	"reorder panes so flop-out right-side scrollbar is visible"	Preferences scrollBarsOnRight		ifTrue: [ self addMorphBack: aMorph ]! !!SystemWindow methodsFor: 'panes' stamp: 'jmv 11/23/2010 11:38'!widgetsColor	| cc |	widgetsColor ifNotNil: [ ^ widgetsColor ].	cc _ Color white.	Display depth > 2 ifTrue: [		model ifNotNil: [			model isInMemory ifTrue: [ cc _ model class windowColor ]]].	self widgetsColor: cc.	^ cc.! !!SystemWindow methodsFor: 'panes' stamp: 'jmv 11/23/2010 11:38'!widgetsColor: aColor	"aColor will be used for titles, borders, etc.	A variation of it, #paneColorFrom:, will be used for panes background"	widgetsColor _ aColor.	aColor		ifNotNil: [ self color: (ColorTheme current paneBackgroundFrom: aColor) ].	self adoptWidgetsColor: aColor.! !SystemWindow removeSelector: #drawWindowBodyOn:roundCorners:paneColor:!SystemWindow removeSelector: #paneColor!SystemWindow removeSelector: #paneColor:!SystemWindow removeSelector: #paneColorToUse!SystemWindow removeSelector: #widgetsColorr:!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes widgetsColor'	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTR TitleGradient TopWindow'	poolDictionaries: ''	category: 'Morphic-Windows'!ScrollPane removeSelector: #adoptPaneColor:!ScrollBar removeSelector: #adoptPaneColor:!Morph removeSelector: #adoptPaneColor:!DarkColorTheme removeSelector: #paneColorFrom:!DarkBluesPalette removeSelector: #paneColorFrom:!Conformist removeSelector: #paneColorFrom:!ColorTheme removeSelector: #paneColorFrom:!