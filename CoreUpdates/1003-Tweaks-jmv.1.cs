'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 24 May 2011 at 10:23:55 am'!!classDefinition: #PluggableButtonMorph category: #'Morphic-Views for Models'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font icon getStateSelector actionSelector isPressed mouseIsOver magnifiedIcon actWhen roundButtonStyle '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!!DebuggerWindow methodsFor: 'open/close' stamp: 'jmv 5/24/2011 08:05'!       delete	model ifNotNil: [ model windowIsClosing ].	super delete! !!PluggableButtonMorph methodsFor: 'accessing' stamp: 'jmv 5/24/2011 09:31'!              label: aStringOrNil font: aFontOrNil	"Label this button with the given string."	label _ aStringOrNil.	font _ aFontOrNil! !!PluggableButtonMorph methodsFor: 'accessing' stamp: 'jmv 5/24/2011 09:23'!                     roundButtonStyle: aBooleanOrNil	roundButtonStyle _ aBooleanOrNil! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 5/24/2011 09:24'!                drawOn: aCanvas	icon ifNotNil: [		self isRoundButton			ifFalse: [ self draw3DLookOn: aCanvas ].		self drawInconOn: aCanvas.		^ self ].	self isRoundButton		ifTrue: [ self drawRoundGradientLookOn: aCanvas ]		ifFalse: [ self draw3DLookOn: aCanvas. ].! !!PluggableButtonMorph methodsFor: 'initialization' stamp: 'jmv 5/24/2011 09:32'!         initialize	"initialize the state of the receiver"	super initialize.	roundButtonStyle _ nil.	"nil: honor Theme. true: draw as round button. false: draw as classic 3d border square button"	model _ nil.	getStateSelector _ nil.	actionSelector _ nil.	isPressed _ false.	mouseIsOver _ false.	actWhen _ #buttonUp.	self extent: 20 @ 15! !!PluggableButtonMorph methodsFor: 'private' stamp: 'jmv 5/24/2011 09:25'!                               magnifiedIcon	| b |	magnifiedIcon ifNil: [		magnifiedIcon _ icon.		self isRoundButton			ifFalse: [ ^ magnifiedIcon ].		b _ bounds extent x max: bounds extent y.		b < icon extent x ifTrue: [			magnifiedIcon _ icon magnifyTo: b@b ].		b /  icon extent x > 1.7			ifTrue: [					b _ b * 3 // 4.				magnifiedIcon _ icon magnifyTo: b @ b]].	^magnifiedIcon! !!PluggableButtonMorph methodsFor: 'testing' stamp: 'jmv 5/24/2011 09:24'!         isRoundButton	^roundButtonStyle ifNil: [ Theme current roundButtons ]! !!PluggableButtonMorph methodsFor: 'geometry testing' stamp: 'jmv 5/24/2011 09:11'!  containsPoint: aPoint	| iconOrigin |	(bounds containsPoint: aPoint) ifFalse: [ ^false ].	^ self isOrthoRectangularMorph or: [		magnifiedIcon isNil or: [			iconOrigin _ bounds center - (magnifiedIcon extent // 2).			(magnifiedIcon isTransparentAt: aPoint - iconOrigin) not ]]! !!PluggableButtonMorph methodsFor: 'geometry testing' stamp: 'jmv 5/24/2011 09:25'!               isOrthoRectangularMorph	"Answer true if I fill my bounds. I.e. I am a rectangle aligned with Display borders and	specified by my bounds instance variable.	If true, #containsPoint: can simply check #bounds."	^self isRoundButton not! !!PluggableListMorphOfMany methodsFor: 'event handling' stamp: 'jmv 5/24/2011 08:06'!                           mouseMove: event 	"The mouse has moved, as characterized by the event provided.  Adjust the scrollbar, and alter the selection as appropriate"	| oldIndex oldVal row |	event position y < bounds top 		ifTrue: [			scrollBar scrollUp: 1.			row _ self rowAtLocation: scroller bounds topLeft + (1 @ 1)]		ifFalse: [			row _ event position y > bounds bottom 				ifTrue: [					scrollBar scrollDown: 1.					self rowAtLocation: scroller bounds bottomLeft + (1 @ -1)]				ifFalse: [ self rowAtLocation: event position]].	row = 0 ifTrue: [^super mouseDown: event].	model okToChange ifFalse: [^self].	"No change if model is locked"	dragOnOrOff ifNil: [			"Was not set at mouse down, which means the mouse must have gone down in an area where there was no list item"			dragOnOrOff _ (self listSelectionAt: row) not].	"Set meaning for subsequent dragging of selection"	oldIndex _ self getCurrentSelectionIndex.	oldIndex ~= 0 ifTrue: [ oldVal _ self listSelectionAt: oldIndex ].	"Set or clear new primary selection (listIndex)"	dragOnOrOff 		ifTrue: [ self changeModelSelection: row ]		ifFalse: [ self changeModelSelection: 0 ].	"Need to restore the old one, due to how model works, and set new one."	oldIndex ~= 0 ifTrue: [ self listSelectionAt: oldIndex put: oldVal ].		"Select all in between if drag was too fast"	"self listSelectionAt: row put: dragOnOrOff."	(row min: dragStartRow) to: (row max: dragStartRow) do: [ :r |		self listSelectionAt: r put: dragOnOrOff]! !!SmalltalkEditor methodsFor: 'new selection' stamp: 'jmv 5/24/2011 10:21'!selectWord	"Select delimited text or word--the result of double-clicking."	| leftDelimiters rightDelimiters |	"Warning. Once me (jmv) added Character cr to the delimiters, to make double-click at and of line select whole line.	This had the bad effect that if a class name is the last word of a line, double-click would correctly select it, but after that,	doing ctrl-b to browse it would select the whole line..."	leftDelimiters _ '([{<''"'.	rightDelimiters _ ')]}>''"'.	^self selectWordLeftDelimiters: leftDelimiters rightDelimiters: rightDelimiters! !!Taskbar methodsFor: 'stepping' stamp: 'jmv 5/24/2011 09:05'!             step	"My dimensions are constrained live."	| r |	r _ World bounds.	r _ r left @ (r bottom -18) extent: r width@18.	bounds = r ifFalse: [		self bounds: r]! !!Taskbar methodsFor: 'stepping' stamp: 'jmv 5/24/2011 09:04'!                             stepTime	^ 0  "every cycle"! !GrayTheme removeSelector: #roundButtons!DarkTheme removeSelector: #roundButtons!ClassicTheme removeSelector: #squareWindowLabelButtons!BlueTheme removeSelector: #roundButtons!Theme removeSelector: #squareWindowLabelButtons!!classDefinition: #PluggableButtonMorph category: #'Morphic-Views for Models'!PluggableMorph subclass: #PluggableButtonMorph	instanceVariableNames: 'label font icon getStateSelector actionSelector isPressed mouseIsOver magnifiedIcon actWhen roundButtonStyle'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!