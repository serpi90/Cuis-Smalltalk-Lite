'From Cuis 4.0 of 16 November 2011 [latest update: #1144] on 15 December 2011 at 2:34:01 pm'!!Debugger methodsFor: 'private' stamp: 'jmv 12/15/2011 14:16'!  resumeProcess	savedCursor		ifNotNil: [Sensor currentCursor: savedCursor].	interruptedProcess isTerminated ifFalse: [		errorWasInUIProcess					ifTrue: [ProjectX resumeProcessX: interruptedProcess]					ifFalse: [interruptedProcess resume]].	"if old process was terminated, just terminate current one"	interruptedProcess _ nil.	contextStackIndex _ 0.	contextStack _ nil.	contextStackTop _ nil.	receiverInspector _ nil.	contextVariablesInspector _ nil.	World displayWorld.	Smalltalk installLowSpaceWatcher.	"restart low space handler"	errorWasInUIProcess == false		ifFalse: [Processor terminateActive]! !!DebuggerWindow methodsFor: 'menu commands' stamp: 'jmv 12/15/2011 14:33'!        proceed	"Proceed execution of the receiver's model, starting after the expression at 	which an interruption occurred."	| m |	Smalltalk okayToProceedEvenIfSpaceIsLow ifTrue: [		m _ model.		"So we don't send #windowIsClosing, which acts like 'terminate'"		model _ nil. self delete.		"Resume instead"		m resumeProcess ]! !!PreDebugWindow methodsFor: 'button actions' stamp: 'jmv 12/15/2011 14:33'!        proceed	"Proceed execution of the receiver's model, starting after the expression at 	which an interruption occurred."	| m |	Smalltalk okayToProceedEvenIfSpaceIsLow ifTrue: [		m _ model.		"So we don't send #windowIsClosing, which acts like 'terminate'"		model _ nil. self delete.		"Resume instead"		m resumeProcess ]! !!methodRemoval: DebuggerWindow #update:!DebuggerWindow removeSelector: #update:!!methodRemoval: Debugger #proceed!Debugger removeSelector: #proceed!