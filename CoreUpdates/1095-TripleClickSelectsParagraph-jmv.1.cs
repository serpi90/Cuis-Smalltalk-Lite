'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 27 September 2011 at 10:56:26 am'!!BareTextMorph methodsFor: 'event handling' stamp: 'jmv 9/27/2011 10:12'!mouseDown: event	"Make this TextMorph be the keyboard input focus, if it isn't already,		and repond to the text selection gesture."	event mouseButton2Pressed ifTrue: [^ self mouseButton2Activity].	"If we don't focus, Get focus, and do nothing else (the user will need to click again to do further interaction)"	self hasKeyboardFocus ifFalse: [		^event hand newKeyboardFocus: self].	super mouseDown: event.	self handleInteraction: [editor mouseDown: event].	event hand		waitForClicksOrDragOrSimulatedMouseButton2: self		event: event		clkSel: nil		dblClkSel: #doubleClick:		tripleClkSel: #tripleClick:! !!BareTextMorph methodsFor: 'event handling' stamp: 'jmv 9/27/2011 10:14'!tripleClick: evt	self handleInteraction: [ editor tripleClick: evt ].	editView scrollSelectionIntoView: evt.! !!SimpleEditor methodsFor: 'events' stamp: 'jmv 9/27/2011 10:13'!doubleClick: evt	| here |	here _ self pointIndex.	(here between: 2 and: string size)		ifTrue: [ self selectWord ]		ifFalse: [			"if at beginning or end, select entire string"			self selectAll ].! !!TextEditor methodsFor: 'events' stamp: 'jmv 9/27/2011 10:13'!doubleClick: evt	| here |	here _ self pointIndex.	(here between: 2 and: model textSize)		ifTrue: [ self selectWord ]		ifFalse: [			"if at beginning or end, select entire string"			self selectAll ].! !!TextEditor methodsFor: 'events' stamp: 'jmv 9/27/2011 10:53'!tripleClick: evt	| here b interval |	b _ paragraph characterBlockAtPoint: evt position.	here _ b stringIndex.	(here between: 2 and: model textSize)		ifTrue: [ 			interval _ self privateCurrentString encompassParagraph: (here to: here).			self selectFrom: interval first to: interval last ]		ifFalse: [			"if at beginning or end, select entire string"			^self selectAll ]! !