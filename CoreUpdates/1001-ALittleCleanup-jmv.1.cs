'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 20 May 2011 at 5:21:43 pm'!!classDefinition: #TranscriptWindow category: #'Morphic-Tools'!SystemWindow subclass: #TranscriptWindow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Tools'!!PasteUpMorph methodsFor: 'world menu' stamp: 'jmv 5/20/2011 17:17'!findATranscript: evt	"Locate a transcript, open it, and bring it to the front.  Create one if necessary"	self		findAWindowSatisfying: [ :aWindow | aWindow model == Transcript]		orMakeOneUsing: [ TranscriptWindow openTranscript ]! !!SystemWindow methodsFor: 'open/close' stamp: 'jmv 5/20/2011 17:12'!delete	| thisWorld |	model okToChange ifFalse: [^self].	thisWorld _ self world.	super delete.	model _ nil.	SystemWindow noteTopWindowIn: thisWorld! !!DebuggerWindow methodsFor: 'open/close' stamp: 'jmv 5/20/2011 17:02'!delete	model windowIsClosing.	super delete! !!ProcessBrowserWindow methodsFor: 'open/close' stamp: 'jmv 5/20/2011 17:04'!delete	model stopCPUWatcher.	super delete! !!TheWorldMenu methodsFor: 'commands' stamp: 'jmv 5/20/2011 17:17'!openTranscript	TranscriptWindow openTranscript! !!TranscriptWindow methodsFor: 'open/close' stamp: 'jmv 5/20/2011 17:18'!delete	Transcript showOnDisplay: false.	super delete! !!TranscriptWindow class methodsFor: 'GUI building' stamp: 'jmv 5/20/2011 17:16'!openTranscript	"	TranscriptWindow openTranscript	"	| win |	win _ TranscriptWindow new.	win		setLabel: 'Transcript';		model: Transcript;		widgetsColor: Theme current transcript.	win layoutMorph addMorph: TranscriptMorph new proportionalHeight: 1.	win openInWorld! !!TranscriptWindow class reorganize!('GUI building' openTranscript)!!TranscriptWindow reorganize!('open/close' delete)!TranscriptMorph class removeSelector: #openWindow!Transcript class removeSelector: #windowIsClosing!!ProcessBrowserWindow reorganize!('initialization' initialize)('GUI building' buildMorphicWindow)('updating' setUpdateCallbackAfter:)('menu building' processListMenu stackListMenu toggleAutoUpdate)('menu commands' browseContext changePriority debugProcess exploreContext exploreProcess exploreReceiver findContext inspectContext inspectPointers inspectProcess inspectReceiver messageTally startAutoUpdate startCPUWatcher stopAutoUpdate stopCPUWatcher)('keyboard shortcuts' processListKey:from: stackListKey:from:)('stepping' stepTime)('open/close' delete)!!DebuggerWindow reorganize!('GUI building' buildLowerPanes buildMorphicWindow customButtonRow customButtonSpecs optionalButtonTuples windowColor)('updating' update:)('menu building' contextFieldListMenu contextStackMenu receiverFieldListMenu)('menu commands' contextClassHierarchy exploreContextSelection exploreReceiverSelection proceed receiverClassHierarchy returnValue)('keyboard shortcuts' browseClassRefsIn: browseFullProtocolIn: browseHierarchyIn: browseMethodFullIn: contextStackKey:from: exploreSelectionIn: inspectSelectionIn: inspectorKey:from:)('open/close' delete)!ProcessBrowser removeSelector: #windowIsClosing!!Morph reorganize!('accessing' adoptWidgetsColor: balloonText beSticky borderWidth color color: doesBevels eventHandler eventHandler: isLocked isSticky lock lock: raisedColor resistsRemoval sticky: toggleResistsRemoval toggleStickiness unlock unlockContents)('accessing - extension' assureExtension hasExtension initializeExtension privateExtension: resetExtension)('accessing - properties' hasProperty: removeProperty: setProperty:toValue: valueOfProperty: valueOfProperty:ifAbsent: valueOfProperty:ifAbsentPut: valueOfProperty:ifPresentDo:)('as yet unclassified' canDiscardEdits hasUnacceptedEdits rotationDegrees:)('caching' fullReleaseCachedState releaseCachedState)('change reporting' addedMorph: invalidRect: invalidRect:from: privateInvalidateMorph:)('classification' isPlayfieldLike isWorldMorph)('copying' copy copyForClipboard duplicate)('creation' asMorph)('debug and other' addDebuggingItemsTo:hand: altSpecialCursor0 altSpecialCursor1 altSpecialCursor2 altSpecialCursor3 altSpecialCursor3: buildDebugMenu: inspectOwnerChain ownerChain resumeAfterDrawError resumeAfterStepError)('drawing' addPossiblyUncoveredAreasIn:to: changeClipSubmorphs clipSubmorphs: clippingBounds clipsSubmorphs drawDropHighlightOn: drawErrorOn: drawMouseDownHighlightOn: drawOn: drawSubmorphsOn: drawingFails drawingFailsNot fullDrawOn: hasClipSubmorphsString hide highlightForMouseDown highlightForMouseDown: highlightedForMouseDown imageForm imageForm: imageForm:forRectangle: isKnownFailing ownShadowForm refreshWorld shadowForm show visible visible:)('dropping/grabbing' aboutToBeGrabbedBy: dragEnabled dragEnabled: dragNDropEnabled dropEnabled dropEnabled: dropHighlightColor enableDrag: enableDragNDrop enableDragNDrop: enableDrop: formerOwner formerOwner: formerPosition formerPosition: highlightForDrop highlightForDrop: highlightedForDrop justDroppedInto:event: justGrabbedFrom: rejectDropMorphEvent: repelsMorph:event: resetHighlightForDrop separateDragAndDrop slideBackToFormerSituation: vanishAfterSlidingTo:event: wantsDroppedMorph:event: wantsToBeDroppedInto:)('e-toy support' embeddedInMorphicWindowLabeled: unlockOneSubpart wantsRecolorHandle)('event handling' click click: doubleClick: doubleClickTimeout: handleMouseDown: handlesKeyboard handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: handlesMouseStillDown: keyDown: keyStroke: keyUp: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseStillDown: mouseStillDownStepRate mouseStillDownThreshold mouseUp: on:send:to: on:send:to:withValue: startDrag: windowEvent:)('events-accessing' actionMap updateableActionMap)('events-alarms' addAlarm:after: addAlarm:at: addAlarm:with:after: addAlarm:with:at: addAlarm:with:with:after: addAlarm:with:with:at: addAlarm:withArguments:after: addAlarm:withArguments:at: alarmScheduler removeAlarm:)('events-processing' containsPoint:event: defaultEventDispatcher focusKeyboardFor: handleDropMorph: handleEvent: handleFocusEvent: handleKeyDown: handleKeyUp: handleKeystroke: handleListenEvent: handleMouseEnter: handleMouseLeave: handleMouseMove: handleMouseOver: handleMouseStillDown: handleMouseUp: handleUnknownEvent: handleWindowEvent: handlerForMouseDown: mouseDownPriority processEvent: processEvent:using: rejectDropEvent: rejectsEvent:)('events-removing' releaseActionMap)('fileIn/out' prepareToBeSaved storeDataOn:)('focus handling' hasKeyboardFocus keyboardFocusChange:)('geometry' align:with: basicExtent: bounds bounds: bounds:in: displayBounds extent extent: externalizePosition:to: externalizePositionFromOwner:to: externalizeVector:to: fullDisplayBounds height height: innerBounds internalizePosition:from: internalizePositionToOwner:from: minimumExtent position position: positionInWorld width width: worldBoundsForHalo)('geometry eToy' referencePosition referencePosition:)('geometry testing' containsPoint: fullContainsPoint: isOrthoRectangularMorph)('halos and balloon help' addHalo addHalo: addHalo:from: addHandlesTo:box: addOptionalHandlesTo:box: addWorldHandlesTo:box: balloonColor balloonFont balloonHelpAligner balloonHelpDelayTime balloonHelpTextForHandle: comeToFrontAndAddHalo defaultBalloonColor defaultBalloonFont deleteBalloon editBalloonHelpContent: editBalloonHelpText halo haloClass mouseDownOnHelpHandle: noHelpString okayToBrownDragEasily okayToResizeEasily okayToRotateEasily removeHalo setBalloonText: setBalloonText:maxLineLength: showBalloon: showBalloon:hand: transferHalo:from: wantsBalloon wantsHaloFromClick wantsHaloHandleWithSelector:inHalo:)('initialization' defaultBounds inATwoWayScrollPane initialize intoWorld: openInHand openInWorld openInWorld:)('iteration of all morphs' nextMorph nextMorphPart2 previousMorph)('layout' acceptDroppingMorph:event: computeFullBounds doLayoutIfNeeded fullBounds layoutAndComputeFullBounds layoutBounds layoutChanged submorphBounds)('layout-properties' layoutSpec layoutSpec:)('macpal' flash)('menus' addAddHandMenuItemsForHalo:hand: addColorMenuItems:hand: addCopyItemsTo: addCustomHaloMenuItems:hand: addCustomMenuItems:hand: addExportMenuItems:hand: addHaloActionsTo: addStandardHaloMenuItemsTo:hand: addTitleForHaloMenu: addToggleItemsToHaloMenu: changeColor changeDragAndDrop collapse expand exportAsBMP exportAsJPEG exportAsPNG hasDragAndDropEnabledString lockUnlockMorph lockedString maybeAddCollapseItemTo: resistsRemovalString stickinessString)('meta-actions' addEmbeddingMenuItemsTo:hand: buildHandleMenu: changeColorTarget:selector:originalColor:hand: copyToClipboard: dismissMorph: duplicateMorph: grabMorph: handlerForMetaMenu: handlerForMouseButton3Down: maybeDuplicateMorph mouseButton3Down: mouseButton3Up: potentialEmbeddingTargets resizeFromMenu resizeMorph:)('naming' nameForFindWindowFeature)('object serialization' objectForDataStream:)('player' okayToDuplicate)('printing' printOn:)('property extension' extension)('rotate scale and flex' rotationDegrees)('stepping' wantsSteps)('stepping and presenter' arrangeToStartStepping arrangeToStartSteppingIn: shouldGetStepsFrom: start startStepping startStepping:at:arguments:stepTime: startSteppingSelector: step stepAt: stopStepping stopSteppingSelector:)('structure' activeHand allOwners allOwnersDo: firstOwnerSuchThat: hasOwner: isInWorld nearestOwnerThat: outermostWorldMorph owner ownerThatIsA: pasteUpMorph root veryLastLeave withAllOwnersDo: world)('submorphs-accessing' allMorphs allMorphsDo: findA: findDeepSubmorphThat:ifAbsent: findSubmorphBinary: firstSubmorph hasSubmorphs lastSubmorph morphsAt: morphsAt:behind:unlocked: morphsAt:unlocked: morphsAt:unlocked:do: noteNewOwner: submorphBehind: submorphCount submorphInFrontOf: submorphThat:ifNone: submorphs submorphsBehind:do: submorphsDo: submorphsInFrontOf:do: submorphsReverseDo: submorphsSatisfying:)('submorphs-add/remove' addAllMorphs: addAllMorphs:after: addMorph: addMorph:behind: addMorph:inFrontOf: addMorphBack: addMorphFront: addMorphFront:fromWorldPosition: addMorphFrontFromWorldPosition: comeToFront delete dismissViaHalo goBehind privateDelete removeAllMorphs removeAllMorphsIn: removeMorph: removedMorph: replaceSubmorph:by:)('submorphs-add/remove-layers' addMorphInFrontOfLayer: addMorphInLayer: morphicLayerNumber morphicLayerNumberWithin:)('testing' hasModel is: isOpaqueMorph isReallyVisible shouldDropOnMouseUp stepTime)('updating' redrawNeeded update:)('user interface' activateWindow activateWindowAndSendTopToBack: defaultLabelForInspector)('visual properties' defaultColor)('private' privateAddAllMorphs:atIndex: privateAddMorph:atIndex: privateBounds: privateColor: privateFullMoveBy: privateMoveBy: privateOwner: privateRemove:)!Debugger removeSelector: #release!ContextPart removeSelector: #release!Object removeSelector: #windowIsClosing!