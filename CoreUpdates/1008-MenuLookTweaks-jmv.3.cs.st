'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 27 May 2011 at 11:55:36 pm'!!MenuItemMorph methodsFor: 'drawing' stamp: 'jmv 5/26/2011 09:06'!drawOn: aCanvas 	| stringColor stringBounds leftEdge |	stringColor _ color.	isSelected & isEnabled		ifTrue: [			aCanvas fillRectangle: bounds colorOrInfiniteForm: Theme current menuHighlight].	leftEdge := 0.	self hasIcon		ifTrue: [| iconForm | 			iconForm _ isEnabled ifTrue: [ self icon ] ifFalse: [ self icon asGrayScale ].			aCanvas image: iconForm at: bounds left+1 @ (bounds top + (bounds height - iconForm height // 2)).			leftEdge _ iconForm width + self iconSeparation].	self hasMarker ifTrue: [		leftEdge _ leftEdge + self submorphBounds width + 8 ].	stringBounds _ bounds left + leftEdge @ (bounds top + 1) corner: bounds corner.	aCanvas		drawString: contents		in: stringBounds		font: self fontToUse		color: stringColor.	subMenu		ifNotNil: [ aCanvas image: SubMenuMarker at: bounds right - 8 @ (bounds top + bounds bottom - SubMenuMarker height // 2) ]! !!MenuItemMorph methodsFor: 'layout' stamp: 'jmv 5/26/2011 09:06'!iconSeparation	^5! !!MenuItemMorph methodsFor: 'layout' stamp: 'jmv 5/26/2011 09:08'!measureContents	| e |	e _ super measureContents.	^e y > 12		ifTrue: [e+(2@2)]		ifFalse: [e+(2@1)]! !!MenuItemMorph methodsFor: 'layout' stamp: 'jmv 5/26/2011 09:05'!minItemWidth	| fontToUse iconWidth subMenuWidth markerWidth |	fontToUse _ self fontToUse.	subMenuWidth _ self hasSubMenu				ifFalse: [0]				ifTrue: [10].	iconWidth _ self hasIcon				ifTrue: [self icon width + self iconSeparation]				ifFalse: [0].	markerWidth _ self hasMarker		ifTrue: [ self submorphBounds width + 8 ]		ifFalse: [ 0 ].	^ (fontToUse widthOfString: contents)		+ subMenuWidth + iconWidth + markerWidth.! !!MenuMorph methodsFor: 'construction' stamp: 'jmv 5/27/2011 14:15'!addStayUpIcons	| closeBox pinBox w |		(self valueOfProperty: #hasStayUpIcons ifAbsent: [ false ])		ifTrue: [		 	self removeProperty: #needsStayUpIcons.			^self ].	titleMorph ifNil: [		"Title not yet there. Flag ourself, so this method is called again when adding title."		self setProperty: #needsStayUpIcons toValue: true.		^ self].	closeBox _ PluggableButtonMorph model: self action: #delete.	closeBox icon: Theme current closeIcon.	pinBox _ PluggableButtonMorph model: self action: #stayUp.	pinBox icon: Theme current pushPinIcon.	w _ (titleMorph hasSubmorphs ifTrue: [ titleMorph firstSubmorph width ] ifFalse: [ 0 ]) + 42.	self addMorphFront: 		(LayoutMorph newRow			height: (titleMorph height max: 19);			width: w;	"Make room for buttons"			color: Color transparent;			addMorph: closeBox fixedWidth: 20;			addMorph: (RectangleMorph new borderWidth: 0; color: Color transparent) fixedWidth: 4;			addMorph: titleMorph proportionalWidth: 1;			addMorph: (RectangleMorph new borderWidth: 0; color: Color transparent) fixedWidth: 4;			addMorph: pinBox fixedWidth: 20).	self setProperty: #hasStayUpIcons toValue: true.	self removeProperty: #needsStayUpIcons! !!MenuMorph methodsFor: 'construction' stamp: 'jmv 5/26/2011 09:16'!addTitle: aString	"Add a title line at the top of this menu Make aString its initial 	contents.  	If aSelector is not nil, then periodically obtain fresh values for its 	contents by sending aSelector to aTarget.."	| s p w |		titleMorph _ RectangleMorph new.	self setTitleParametersFor: titleMorph.	p _ titleMorph position + (8@2).	(aString asString findTokens: String cr) do: [ :line | 		s _ StringMorph new			contents: line;			font: Preferences standardMenuFont bold.		s position: p.		titleMorph addMorphBack: s.		p _ p + (0@s height+2) ].	w _ titleMorph submorphs inject: 0 into: [ :prev :each |		prev max: each width ].	titleMorph height: p y; width: w + 8.	self addMorphFront: titleMorph.		(self hasProperty: #needsStayUpIcons) ifTrue: [ self addStayUpIcons ]! !!MenuMorph methodsFor: 'initialization' stamp: 'jmv 5/26/2011 09:12'!setTitleParametersFor: aMenuTitle 	aMenuTitle		setColor: Theme current menuTitleBar		borderWidth: Preferences menuTitleBorderWidth*0		borderColor: #inset! !!MenuMorph methodsFor: 'private' stamp: 'jmv 5/26/2011 09:10'!adjustSubmorphsLayout	"Enlarge the width of submorphs as needed	so all of them are have the same width, and no less than #minWidth.	Also adjust their vertical position.	Finally, set our own extent."		| w p tl |		submorphs isEmpty ifTrue: [ ^self ].	w _ submorphs inject: 0 into: [ :prev :each |		prev max: (			(each respondsTo: #minItemWidth)				ifTrue: [each minItemWidth]				ifFalse: [each width])].	w _ w + 4.	tl _ bounds topLeft.	p _ tl + 5.	submorphs do: [ :m |		m width: w.		m position: p.		p _ m bounds bottomLeft +(0@1) ].		self extent: submorphs last bounds bottomRight - tl + 5! !!Theme methodsFor: 'menu colors' stamp: 'jmv 5/26/2011 09:07'!menu	Display depth <= 2 ifTrue: [^ Color white].	^Color r: 0.75 g: 0.75 b: 0.75 alpha: 0.93! !!TranscriptMorph methodsFor: 'menus' stamp: 'jmv 5/27/2011 10:16'!getMenu	"Set up the menu to apply to the receiver"	| aMenu |	aMenu _ MenuMorph new defaultTarget: self.	aMenu addList: #(		('Edit Contents'					editContents)		-		('Clear Transcript'				clearInternal)		('Clear Transcript File'			clearFile)		('Clear Both'					clearAll)		-).	Transcript logsToFile		ifTrue: [ aMenu addList: #(('Stop logging to File'		dontLogToFile)) ]		ifFalse: [ aMenu addList: #(('Start logging to File'	logToFile)) ].	^ aMenu! !