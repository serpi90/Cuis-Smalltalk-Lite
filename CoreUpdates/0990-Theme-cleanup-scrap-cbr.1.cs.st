'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 18 May 2011 at 10:05:52 pm'!!classDefinition: #Theme category: #'Theme-Core'!Object subclass: #Theme	instanceVariableNames: 'menuItemIcons'	classVariableNames: 'Content CurrentTheme Decorations'	poolDictionaries: ''	category: 'Theme-Core'!!HaloMorph class methodsFor: 'class initialization' stamp: 'cbr 5/16/2011 14:31'!initialize	"HaloMorph initialize"		Preferences preferenceAt: #haloEnclosesFullBounds ifAbsent: [		Preferences addPreference: #haloEnclosesFullBounds			category: #halos			default: false			balloonHelp: 'if true, halos will enclose the full bounds of the target Morph, rather than just the bounds'	].  	HandleSize _ 16.	Icons _ Dictionary new.	Preferences resetHaloSpecifications! !!HaloMorph class methodsFor: 'accessing - icons' stamp: 'cbr 5/16/2011 14:30'!haloCollapseIcon	^ Theme current haloCollapseIcon! !!MenuMorph methodsFor: 'construction' stamp: 'cbr 5/16/2011 07:49'!addStayUpIcons	| closeBox pinBox w |		(self valueOfProperty: #hasStayUpIcons ifAbsent: [ false ])		ifTrue: [		 	self removeProperty: #needsStayUpIcons.			^self ].	titleMorph ifNil: [		"Title not yet there. Flag ourself, so this method is called again when adding title."		self setProperty: #needsStayUpIcons toValue: true.		^ self].	closeBox _ PluggableButtonMorph model: self action: #delete.	closeBox icon: Theme current closeIcon.	pinBox _ PluggableButtonMorph model: self action: #stayUp.	pinBox icon: Theme current pushPinIcon.	w _ (titleMorph hasSubmorphs ifTrue: [ titleMorph firstSubmorph width ] ifFalse: [ 0 ]) + 42.	self addMorphFront: 		(LayoutMorph newRow			height: (titleMorph height max: 19);			width: w;	"Make room for buttons"			color: Color transparent;			addMorph: closeBox fixedWidth: 20;			addMorph: titleMorph proportionalWidth: 1;			addMorph: pinBox fixedWidth: 20).	self setProperty: #hasStayUpIcons toValue: true.	self removeProperty: #needsStayUpIcons! !!Preferences class methodsFor: 'halos' stamp: 'cbr 5/16/2011 14:31'!haloSpecifications	"Answer a list of HaloSpecs that describe which halos are to be used, what they should look like, and where they should be situated"	^ Parameters at: #HaloSpecs ifAbsent: [			self installHaloTheme: #iconicHaloSpecifications.			^ Parameters at: #HaloSpecs]	"Preferences haloSpecifications"	"Preferences resetHaloSpecifications"! !!Theme methodsFor: 'menus' stamp: 'cbr 5/16/2011 04:47'!allIcons	^ self basicIcons union: self miscellaneousIcons! !!Theme methodsFor: 'menus' stamp: 'cbr 5/16/2011 17:11'!basicIcons"Minimal menu scheme."	^ { 		#('open...') -> #openIcon.		#('windows...' 'find window') -> #windowIcon.		#('help...' 'explain' 'about this system...') -> #helpIcon.		#('appearance...' 'themes...') -> #appearanceIcon.		#('do...' 'Cursor normal show.' 'do it (d)') -> #doItIcon.		#('new morph...' 'objects (o)' 'save world as morph file') -> #morphsIcon.		#('save' 'save project on file...' ) -> #saveIcon.		#('save as...' 'change category...' 'rename change set (r)' 'rename') -> #saveAsIcon.		#('save as new version') -> #saveAsNewVersionIcon.		#('quit') -> #quitIcon.		#('save and quit' ) -> #saveAndQuitIcon.		#('inspect it (i)' 'inspect world'  'inspect model' 'inspect morph'		 'inspect owner chain' 'inspect' 'inspect (i)' 'basic inspect' 'message names' 'find message names' 'inspect instances' 'inspect subinstances' 'inspect change set' 'inspect context (c)' 'inspect receiver (i)' 'start CPUWatcher')			-> #inspectIcon.		#('explore' 'explore it (I)' 'explore world' 'explore morph' 'explore (I)' 'explore context (C)' 'explore receiver (I)') -> #exploreIcon.		#('find...(f)' 'find class... (f)' 'find method...' 'find recent submissions' 'show hierarchy' 'show definition' 'show comment' 'filter' 'filter message list...' 'find context... (f)') -> #findIcon.		#('add item...' 'new category...' 'create new change set...' 'new change set... (n)' 'add new file') -> #newIcon.		#('remove method (x)' 'remove' 'remove class (x)' 'remove method from system (x)' 'remove class from system (x)' 'remove postscript') -> #deleteIcon.		#('delete method from changeset (d)' 'delete class from change set (d)' 'destroy change set (X)' 'revert & remove from changes' 'delete unchanged windows' 'delete non-windows' 'delete both of the above' 'reset variables' 'remove contained in class categories...' 'clear this change set' 'uninstall this change set' 'delete directory...' 'delete') -> #warningIcon.		#('do again (j)' ) -> #redoIcon.		#('undo (z)' 'revert to previous version') -> #undoIcon.		#('copy (c)' 'copy class...' 'copy class chgs to other side' 'copy method to other side' 'copy all to other side (c)' 'copy name to clipboard' 'copy selector to clipboard') -> #copyIcon.		#('paste (v)') -> #pasteIcon.		#('cut (x)' 'move class chgs to other side' 'move method to other side' 'submerge into other side') -> #cutIcon.		#('paste...' 'icons...') -> #worldIcon.}! !!Theme methodsFor: 'menus' stamp: 'cbr 5/16/2011 05:04'!menuDecorations	"build a dictionary wordings -> icon to decorate the menus all over the image"	^ self perform: (		Preferences 			preferenceAt: #menuIcons 			ifAbsent: [ 				Preferences					setPreference: #menuIcons 					toValue: #basicIcons.									#basicIcons 			]	) preferenceValue.! !!Theme methodsFor: 'menus' stamp: 'cbr 5/16/2011 04:57'!miscellaneousIcons	"Everything else."	^ {		#('restore display (r)' 'set display depth...' 'move windows onscreen' 'Utilities saveDisplay.') -> #displayIcon.		#('changes...' 'dual change sorter' 'change sets with this method' 'find a change sorter' 'recent changes in file') -> #changesIcon.		#('print PS to file...' ) -> #printIcon.		#('find again (g)' 'full stack (k)') -> #systemIcon.		#('print it (p)' 'check change set for slips') -> #printIcon.		#('accept (s)' 'make changes go to me (m)') -> #acceptIcon.		#('cancel (l)' ) -> #cancelIcon.		#('debug...' 'debug it' 'toggle break on entry') -> #debugIcon.		#('close' 'close all debuggers' 'close top window') -> #closeIcon.		#('collapse' 'hide taskbar' 'collapse all windows') -> #collapseIcon.		#('expand / contract' 'show taskbar' 'expand all windows') -> #expandIcon.		#('menu') -> #windowMenuIcon.		#('browse all' 'browser' 'browse it (b)' 'MessageTally UI and browse' 'browse recent submissions' 'browse full (b)' 'find changed browsers...' 'browse (b)') -> #editFindReplaceIcon.		#('workspace' 'workspace with contents') -> #terminalIcon.		#('text editor' 'edit this list' 'edit postscript...' 'add postscript...') -> #textEditorIcon.		#('file list' 'find a fileList') -> #systemFileManagerIcon.		#('transcript' 'find a transcript' 'Transcript clear.' 'log to transcript') -> #printerIcon.		#('process browser' 'vm statistics' 'MessageTally all Processes') -> #systemMonitorIcon.		#('emergency evaluator' 'conflicts with other change sets' 'check for slips' 'conflicts with change set opposite' 'conflicts with category opposite') -> #emblemImportantIcon.		#('simple change sorter') -> #halfRefreshIcon.		#('SUnit Test Runner') -> #weatherFewCloudsIcon.		#('system fonts...' 'set font... (k)') -> #preferencesDesktopFontIcon.		#('full screen on') -> #viewFullscreenIcon.		#('full screen off') -> #exitFullscreenIcon.		#('set desktop color...') -> #wallpaperIcon.		#('preferences...' 'what to show...') -> #preferencesIcon.		#('command-key help') -> #keyboardShortcutsIcon.		#('world menu help') -> #globeIcon.		#('useful expressions' 'class comments with it' 'check for uncommented methods' 'check for uncommented classes') -> #chatIcon.		#('set author initials...' 'check for other authors' 'check for any other authors') -> #usersIcon.		#('space left') -> #removableMediaIcon.		#('start drawing all again' 'window color...') -> #graphicsIcon.		#('start stepping again') -> #mediaPlaybackStartIcon.		#('file out current change set' 'fileOut' 'file out (o)') -> #fileOutIcon.		#('recently logged changes...' 'versions (v)' 'recent classes... (r)' 'trim history' 'profile messages (m)') -> #clockIcon.		#('senders of it (n)' 'senders of... (n)' 'local senders of...' 'senders (n)') -> #mailForwardIcon.		#('implementors of it (m)' 'implementors of... (m)' 'implementors of sent messages') -> #developmentIcon.		#('references to it (N)') -> #addressBookIcon.		#('class var refs...' 'class refs (N)' 'class variables' 'class vars' 'local implementors of...' 'subclass template') -> #classIcon.		#('inst var refs...' 'inst var defs...' 'sample instance' 'inspect Pointers (P)') -> #instanceIcon.		#('set search string (h)' 'rename class ...' 'rename...' 'change title...') -> #saveAsIcon.		#('method source with it' 'browse method (O)' 'check for uncategorized methods') -> #scriptIcon.		#('method strings with it (E)') -> #genericTextIcon.		#('browse hierarchy (h)' 'move to top' 'promote to top of list') -> #goTopIcon.		#('move up' 'make next-to-topmost') -> #goUpIcon.		#('move to bottom' 'send to back' 'send top window to back') -> #goBottomIcon.		#('inheritance (i)' 'move down') -> #goDownIcon.		#('browse protocol (p)' 'spawn sub-protocol') -> #spreadsheetIcon.		#('spawn full protocol') -> #speadsheetTemplateIcon.		#('alphabetize') -> #fontXGenericIcon.		#('browse' 'show category (C)' 'categorize all uncategorized' 'select change set...' 'view affected class categories') -> #packageIcon.		#('remove from current change set' 'remove empty categories' 'subtract other side (-)' 'remove from this browser') -> #listRemoveIcon.		#('add to current change set' 'add all meths to current chgs' 'add preamble (p)') -> #listAddIcon.		#('toggle diffing (D)' 'toggle selections') -> #switchIcon.		#('reorganize' 'create inst var accessors' 'ChangeSorter reorderChangeSets.' 'reorder all change sets' 'by name' 'by size' 'by date') -> #sendReceiveIcon.		#('unsent methods' 'unreferenced class vars' 'unreferenced inst vars' 'Undeclared inspect.' 'Undeclared removeUnreferencedKeys; inspect.' 'ChangeSorter removeEmptyUnnamedChangeSets.' 'check for unsent messages') -> #junkIcon.		#('update' 'turn on auto-update (a)' 'update list (u)') -> #updateIcon.		#('find changed windows...') -> #newWindowIcon.		#('make undraggable') -> #pushPinIcon.		#('Utilities saveScreenshot.') -> #stillCameraIcon.		#('add new directory') -> #newFolderIcon.		#('select all' 'deselect all') -> #selectAllIcon.		#('sort by date') -> #dateIcon.		#('set alignment...' 'justified') -> #formatJustifyFillIcon.		#('centered') -> #formatJustifyCenterIcon.		#('leftFlush') -> #formatJustifyLeftIcon.		#('rightFlush') -> #formatJustifyRightIcon.		#('signal Semaphore (S)') -> #haloHelpIcon.	}! !!Theme methodsFor: 'menus' stamp: 'cbr 5/16/2011 04:51'!noIcons	^ #()! !!Theme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:10'!acceptIcon			"	#( 'resolution' 'context' 'filename' )	"	^ self fetch: #( '16x16' 'smalltalk' 'accept' )! !!Theme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:10'!addressBookIcon	^ self fetch: #( '16x16' 'mimetypes' 'x-office-address-book' )! !!Theme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:10'!appearanceIcon	^ self fetch: #( '16x16' 'apps' 'preferences-desktop-theme' )! !!Theme methodsFor: 'initialize-release' stamp: 'cbr 5/16/2011 13:31'!initialize	| menuDecorations |	"build a dictionary wordings -> icon to decorate the menus all over the image"		super initialize.	self flag: #todo. "Consider moving menuItemIcons over to the class side,  and removing this method. --cbr"	menuItemIcons _ Dictionary new.	menuDecorations _ self menuDecorations as: Dictionary.	menuDecorations keysDo: [ :key |		key do: [ :str |			| form symbol |				symbol _  menuDecorations at: key.				form _ self perform: symbol.			menuItemIcons				at: str asLowercase 				put: form		]	]! !!Theme methodsFor: 'icon lookup' stamp: 'cbr 5/16/2011 07:52'!appendExtensionToContentSpec: anArray	^ ((anArray asOrderedCollection 			copyReplaceFrom: 3 			to: 3 			with: 				{ (anArray at: 3) , '.png' } ))! !!Theme methodsFor: 'icon lookup' stamp: 'cbr 5/16/2011 08:05'!fetch: aTuple "	#( 'resolution' 'context' 'filename' )	"	"Get an icon from Content. See icons protocol."	| contentSpecifier icon themeGuess |		icon _ nil.	themeGuess _ self class.	contentSpecifier _ self appendExtensionToContentSpec: aTuple.	[ icon isNil ] 		whileTrue: [			icon _ self class content 				get: (self prepend: themeGuess toContentSpec: contentSpecifier).				icon ifNotNil: [ ^ icon ].				themeGuess = Theme				ifTrue: [ ^ nil "See comment in ContentPack>>get: --cbr" ].				themeGuess _ themeGuess superclass		]! !!Theme methodsFor: 'icon lookup' stamp: 'cbr 5/16/2011 08:07'!prepend: aTheme toContentSpec: anArray	^ anArray copyWithFirst: aTheme asString! !!Theme methodsFor: 'accessing' stamp: 'cbr 5/16/2011 07:58'!decorateMenu: aMenu	"decorate aMenu with icons"	| numberAdded |		self flag: #todo. "Do I really belong on Theme, and not some menu class somewhere?"	self flag: #todo. "Remove reference to preferences. Remove the preference #menuWithIcons. This is already replaced by the new preference, #menuIcons. --cbr"	Preferences menuWithIcons		ifFalse: [ ^ self class ].	numberAdded _ 0.	aMenu items do: [ :item | 		| decoration | decoration _ menuItemIcons 				at: item contents asString asLowercase 				ifAbsent: nil.		decoration ifNotNil: [			item icon: decoration.			numberAdded _ numberAdded + 1. ]].	numberAdded isZero ifTrue: [^ self].		aMenu addBlankIconsIfNecessary: self blankIcon! !!Theme methodsFor: 'shout' stamp: 'cbr 5/16/2011 02:48'!shout	"Color symbols as an association list."		^ {		#defaults 				-> #black.		#undefined 				-> #red.		#methodTags 			-> #(green muchDarker).		#pseudoVariables 		-> #(red muchDarker).		#messages 				-> #(blue muchDarker).		#instVar 					-> #(magenta muchDarker).		#incompleteMessages -> #(gray veryMuchDarker).		#blockLevelFour 		-> #(green darker).		#blockLevelFive 		-> #(orange darker).		#blockLevelSix 			-> #(magenta darker).		#blockLevelSeven 		-> #blue.		#tempBar 				-> #gray.		#tempVars 				-> #(gray muchDarker).	}! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:12'!acceptIcon	^ self fetch: #( '16x16' 'smalltalk' 'accept' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:13'!appearanceIcon	^ self fetch: #( '16x16' 'apps' 'preferences-desktop-theme' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:13'!cancelIcon	^ self fetch: #( '16x16' 'smalltalk' 'cancel' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:14'!closeIcon	^ self fetch: #( '10x10' 'buttons' 'close' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:15'!collapseIcon	^ self fetch: #( '10x10' 'buttons' 'collapse' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:16'!copyIcon	^ self fetch: #( '16x16' 'actions' 'edit-copy' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:17'!cutIcon	^ self fetch: #( '16x16' 'actions' 'edit-cut' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:20'!doItIcon	^ self fetch: #( '16x16' 'smalltalk' 'do-it' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:28'!expandIcon	^ self fetch: #( '10x10' 'buttons' 'expand' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:28'!findIcon	^ self fetch: #( '16x16' 'actions' 'edit-find' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:36'!helpIcon	^ self fetch: #( '16x16' 'apps' 'help-browser' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:39'!morphsIcon	^ self fetch: #( '16x16' 'smalltalk' 'morphs' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:40'!newIcon	^ self fetch: #( '16x16' 'actions' 'document-new' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:40'!openIcon	^ self fetch: #( '16x16' 'actions' 'document-open' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:41'!pasteIcon	^ self fetch: #( '16x16' 'actions' 'edit-paste' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:42'!printIcon	^ self fetch: #( '16x16' 'actions' 'document-print-preview' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:44'!quitIcon	^ self fetch: #( '16x16' 'actions' 'system-log-out' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:46'!redoIcon	^ self fetch: #( '16x16' 'actions' 'edit-redo' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:47'!saveAsIcon	^ self fetch: #( '16x16' 'actions' 'document-save-as' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:48'!saveIcon	^ self fetch: #( '16x16' 'actions' 'document-save' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:49'!undoIcon	^ self fetch: #( '16x16' 'actions' 'edit-undo' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:49'!windowIcon	^ self fetch: #( '16x16' 'apps' 'preferences-system-windows' )! !!ClassicTheme methodsFor: 'icons' stamp: 'cbr 5/16/2011 01:50'!windowMenuIcon	^ self fetch: #( '10x10' 'buttons' 'window-menu' )! !!Theme class methodsFor: 'importing/exporting' stamp: 'cbr 5/16/2011 02:22'!bootstrap	"Destructive. Loads up initial content."	self flag: #todo. "Consider removal. --cbr"		Content _ ContentPack default! !Theme class removeSelector: #baseDirectoryFor:!Theme class removeSelector: #bootstrapX!Theme class removeSelector: #decorations!Theme class removeSelector: #decorations:!Theme class removeSelector: #decorationsCollect:for:!Theme class removeSelector: #exportIcon:asPNGNamed:!Theme class removeSelector: #filesOfResolution:decor:in:!Theme class removeSelector: #import:atResolution:fromDecor:theme:!Theme class removeSelector: #importPNGFromFilenamed:!Theme class removeSelector: #load:!Theme class removeSelector: #mapDecorationContextsTo:!Theme class removeSelector: #repositoryName!Theme class removeSelector: #scanBaseDirectoryFor:!Theme class removeSelector: #splitPathsFor:!Theme removeSelector: #asset:atResolution:inContext:!Theme removeSelector: #asset:atResolution:inContextX:!Theme removeSelector: #baseDirectoryFor:!Theme removeSelector: #closeMenuIcon!Theme removeSelector: #fetchX:!Theme removeSelector: #haloPaintIcon!Theme removeSelector: #mediaFlashIcon!Theme removeSelector: #menuDecorationsX!Theme removeSelector: #textBox!!Theme reorganize!('colors' background buttonColorFrom: buttonLabel focusIndicator insertionPoint line morph paneBackgroundFrom: text textHighlight textHighlightFocused: unfocusedTextHighlightFrom: windowLabel)('menu colors' menu menuHighlight menuText menuTitleBar)('tool colors' browser changeList changeSorter debugger defaultWindowColor dualChangeSorter fileContentsBrowser fileList messageNames messageSet object testRunner textEditor transcript versionsBrowser workspace)('widget colors' acceptButton cancelButton listHighlightFocused: listMultiHighlightFocused: listSelectedRowText listUnselectedRowText)('other options' buttonGradientBottomFactor buttonGradientHeight buttonGradientTopFactor embossedTitles roundButtons roundWindowCorners roundedButtonRadius roundedWindowRadius squareWindowLabelButtons titleGradientBottomFactor titleGradientExtraLightness titleGradientTopFactor useButtonGradient useUniformColors useWindowTitleGradient)('private - shout mappings' argumentTypes blockLevelFive blockLevelFour blockLevelSeven blockLevelSix blockTemps defaults firstBlockLevel generateShoutConfig globals incompleteMessages instVar literals messages methodTags nilly pseudoVariables symbols tempBar tempVars undefined)('menus' allIcons basicIcons menuDecorations miscellaneousIcons noIcons)('icons' acceptIcon addressBookIcon appearanceIcon blankIcon cancelIcon changesIcon chatIcon classIcon clockIcon closeIcon collapseIcon copyIcon cutIcon dateIcon debugIcon deleteIcon developmentIcon displayIcon doItIcon editFindReplaceIcon emblemImportantIcon exitFullscreenIcon expandIcon exploreIcon fileOutIcon findIcon fontXGenericIcon formatJustifyCenterIcon formatJustifyFillIcon formatJustifyLeftIcon formatJustifyRightIcon genericTextIcon globeIcon goBottomIcon goDownIcon goTopIcon goUpIcon graphicsIcon halfRefreshIcon haloCollapseIcon haloColorIcon haloDebugIcon haloDismissIcon haloDragIcon haloDuplicateIcon haloFontEmphasisIcon haloFontSizeIcon haloGrabIcon haloHelpIcon haloMenuIcon haloRotateIcon haloScaleIcon helpIcon inspectIcon instanceIcon junkIcon keyboardShortcutsIcon listAddIcon listRemoveIcon mailForwardIcon mailMarkJunkIcon mediaPlaybackStartIcon morphsIcon newFolderIcon newIcon newWindowIcon openIcon packageIcon pasteIcon preferencesDesktopFontIcon preferencesIcon printIcon printerIcon pushPinIcon quitIcon redoIcon removableMediaIcon saveAndQuitIcon saveAsIcon saveAsNewVersionIcon saveIcon scriptIcon selectAllIcon sendReceiveIcon speadsheetTemplateIcon spreadsheetIcon stillCameraIcon switchIcon systemFileManagerIcon systemIcon systemMonitorIcon terminalIcon textEditorIcon undoIcon updateIcon usersIcon viewFullscreenIcon wallpaperIcon warningIcon weatherFewCloudsIcon windowIcon windowMenuIcon worldIcon)('initialize-release' initialize)('icon lookup' appendExtensionToContentSpec: fetch: prepend:toContentSpec:)('accessing' decorateMenu:)('shout' shout)!HaloMorph initialize!