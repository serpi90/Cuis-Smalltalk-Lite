'From Cuis 3.0 of 31 January 2011 [latest update: #790] on 25 February 2011 at 4:00:42 pm'!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes widgetsColor layoutMorph bottomLeftAdjuster leftAdjuster bottomRightAdjuster topRightAdjuster topLeftAdjuster topAdjuster bottomAdjuster rightAdjuster '	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTR TitleGradient TopWindow '	poolDictionaries: ''	category: 'Morphic-Windows'!!classDefinition: #WindowEdgeAdjustingMorph category: #'Morphic-Layouts'!LayoutAdjustingMorph subclass: #WindowEdgeAdjustingMorph	instanceVariableNames: 'selector coordinateGetter cursorGetter'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Layouts'!!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:19'!bottom: aNumber	self bounds: (bounds bottom: aNumber)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:27'!bottomLeft: aPoint	self bounds: (aPoint x @ bounds top corner: bounds right @ aPoint y)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:25'!bottomRight: aPoint	self bounds: (bounds origin corner: aPoint)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:22'!left: aNumber	self bounds: (bounds left: aNumber)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:20'!moveRight: aNumber	self position: ((aNumber - bounds width) @ bounds top)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:21'!right: aNumber	self bounds: (bounds right: aNumber)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:22'!top: aNumber	self bounds: (bounds top: aNumber)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:23'!topLeft: aPoint	self bounds: (aPoint corner: bounds corner)! !!Morph methodsFor: 'geometry' stamp: 'jmv 2/25/2011 14:24'!topRight: aPoint	self bounds: (bounds left @ aPoint y corner: aPoint x @ bounds bottom)! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 13:06'!createQueryTextMorph: queryString 	"create the queryTextMorph"	| result |	result := StringMorph new contents: queryString.	result lock.	result bounds: ( 15@4 corner: 269@18).	self addMorph: result.	^ result! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 13:07'!createTextPaneExtent: answerExtent acceptBoolean: acceptBoolean	"create the textPane"	| result |	result := TextModelMorph				textProvider: self				textGetter: #response				textSetter: #response:				selectionGetter: #selectionInterval.	result extent: answerExtent.	result borderWidth: 1; borderColor: Color lightGray.	result hasUnacceptedEdits: true.	result acceptOnCR: acceptBoolean.	result bounds: (4@25 corner: 267@84).	self addMorph: result.	^ result! !!LayoutAdjustingMorph methodsFor: 'event handling' stamp: 'jmv 2/25/2011 14:37'!mouseEnter: anEvent	super mouseEnter: anEvent.	self cursor show.	hand _ anEvent hand.	self startStepping! !!LayoutAdjustingMorph methodsFor: 'accessing' stamp: 'jmv 2/25/2011 14:37'!cursor	^owner direction == #horizontal		ifTrue: [ Cursor resizeLeft ]		ifFalse: [ Cursor resizeTop ].! !!LayoutAdjustingMorph methodsFor: 'stepping' stamp: 'jmv 2/25/2011 13:29'!step	"got the #mouseLeave: message"	hand ifNil: [		Cursor normal show.		^self stopStepping ].	"hasn't got the #mouseLeave: message (yet)"	hand lastEvent mouseButton1Pressed		ifTrue: [			self adjustOwnerAt: hand cursorPoint ]		ifFalse: [			"If the button was unpressed outside the morph (can happen if you try to go outside container),			we might not get the #mouseLeav: message"			(self containsPoint: hand position) ifFalse: [				Cursor normal show.				self stopStepping ]]! !!LayoutAdjustingMorph methodsFor: 'adjusting' stamp: 'jmv 2/25/2011 13:12'!adjustOwnerAt: aPoint	owner		adjustBy: self		at: aPoint! !!LayoutMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 15:43'!defaultColor	^Color transparent! !!MenuMorph methodsFor: 'private' stamp: 'jmv 2/25/2011 14:21'!positionAt: aPoint relativeTo: aMenuItem inWorld: aWorld	"Note: items may not be laid out yet (I found them all to be at 0@0),  	so we have to add up heights of items above the selected item."	| i yOffset sub delta |	self adjustSubmorphsLayout.	i _ 0.	yOffset _ 0.	[(sub _ self submorphs at: (i _ i + 1)) == aMenuItem]		whileFalse: [yOffset _ yOffset + sub height].	self position: aPoint - (2 @ (yOffset + 8)).	"If it doesn't fit, show it to the left, not to the right of the hand."	self right > aWorld world bounds right		ifTrue:			[self moveRight: aPoint x + 1].	"Make sure that the menu fits in the world."	delta _ bounds amountToTranslateWithin:		(aWorld world bounds withHeight: ((aWorld world bounds height - 18) max: (ActiveHand position y) + 1)).	delta = (0 @ 0) ifFalse: [self position: self position + delta]! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 2/25/2011 15:24'!drawOn: aCanvas	| titleColor roundCorners titleGradient |	titleColor _ self widgetsColor.	self isTopWindow		ifTrue: [ titleColor _ titleColor lighter ].	roundCorners _ Theme current roundWindowCorners.	titleGradient _ Theme current useWindowTitleGradient.	roundCorners | titleGradient		ifTrue: [			"Title area is not inside window borders"			self drawWindowBodyOn: aCanvas roundCorners: roundCorners widgetsColor: titleColor.			self drawWindowTitleAreaOn: aCanvas roundCorners: roundCorners titleColor: titleColor useTitleGradient: titleGradient ]		ifFalse: [			"Window border encompasses title area. No round corners. No title gradient."			self drawClassicFrameOn: aCanvas titleColor: titleColor ].	self drawLabelOn: aCanvas! !!SystemWindow methodsFor: 'drawing' stamp: 'jmv 2/25/2011 15:19'!possiblyUncoveredAreasIn: aRectangle	"Answer an array of rectangles encompassing those areas in aRectangle not completely	covered by self. These are the areas that might require further drawing (of morphs below us)	All areas that might possibly be uncovered must be included."	 | candidate r |	self fillStyle mightBeTranslucent ifTrue: [		^ Array with: aRectangle ].	"Solid rectangle.	This will be the fastest in many cases. So, please disable rounded corners if on slow hardware!!"	Theme current roundWindowCorners ifFalse: [		^aRectangle areasOutside: bounds ].	"The solid rectangle does not include the corners.	Report a couple of rows (top and bottom) or columnas (left and right).	We could also try to be more careful and consider each rounded corner.	But it is of no use currently, the answer is only used if it encompasses a single rectangle (see senders).	So, instead, try to answer a single rectangle if possible"	"Try first 2 rows"	r _ Theme current roundedWindowRadius.	candidate _ aRectangle areasOutside: 		(bounds insetBy: 0@r).	candidate size = 1 ifTrue: [ ^ candidate ].	"2 rows failed to find a single rectangle. Try with 2 columns"	^aRectangle areasOutside: 		(bounds insetBy: r@0)! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 2/25/2011 15:59'!initialize	"Initialize a system window. Add label, stripes, etc., if desired"	| |	super initialize.	labelString ifNil: [ labelString := 'Untitled Window'].	isCollapsed := false.	paneMorphs := Array new.	borderColor := #raised.	borderWidth := 3.		self wantsLabel ifTrue: [self initializeLabelArea].	self extent: 300 @ 200.	updatablePanes := Array new.	topAdjuster _ WindowEdgeAdjustingMorph top.	self addMorph: topAdjuster.	bottomAdjuster _ WindowEdgeAdjustingMorph bottom.	self addMorph: bottomAdjuster.	leftAdjuster _ WindowEdgeAdjustingMorph left.	self addMorph: leftAdjuster.	rightAdjuster _ WindowEdgeAdjustingMorph right.	self addMorph: rightAdjuster.	topLeftAdjuster _ WindowEdgeAdjustingMorph topLeft.	self addMorph: topLeftAdjuster.	bottomLeftAdjuster _ WindowEdgeAdjustingMorph bottomLeft.	self addMorph: bottomLeftAdjuster.	topRightAdjuster _ WindowEdgeAdjustingMorph topRight.	self addMorph: topRightAdjuster.	bottomRightAdjuster _ WindowEdgeAdjustingMorph bottomRight.	self addMorph: bottomRightAdjuster! !!SystemWindow methodsFor: 'top window' stamp: 'jmv 2/25/2011 15:22'!activateAndSendTopToBack: aBoolean	"Bring me to the front and make me able to respond to mouse and keyboard"	| oldTop |	self owner 		ifNil: [^self	"avoid spurious activate when drop in trash"].	oldTop := TopWindow.	TopWindow := self.	oldTop ifNotNil: [		oldTop passivate.		aBoolean ifTrue: [			oldTop owner addMorphBack: oldTop ]].	self owner firstSubmorph == self 		ifFalse: [			"Bring me (with any flex) to the top if not already"			self owner addMorphFront: self].	self changed.	self isCollapsed 		ifFalse: [			model modelWakeUpIn: self]! !!SystemWindow methodsFor: 'top window' stamp: 'jmv 2/25/2011 15:22'!passivate	"Make me unable to respond to mouse and keyboard"	| focus |	focus _ ActiveHand keyboardFocus.	focus ifNotNil: [		(focus ownerThatIsA: SystemWindow) == self			ifTrue: [ ActiveHand releaseKeyboardFocus ]].	model modelSleep.		self world ifNotNil: [  "clean damage now, so dont merge this rect with new top window"		self world == World ifTrue: [self world displayWorld]].	self changed! !!SystemWindow methodsFor: 'layout' stamp: 'jmv 2/25/2011 15:15'!layoutAndComputeFullBounds	"Compute a new layout of submorphs based on the given layout bounds."	| bl br h thickness tl tr w cornerExtent |	submorphs isEmpty ifTrue: [		^fullBounds _ bounds].	thickness _ 4.	cornerExtent _ 20.	tl _ bounds topLeft.	tr _ bounds topRight.	bl _ bounds bottomLeft.	br _ bounds bottomRight.	w _ bounds width - cornerExtent - cornerExtent.	h _ bounds height - cornerExtent - cornerExtent.	topAdjuster bounds: (tl + (cornerExtent@0) extent: w@thickness).	bottomAdjuster bounds: (bl+ (cornerExtent @ thickness negated) extent: w@thickness).	leftAdjuster bounds: (tl+ (0@cornerExtent) extent: thickness@h).	rightAdjuster bounds: (tr + (thickness negated@ cornerExtent) extent: thickness@h).	topLeftAdjuster bounds: (tl extent: thickness@thickness).	"use thickness so close button is reachable"	bottomLeftAdjuster bounds: (bl-(0@cornerExtent) extent: cornerExtent@cornerExtent).	topRightAdjuster bounds: (tr+(cornerExtent negated@0) extent: cornerExtent@cornerExtent).	bottomRightAdjuster bounds: (br-cornerExtent extent: cornerExtent@cornerExtent).	layoutMorph ifNotNil: [		layoutMorph bounds: self layoutBounds ].	fullBounds _ self computeFullBounds! !!Theme methodsFor: 'tool colors' stamp: 'jmv 2/25/2011 15:31'!messageNames	^(Color r: 0.53 g: 0.77 b: 0.382)! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:35'!initializeBottom	selector _ #bottom:.	coordinateGetter _ #y.	cursorGetter _ #resizeBottom! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:35'!initializeBottomLeft	selector _ #bottomLeft:.	coordinateGetter _ #yourself.	cursorGetter _ #resizeBottomLeft! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:36'!initializeBottomRight	selector _ #bottomRight:.	coordinateGetter _ #yourself.	cursorGetter _ #resizeBottomRight! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:35'!initializeLeft	selector _ #left:.	coordinateGetter _ #x.	cursorGetter _ #resizeLeft! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:35'!initializeRight	selector _ #right:.	coordinateGetter _ #x.	cursorGetter _ #resizeRight! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:35'!initializeTop	selector _ #top:.	coordinateGetter _ #y.	cursorGetter _ #resizeTop! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:36'!initializeTopLeft	selector _ #topLeft:.	coordinateGetter _ #yourself.	cursorGetter _ #resizeTopLeft! !!WindowEdgeAdjustingMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 14:36'!initializeTopRight	selector _ #topRight:.	coordinateGetter _ #yourself.	cursorGetter _ #resizeTopRight! !!WindowEdgeAdjustingMorph methodsFor: 'adjusting' stamp: 'jmv 2/25/2011 14:42'!adjustOwnerAt: aPoint	owner ifNotNil: [		owner perform: selector with: (aPoint perform: coordinateGetter) ]! !!WindowEdgeAdjustingMorph methodsFor: 'accessing' stamp: 'jmv 2/25/2011 14:38'!cursor	^Cursor perform: cursorGetter! !!WindowEdgeAdjustingMorph methodsFor: 'drawing' stamp: 'jmv 2/25/2011 15:11'!drawOn: aCanvas! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:43'!bottom	^self new initializeBottom! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:43'!bottomLeft	^self new initializeBottomLeft! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:43'!bottomRight	^self new initializeBottomRight! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:43'!left	^self new initializeLeft! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:43'!right	^self new initializeRight! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:44'!top	^self new initializeTop! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:44'!topLeft	^self new initializeTopLeft! !!WindowEdgeAdjustingMorph class methodsFor: 'instance creation' stamp: 'jmv 2/25/2011 14:44'!topRight	^self new initializeTopRight! !SystemWindow removeSelector: #spawnReframeHandle:!!classDefinition: #SystemWindow category: #'Morphic-Windows'!PluggableMorph subclass: #SystemWindow	instanceVariableNames: 'labelString paneMorphs collapsedFrame fullFrame isCollapsed updatablePanes widgetsColor layoutMorph topAdjuster bottomAdjuster leftAdjuster rightAdjuster topLeftAdjuster bottomLeftAdjuster topRightAdjuster bottomRightAdjuster'	classVariableNames: 'CloseIcon CollapseIcon ExpandIcon MenuIcon RoundedCornerBL RoundedCornerBR RoundedCornerTL RoundedCornerTR TitleGradient TopWindow'	poolDictionaries: ''	category: 'Morphic-Windows'!Rectangle removeSelector: #withSideOrCorner:setToPoint:!Rectangle removeSelector: #withSideOrCorner:setToPoint:minExtent:!Morph removeSelector: #layoutBounds:!