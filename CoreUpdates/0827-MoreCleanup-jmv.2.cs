'From Cuis 3.0 of 18 January 2011 [latest update: #768] on 28 February 2011 at 3:37:32 pm'!!Morph methodsFor: 'layout' stamp: 'jmv 2/28/2011 15:33'!layoutAndComputeFullBounds	"Compute a new layout of submorphs based on the given layout bounds."	"Only specific subclasses do layout. We just compute fullBounds"	fullBounds _ self computeFullBounds! !!HaloMorph methodsFor: 'private' stamp: 'jmv 2/28/2011 15:17'!doDup: evt with: dupHandle 	"Ask hand to duplicate my target."	self obtainHaloForEvent: evt andRemoveAllHandlesBut: dupHandle.	self setTarget: (target duplicateMorph: evt).	evt hand grabMorph: target.	self step.	"update position if necessary"	evt hand addMouseListener: self	"Listen for the drop"! !!PasteUpMorph methodsFor: 'event handling' stamp: 'jmv 2/28/2011 15:16'!mouseDown: evt	"Handle a mouse down event."	| grabbedMorph handHadHalos handler |	grabbedMorph _ self morphToGrab: evt.	grabbedMorph ifNotNil:[		grabbedMorph isSticky ifTrue:[^self].		^evt hand grabMorph: grabbedMorph].	handler _ self eventHandler.	(handler notNil and: [handler handlesMouseDown: evt])		ifTrue: [^handler mouseDown: evt fromMorph: self].			handHadHalos _ evt hand halo notNil.	evt hand halo: nil. "shake off halos"	evt hand releaseKeyboardFocus. "shake of keyboard foci"	self isWorldMorph ifTrue: [		handHadHalos ifTrue: [^self addAlarm: #invokeWorldMenu: with: evt after: 200].		^self invokeWorldMenu: evt	].	"otherwise, explicitly ignore the event if we're not the world,	so that we could be picked up if need be"	self isWorldMorph ifFalse:[evt wasHandled: false].! !!PasteUpMorph methodsFor: 'world state' stamp: 'jmv 2/28/2011 15:16'!deleteAllHalos	self haloMorphs do:		[ :m | m delete]! !PasteUpMorph removeSelector: #dragThroughOnDesktop:!Morph class removeSelector: #newSticky!Morph removeSelector: #beTransparent!Morph removeSelector: #colorString:!Morph removeSelector: #duplicateMorphCollection:!Morph removeSelector: #inspectAt:event:!Morph removeSelector: #maybeDuplicateMorph:!Morph removeSelector: #showActions!Morph removeSelector: #suspendEventHandler!Smalltalk removeClassNamed: #NewHandleMorph!Smalltalk removeClassNamed: #SelectionMorph!