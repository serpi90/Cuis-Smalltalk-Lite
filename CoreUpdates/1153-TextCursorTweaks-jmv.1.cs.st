'From Cuis 4.0 of 16 November 2011 [latest update: #1144] on 29 November 2011 at 4:19:10 pm'!!classDefinition: #Paragraph category: #'System-Text'!Object subclass: #Paragraph	instanceVariableNames: 'model extentForComposing lines maxRightX selectionStartBlocks selectionStopBlocks focused editor showCaret lastCaretRect lastCaretRectNeedsRedraw '	classVariableNames: ''	poolDictionaries: ''	category: 'System-Text'!!InnerTextMorph methodsFor: 'drawing' stamp: 'jmv 11/29/2011 16:17'!                    drawOn: aCanvas	"Draw the receiver on a canvas"	false ifTrue: [ self debugDrawLineRectsOn: aCanvas ].  "show line rects for debugging"	aCanvas paragraph: self paragraph bounds: self bounds color: color! !!InnerTextMorph methodsFor: 'blinking cursor' stamp: 'jmv 11/29/2011 16:10'!pauseBlinking	"Show a solid cursor (non blinking) for a short while"	pauseBlinking _ true.	paragraph ifNotNil: [		"Show cursor right now if needed"		paragraph showCaret ifFalse: [			paragraph showCaret: true ]]! !!Paragraph methodsFor: 'display' stamp: 'jmv 11/29/2011 16:15'!  displayInsertionMarkAtX: x top: top bottom: bottom emphasis: emphasis on: aCanvas paragraphTopLeft: paragraphTopLeft	| caretColor x1 isBold isItalic x0 h w halfW r d |	isBold _ emphasis allMask: 1.	isItalic _ emphasis allMask: 2.	caretColor _ Theme current insertionPoint.	h _ bottom - top.	w _ isBold		ifTrue: [ h // 25 + 2 ]		ifFalse: [ h // 30 + 1 ].	halfW _ w // 2.	isItalic		ifTrue: [				"Keep tweaking if needed!! For italics with descenders (i.e. p), cursor shows a bit to the left..."			d _ isBold ifTrue: [ h // 8 ] ifFalse: [ h // 9].			x0 _ x- (h*5//24) + d.			x1 _ x + d ]		ifFalse: [			x0 _ x.			x1 _ x].	x0-paragraphTopLeft x < halfW ifTrue: [		x1 _ x1 - x0 + halfW+paragraphTopLeft x.		x0 _ halfW+paragraphTopLeft x ].	r _ extentForComposing x-halfW-1.	r < (x1-paragraphTopLeft x) ifTrue: [		x0 _ x0 + r - x1+paragraphTopLeft x.		x1 _ r +paragraphTopLeft x].	lastCaretRect _ x0-halfW@ top corner: x1+halfW+1 @ (bottom+1).	aCanvas		line: x0@(bottom-halfW) to: x1@(top+halfW)		width: w color: caretColor! !!Paragraph methodsFor: 'display' stamp: 'jmv 11/29/2011 16:14'!     displaySelectionStartBlock: startBlock stopBlock: stopBlock InLine: line on: aCanvas paragraphTopLeft: paragraphTopLeft	| leftX rightX idx caretFont t b caretAttributes |	startBlock ifNil: [^self].	"No selection"	startBlock = stopBlock 		ifTrue: [			"Only show caret on line where clicked"			startBlock textLine first = line first ifFalse: [				^self ].			leftX _ paragraphTopLeft x + startBlock left.			idx _ startBlock stringIndex.			caretAttributes _ editor ifNotNil: [ editor currentAttributes ].			caretFont _ caretAttributes				ifNil: [ model actualContents fontAt: idx ]				ifNotNil: [ model actualContents fontIfApplying: caretAttributes ].			b _ paragraphTopLeft y + line top + line baseline + caretFont descent-1.			t _ paragraphTopLeft y + line top + line baseline - caretFont ascent.			showCaret ifTrue: [				self					displayInsertionMarkAtX: leftX					top: t					bottom: b					emphasis: caretFont emphasis					on: aCanvas					paragraphTopLeft: paragraphTopLeft ]]		ifFalse: [			"Test entire selection before or after here"			(stopBlock stringIndex < line first 				or: [startBlock stringIndex > (line last + 1)])					ifTrue: [^self].	"No selection on this line"			(stopBlock stringIndex = line first 				and: [stopBlock textLine ~= line])					ifTrue: [^self].	"Selection ends on line above"			(startBlock stringIndex = (line last + 1) 				and: [stopBlock textLine ~= line])					ifTrue: [^self].			lastCaretRect _ nil.			leftX _  paragraphTopLeft x + (startBlock stringIndex < line first 				ifTrue: [ line ]				ifFalse: [ startBlock ]) left.			rightX _  paragraphTopLeft x + ((stopBlock stringIndex > (line last + 1) or: [					stopBlock stringIndex = (line last + 1) 						and: [stopBlock textLine ~= line]]) 				ifTrue: [line right]				ifFalse: [stopBlock left]).			aCanvas				fillRectangle: (leftX @ (line top +  paragraphTopLeft y) corner: rightX @ (line bottom +  paragraphTopLeft y))				colorOrInfiniteForm: self selectionColor].	"Selection begins on line below"! !!Paragraph methodsFor: 'initialization' stamp: 'jmv 11/29/2011 16:14'!         initialize	focused _ false.	showCaret _ false.	selectionStartBlocks _ #().	selectionStopBlocks _ #()! !Paragraph removeSelector: #lastCaretRectNeedsRedraw!!classDefinition: #Paragraph category: #'System-Text'!Object subclass: #Paragraph	instanceVariableNames: 'model extentForComposing lines maxRightX selectionStartBlocks selectionStopBlocks focused editor showCaret lastCaretRect'	classVariableNames: ''	poolDictionaries: ''	category: 'System-Text'!