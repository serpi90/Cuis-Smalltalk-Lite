'From Cuis 3.0 of 31 January 2011 [latest update: #790] on 26 February 2011 at 12:27:16 am'!!CodeProvider methodsFor: 'annotation' stamp: 'jmv 2/26/2011 00:06'!buildMorphicAnnotationsPane	| aTextMorph |	aTextMorph _ TextModelMorph		textProvider: self		textGetter: #annotation.	aTextMorph		askBeforeDiscardingEdits: false;		hideScrollBarsIndefinitely.	^aTextMorph! !!CodeProvider methodsFor: 'construction' stamp: 'jmv 2/26/2011 00:06'!buildMorphicCodePane	"Construct the pane that shows the code.	Respect the Preference for standardCodeFont."	^TextModelMorph		textProvider: self		textGetter: #acceptedContents		textSetter: #contents:notifying:		selectionGetter: #contentsSelection! !!Browser methodsFor: 'class comment pane' stamp: 'jmv 2/26/2011 00:00'!buildMorphicCommentPane	"Construct the pane that shows the class comment.	Respect the Preference for standardCodeFont."	| commentPane |	commentPane := BrowserCommentTextMorph				textProvider: self				textGetter: #classCommentText				textSetter: #newClassComment:.	commentPane styler: nil.	^ commentPane! !!Browser methodsFor: 'class functions' stamp: 'jmv 2/26/2011 00:04'!buildMorphicSwitches	| instanceSwitch commentSwitch classSwitch row buttonColor |	instanceSwitch := PluggableButtonMorph 				model: self				stateGetter: #instanceMessagesIndicated				action: #indicateInstanceMessages.	instanceSwitch		label: 'instance'.	commentSwitch := PluggableButtonMorph 				model: self				stateGetter: #classCommentIndicated				action: #plusButtonHit.	commentSwitch		label: '?' asText allBold;		setBalloonText: 'class comment'.	classSwitch := PluggableButtonMorph 				model: self				stateGetter: #classMessagesIndicated				action: #indicateClassMessages.	classSwitch		label: 'class'.	row _ LayoutMorph newRow.	row		addMorph: instanceSwitch proportionalWidth: 0.45;		addMorph: commentSwitch proportionalWidth: 0.22;		addMorph: classSwitch proportionalWidth: 0.33.	buttonColor _ Theme current buttonColorFrom: self class windowColor.	row color: buttonColor.	{ 		instanceSwitch.		commentSwitch.		classSwitch} do: [:m | 				m color: buttonColor ].	^row! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:00'!buildMorphicClassList	| myClassList |	(myClassList := PluggableListMorph new)		model: self		listGetter: #classList		indexGetter: #classListIndex		indexSetter: #classListIndex:		menuGetter: #classListMenu		keystrokeAction: #classListKey:from:.	myClassList enableDragNDrop: false.	myClassList doubleClickSelector: #browseSelectionInPlace.	^myClassList! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:04'!buildMorphicMessageCatList	| myMessageCatList |	(myMessageCatList := PluggableMessageCategoryListMorph new)		model: self		listGetter: #messageCategoryList		indexGetter: #messageCategoryListIndex		indexSetter: #messageCategoryListIndex:		menuGetter: #messageCategoryMenu		keystrokeAction: #arrowKey:from:		rawListGetter: #rawMessageCategoryList.	myMessageCatList enableDragNDrop: false.	^myMessageCatList! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:04'!buildMorphicMessageList	"Build a morphic message list, with #messageList as its list-getter"	| aListMorph |	aListMorph := PluggableListMorph		model: self		listGetter: #messageList		indexGetter: #messageListIndex		indexSetter: #messageListIndex:		menuGetter: #messageListMenu		keystrokeAction: #messageListKey:from:.	aListMorph enableDragNDrop: false.	^aListMorph! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:05'!buildMorphicSystemCatList	| dragNDropFlag myCatList |	dragNDropFlag := false.	(myCatList := PluggableListMorph new)		model: self		listGetter: #systemCategoryList		indexGetter: #systemCategoryListIndex		indexSetter: #systemCategoryListIndex:		menuGetter: #systemCategoryMenu		keystrokeAction: #systemCatListKey:from:.	myCatList enableDragNDrop: dragNDropFlag.	^myCatList! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:19'!buildMorphicWindow	"Create a pluggable version of all the morphs for a Browser in Morphic"	| window upperPanes |	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicSystemCatList proportionalWidth: 0.25;		addAdjusterAndMorph: self buildMorphicClassColumn proportionalWidth: 0.25;		addAdjusterAndMorph: self buildMorphicMessageCatList proportionalWidth: 0.25;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.25.		window _ SystemWindow new model: self.	window layoutMorph		addMorph: upperPanes proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6.	window setUpdatablePanesFrom: #(systemCategoryList classList messageCategoryList messageList).	self changed: #editSelection.	^ window! !!Browser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:19'!buildNoSysCatMorphicWindow	"A Browser without the class categories list"	| window mySingletonList upperPanes |	mySingletonList _ PluggableListMorph 				model: self				listGetter: #systemCategorySingleton				indexGetter: #indexIsOne				indexSetter: #indexIsOne:				menuGetter: #systemCatSingletonMenu				keystrokeAction: #systemCatSingletonKey:from:.	mySingletonList enableDragNDrop: false.	mySingletonList hideScrollBarsIndefinitely.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicClassColumn proportionalWidth: 0.33;		addAdjusterAndMorph: self buildMorphicMessageCatList proportionalWidth: 0.33;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.34.		window _ SystemWindow new model: self.	window layoutMorph		addMorph: mySingletonList fixedHeight: Preferences standardCodeFont height + 10;		addAdjusterAndMorph: upperPanes proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6.	window setUpdatablePanesFrom: #(classList messageCategoryList messageList).	self changed: #editSelection.	^ window! !!ChangeList methodsFor: 'initialization-release' stamp: 'jmv 2/26/2011 00:20'!buildMorphicWindowMultiSelect: multiSelect	"Open a morphic view for the messageSet, whose label is labelString. 	The listView may be either single or multiple selection type"	| window listPane |	listPane _ multiSelect				ifTrue: [					PluggableListMorphOfMany						model: self						listGetter: #list						primarySelectionGetter: #listIndex						primarySelectionSetter: #toggleListIndex:						listSelectionGetter: #listSelectionAt:						listSelectionSetter: #listSelectionAt:put:						menuGetter: (self showsVersions								ifTrue: [#versionsMenu]								ifFalse: [#changeListMenu])]				ifFalse: [					PluggableListMorph						model: self						listGetter: #list						indexGetter: #listIndex						indexSetter: #toggleListIndex:						menuGetter: (self showsVersions								ifTrue: [#versionsMenu]								ifFalse: [#changeListMenu])].	listPane keystrokeActionSelector: #changeListKey:from:.		window _ SystemWindow new model: self.	window layoutMorph		addMorph: listPane proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6.	^ window! !!ChangeList methodsFor: 'menu actions' stamp: 'jmv 2/26/2011 00:05'!buildMorphicCodePane	^TextModelMorph		textProvider: self		textGetter: #acceptedContents! !!ChangeSorter methodsFor: 'creation' stamp: 'jmv 2/26/2011 00:05'!buildMorphicUIIn: aLayoutMorph	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0."	| list1 list2 list3 upperPanes |	list1 _ (PluggableListMorphByItem 				model: self				listGetter: #changeSetList				indexGetter: #currentCngSet				indexSetter: #showChangeSetNamed:				menuGetter: #changeSetMenu				keystrokeAction: #changeSetListKey:from:)			autoDeselect: false.	list2 _ PluggableListMorphByItem 				model: self				listGetter: #classList				indexGetter: #currentClassName				indexSetter: #currentClassName:				menuGetter: #classListMenu				keystrokeAction: #classListKey:from:.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: list1 proportionalWidth: 0.5;		addAdjusterAndMorph: list2 proportionalWidth: 0.5.	list3 _ PluggableListMorphByItem 				model: self				listGetter: #messageList				indexGetter: #currentSelector				indexSetter: #currentSelector:				menuGetter: #messageMenu				keystrokeAction: #messageListKey:from:.	aLayoutMorph addMorph: upperPanes proportionalHeight: 0.25.	aLayoutMorph addAdjusterAndMorph: list3 proportionalHeight: 0.25.	aLayoutMorph addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.5! !!ChangeSorter methodsFor: 'creation' stamp: 'jmv 2/25/2011 23:53'!buildMorphicWindow	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0."	| window |	myChangeSet ifNil: [self myChangeSet: ChangeSet current]. 	window _ SystemWindow new model: self.	self buildMorphicUIIn: window layoutMorph.	self addDependent: window.		"so it will get changed: #relabel"	window setLabel: self labelString.	^window! !!Debugger methodsFor: 'initialize' stamp: 'jmv 2/26/2011 00:20'!buildMorphicWindow	"Open a full morphic debugger with the given label"	| window upperMorph bottomMorph1 bottomMorph2 bottomMorph3 bottomMorph4 bottomMorph |	upperMorph _ PluggableListMorph		model: self 		listGetter: #contextStackList		indexGetter: #contextStackIndex		indexSetter: #toggleContextStackIndex:		menuGetter: #contextStackMenu		keystrokeAction: #contextStackKey:from:.	bottomMorph1 _ PluggableListMorph new			doubleClickSelector: #inspectSelection;			model: self receiverInspector			listGetter: #fieldList			indexGetter: #selectionIndex 			indexSetter: #toggleIndex:			menuGetter: #fieldListMenu			keystrokeAction: #inspectorKey:from:.	bottomMorph2 _ TextModelMorph 			textProvider: self receiverInspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	bottomMorph3 _ PluggableListMorph new			doubleClickSelector: #inspectSelection;			model: self contextVariablesInspector 			listGetter: #fieldList			indexGetter: #selectionIndex 			indexSetter: #toggleIndex:			menuGetter: #fieldListMenu			keystrokeAction: #inspectorKey:from:.	bottomMorph4 _ TextModelMorph 			textProvider: self contextVariablesInspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	bottomMorph _ LayoutMorph newRow.	bottomMorph		addMorph: bottomMorph1 proportionalWidth: 0.2;		addAdjusterAndMorph: bottomMorph2 proportionalWidth: 0.3;		addAdjusterAndMorph: bottomMorph3 proportionalWidth: 0.2;		addAdjusterAndMorph: bottomMorph4 proportionalWidth: 0.3.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: upperMorph proportionalHeight: 0.25;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.55;		addAdjusterAndMorph: bottomMorph proportionalHeight: 0.2.	^ window ! !!Debugger methodsFor: 'context stack menu' stamp: 'jmv 2/26/2011 00:21'!openMorphicNotifierLabelled: label message: messageString	| notifyPane window extentToUse |	self expandStack.	messageString		ifNil: [			notifyPane _ PluggableListMorph				model: self				listGetter: #contextStackList				indexGetter: #contextStackIndex				indexSetter: #debugAt:				menuGetter: nil				keystrokeAction: nil ]		ifNotNil: [			notifyPane _ TextModelMorph withText: messageString.			notifyPane askBeforeDiscardingEdits: false ].	window _ SystemWindow new model: self.	window layoutMorph		addMorph: self buttonRowForPreDebugWindow proportionalHeight: 0.2;		addAdjusterAndMorph: notifyPane proportionalHeight: 0.8.	window setLabel: label.	extentToUse _ 650 @ 320.	"nice and wide to show plenty of the error msg"	^ window openInWorldExtent: extentToUse.! !!DualChangeSorter methodsFor: 'creation' stamp: 'jmv 2/26/2011 00:21'!buildMorphicWindow	| window left right |	leftCngSorter _ ChangeSorter new myChangeSet: ChangeSet current.	leftCngSorter parent: self.	rightCngSorter _ ChangeSorter new myChangeSet: ChangeSorter secondaryChangeSet.	rightCngSorter parent: self.	window _ SystemWindow new model: self.	window beRow.	left _ LayoutMorph newColumn.	leftCngSorter buildMorphicUIIn: left.	right _ LayoutMorph newColumn.	rightCngSorter buildMorphicUIIn: right.	window setLabel: leftCngSorter labelString.	window layoutMorph		addMorph: left proportionalWidth: 0.5;		addAdjusterAndMorph: right proportionalWidth: 0.5.	^ window! !!FileContentsBrowser methodsFor: 'creation' stamp: 'jmv 2/26/2011 00:22'!buildMorphicWindow	"Create a pluggable version of all the views for a Browser, including views and controllers."	| window list1 list2 upperPanes |	contentsSymbol _ self defaultDiffsSymbol.  "#showDiffs or #prettyDiffs"	window _ SystemWindow new model: self.	self systemCategoryListIndex: 1.	list1 _ PluggableListMorph 			model: self 			listGetter: #systemCategorySingleton			indexGetter: #indexIsOne 			indexSetter: #indexIsOne:			menuGetter: #packageListMenu			keystrokeAction: #packageListKey:from:.	list1 hideScrollBarsIndefinitely.		list2 _ PluggableListMorph 			model: self 			listGetter: #messageCategoryList			indexGetter: #messageCategoryListIndex 			indexSetter: #messageCategoryListIndex:			menuGetter: #messageCategoryMenu.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicClassColumn proportionalWidth: 0.33;		addAdjusterAndMorph: list2 proportionalWidth: 0.33;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.34.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: list1 fixedHeight: Preferences standardCodeFont height + 10;		addAdjusterAndMorph: upperPanes proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6.	self changed: #editSelection.	^ window! !!FileList class methodsFor: 'instance creation' stamp: 'jmv 2/26/2011 00:07'!buildMorphicWindowOn: aFileStream	"Open a morphic view of a FileList on the given file."	| fileModel window |	fileModel _ FileList new setFileStream: aFileStream.	"closes the stream"	window _ SystemWindow new model: fileModel.	window setLabel: aFileStream fullName.	window layoutMorph		addMorph: (TextModelMorph 			textProvider: fileModel			textGetter: #acceptedContents 			textSetter: #put:			selectionGetter: #contentsSelection)		proportionalHeight: 1.	^ window openInWorld! !!FileList2 methodsFor: 'user interface' stamp: 'jmv 2/26/2011 00:07'!morphicDirectoryTreePaneFiltered: aSymbol	^(SimpleHierarchicalListMorph 		model: self		listGetter: aSymbol		indexGetter: #currentDirectorySelected		indexSetter: #setSelectedDirectoryTo:		menuGetter: #volumeMenu		keystrokeAction: nil)			autoDeselect: false;			enableDrag: false;			enableDrop: true;			yourself		! !!FileList2 methodsFor: 'user interface' stamp: 'jmv 2/26/2011 00:07'!morphicFileContentsPane	^TextModelMorph 		textProvider: self		textGetter: #acceptedContents 		textSetter: #put:		selectionGetter: #contentsSelection! !!FileList2 methodsFor: 'user interface' stamp: 'jmv 2/26/2011 00:08'!morphicFileListPane	^(PluggableListMorph 		model: self 		listGetter: #fileList 		indexGetter: #fileListIndex		indexSetter: #fileListIndex: 		menuGetter: #fileListMenu)			enableDrag: true;			enableDrop: false;			yourself! !!FileList2 methodsFor: 'user interface' stamp: 'jmv 2/26/2011 00:08'!morphicPatternPane	^TextModelMorph 		textProvider: self		textGetter: #pattern 		textSetter: #pattern:! !!FileList2 class methodsFor: 'instance creation' stamp: 'jmv 2/26/2011 00:22'!morphicViewOnDirectory: aFileDirectory	| aFileList window middleRow upperRow |	aFileList _ self new directory: aFileDirectory.	upperRow _ LayoutMorph newRow.	upperRow		addMorph: aFileList morphicPatternPane proportionalWidth: 0.3;		addAdjusterAndMorph: aFileList optionalButtonRow proportionalWidth: 0.7.	middleRow _ LayoutMorph newRow.	middleRow		addMorph: aFileList morphicDirectoryTreePane proportionalWidth: 0.5;		addAdjusterAndMorph: aFileList morphicFileListPane proportionalWidth: 0.5.	window _ SystemWindow new model: aFileList.	window layoutMorph		addMorph: upperRow fixedHeight: self defaultButtonPaneHeight;		addAdjusterAndMorph: middleRow proportionalHeight: 0.4;		addAdjusterAndMorph: aFileList morphicFileContentsPane proportionalHeight: 0.6.	window setLabel: aFileDirectory pathName.	aFileList postOpen.	^ window ! !!Inspector class methodsFor: 'instance creation' stamp: 'jmv 2/26/2011 00:22'!inMorphicWindowOn: anObject label: aLabel	" Inspector openAsMorphOn: SystemOrganization "	| window inspector contentsText list upperRow evaluatorText |	inspector _ self inspect: anObject.	list _ PluggableListMorph new			doubleClickSelector: #inspectSelection;			model: inspector 			listGetter: #fieldList			indexGetter: #selectionIndex			indexSetter: #toggleIndex:			menuGetter: #fieldListMenu			keystrokeAction: #inspectorKey:from:.	contentsText _ TextModelMorph			textProvider: inspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	evaluatorText _ (TextModelMorph textProvider: inspector)			askBeforeDiscardingEdits: false.	upperRow _ LayoutMorph newRow.	upperRow		addMorph: list proportionalWidth: 0.3;		addAdjusterAndMorph: contentsText proportionalWidth: 0.7.	window _ SystemWindow new model: inspector.	window layoutMorph		addMorph: upperRow proportionalHeight: 0.7;		addAdjusterAndMorph: evaluatorText proportionalHeight: 0.3.	window setLabel: aLabel.	window setUpdatablePanesFrom: #(fieldList).	^ window! !!MessageSet methodsFor: 'private' stamp: 'jmv 2/26/2011 00:09'!buildMorphicMessageList	"Build my message-list object in morphic"	| aListMorph |	aListMorph := PluggableListMorph new.	aListMorph 		model: self		listGetter: #messageList		indexGetter: #messageListIndex		indexSetter: #messageListIndex:		menuGetter: #messageListMenu		keystrokeAction: #messageListKey:from:.	aListMorph enableDragNDrop: false.	^aListMorph! !!MessageSet methodsFor: 'private' stamp: 'jmv 2/26/2011 00:23'!buildMorphicWindow	"Answer a morphic window with the given label that can display the receiver"	| window |	window _ SystemWindow new model: self.	window layoutMorph		addMorph: self buildMorphicMessageList proportionalHeight: 0.2;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.8.	window setUpdatablePanesFrom: #(messageList).	self changed: #editSelection.	^ window! !!MessageNames methodsFor: 'initialization' stamp: 'jmv 2/26/2011 00:23'!buildMorphicWindow	"Answer a morphic window with the given initial search string, nil if none""MessageNames openMessageNames"	| window selectorListView firstRow searchButton textMorph secondRow |	textMorph _ TextModelMorph 		textProvider: self		textGetter: #searchString 		textSetter: #searchString:.	textMorph setProperty: #alwaysAccept toValue: true.	textMorph askBeforeDiscardingEdits: false.	textMorph acceptOnCR: true.	textMorph setTextColor: Color brown.	textMorph hideScrollBarsIndefinitely.	textMorph textMorph		on: #mouseEnter send: #selectAll to: textMorph textMorph.	searchButton _ PluggableButtonMorph new 		model: self;		label: 'Search';		action: #doSearchFrom:;		arguments: {textMorph}.	searchButton setBalloonText: 'Type some letters into the pane at right, and then press this Search button (or hit RETURN) and all method selectors that match what you typed will appear in the list pane below.  Click on any one of them, and all the implementors of that selector will be shown in the right-hand pane, and you can view and edit their code without leaving this tool.'.	firstRow _ LayoutMorph newRow.	firstRow		addMorph: searchButton proportionalWidth: 0.25;		addMorph: textMorph proportionalWidth: 0.75.	selectorListView _ PluggableListMorph 		model: self		listGetter: #selectorList		indexGetter: #selectorListIndex		indexSetter: #selectorListIndex:		menuGetter: #selectorListMenu		keystrokeAction: #selectorListKey:from:.	secondRow _  LayoutMorph newRow.	secondRow		addMorph: selectorListView proportionalWidth: 0.5;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.5.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: firstRow fixedHeight: self defaultButtonPaneHeight+4;		addAdjusterAndMorph: secondRow proportionalHeight: 0.5;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.5.	self changed: #editSelection.	window setLabel: 'MessageNames'.	^ window! !!Morph methodsFor: 'e-toy support' stamp: 'jmv 2/25/2011 23:54'!embeddedInMorphicWindowLabeled: labelString 	| window |	window := SystemWindow new.	window setLabel: labelString.	window setWindowColor: self color.	window layoutMorph addMorph: self proportionalHeight: 1.	^window! !!Morph methodsFor: 'initialization' stamp: 'jmv 2/26/2011 00:09'!inATwoWayScrollPane	"Answer a two-way scroll pane that allows the user to scroll the receiver in either direction.  It will have permanent scroll bars unless you take some special action."	| widget |	widget := ScrollPane new.	widget extent: (self width min: 300 max: 100) @ (self height min: 150 max: 100).	widget scroller addMorph: self.	widget setScrollDeltas.	widget color: self color darker darker.	^widget! !!BorderedMorph methodsFor: 'accessing' stamp: 'jmv 10/2/2009 09:54'!borderWidth: anInteger	borderWidth = anInteger ifFalse: [		borderColor ifNil: [borderColor _ Color black].		borderWidth _ anInteger max: 0.		self changed ]! !!ObjectExplorer methodsFor: 'accessing' stamp: 'jmv 2/26/2011 00:23'!explorerFor: anObject 	| window listMorph textMorph |	rootObject _ anObject	.listMorph _ SimpleHierarchicalListMorph 			model: self			listGetter: #getList			indexGetter: #getCurrentSelection			indexSetter: #noteNewSelection:			menuGetter: #genericMenu			keystrokeAction: #explorerKey:from:.	listMorph autoDeselect: false.	textMorph _ (TextModelMorph textProvider: self)			askBeforeDiscardingEdits: false.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: listMorph proportionalHeight: 0.8;		addAdjusterAndMorph: textMorph proportionalHeight: 0.2.	window setLabel: (rootObject printStringLimitedTo: 64).	^ window! !!PackagePaneBrowser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:09'!buildMorphicPackageList	^PluggableListMorph		model: self		listGetter: #packageList		indexGetter: #packageListIndex		indexSetter: #packageListIndex:		menuGetter: #packageMenu		keystrokeAction: #packageListKey:from:! !!PackagePaneBrowser methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:23'!buildMorphicWindow	"Create a pluggable version of all the morphs for a Browser in Morphic"	"PackagePaneBrowser openBrowser"	| window upperPanes |	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicPackageList proportionalWidth: 0.2;		addAdjusterAndMorph: self buildMorphicSystemCatList proportionalWidth: 0.15;		addAdjusterAndMorph: self buildMorphicClassColumn proportionalWidth: 0.25;		addAdjusterAndMorph: self buildMorphicMessageCatList proportionalWidth: 0.15;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.25.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: upperPanes proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6.	window setUpdatablePanesFrom: #(systemCategoryList classList messageCategoryList messageList).	self changed: #editSelection.	^ window! !!PluggableMorph methodsFor: 'initialization' stamp: 'jmv 2/25/2011 23:58'!defaultBorderWidth	"answer the default border width for the receiver"	^ 0! !!PointerFinder methodsFor: 'morphic ui' stamp: 'jmv 2/25/2011 23:55'!open	| window list |	list _ PluggableListMorph new		doubleClickSelector: #inspectObject;		model: self		listGetter: #pointerList		indexGetter: #pointerListIndex		indexSetter: #pointerListIndex:		menuGetter: #pointerListMenu		keystrokeAction: #arrowKey:from:.	"For doubleClick to work best disable autoDeselect"	list autoDeselect: false.	list color: Color lightMagenta.	window _ SystemWindow new model: self.	window setLabel: 'Pointer Finder'.	window layoutMorph addMorph: list proportionalHeight: 1.	window openInWorld! !!ProcessBrowser methodsFor: 'views' stamp: 'jmv 2/26/2011 00:10'!openAsMorph	"Create a pluggable version of me, answer a window"	| window aTextMorph list1 list2 upperRow |	deferredMessageRecipient _ WorldState.	list1 _ (PluggableListMorph				model: self				listGetter: #processNameList				indexGetter: #processListIndex				indexSetter: #processListIndex:				menuGetter: #processListMenu				keystrokeAction: #processListKey:from:)			enableDragNDrop: false.	list2 _ (PluggableListMorph				model: self				listGetter: #stackNameList				indexGetter: #stackListIndex				indexSetter: #stackListIndex:				menuGetter: #stackListMenu				keystrokeAction: #stackListKey:from:)			enableDragNDrop: false.	upperRow _ LayoutMorph newRow.	upperRow		addMorph: list1 proportionalWidth: 0.5;		addAdjusterAndMorph: list2 proportionalWidth: 0.5.	aTextMorph _ TextModelMorph				textProvider: self				textGetter: #selectedMethod.	aTextMorph askBeforeDiscardingEdits: false.	window _ SystemWindow new model: self.	window layoutMorph		addMorph: upperRow proportionalHeight: 0.5;		addAdjusterAndMorph: aTextMorph proportionalHeight: 0.5.	window setUpdatablePanesFrom: #(#processNameList #stackNameList ).	(window setLabel: 'Process Browser') openInWorld.	startedCPUWatcher ifTrue: [ self setUpdateCallbackAfter: 7 ].	^ window! !!ScrollBar methodsFor: 'access' stamp: 'jmv 2/26/2011 00:12'!sliderColor: aColor 	"Change the color of the scrollbar to go with aColor."	| buttonColor |	sliderColor _ aColor.	slider ifNotNil: [slider color: sliderColor].	buttonColor := self thumbColor.	menuButton		ifNotNil: [menuButton color: buttonColor].	upButton color: buttonColor.	downButton color: buttonColor.	slider color: buttonColor slightlyLighter.	pagingArea color: (aColor alphaMixed: 0.3 with: Color white)! !!ScrollPane methodsFor: 'initialization' stamp: 'jmv 2/26/2011 00:12'!initializeScrollBars	"initialize the receiver's scrollBars"	scrollBar := ScrollBar new model: self setValueSelector: #vScrollBarValue:.	hScrollBar := ScrollBar new model: self setValueSelector: #hScrollBarValue:.	scroller := TransformMorph new color: Color transparent.	scroller offset: 0@ 0.	self addMorph: scroller! !!PluggableListMorph methodsFor: 'initialization' stamp: 'jmv 2/26/2011 00:03'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel menuGetter: getMenuSel keystrokeAction: keyActionSel	self model: anObject.	getListSelector _ getListSel.	getIndexSelector _ getSelectionSel.	setIndexSelector _ setSelectionSel.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	self		updateList;		selectionIndex: self getCurrentSelectionIndex;		initForKeystrokes! !!PluggableMessageCategoryListMorph methodsFor: 'as yet unclassified' stamp: 'jmv 2/26/2011 00:03'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel menuGetter: getMenuSel keystrokeAction: keyActionSel rawListGetter: getRawSel	self model: anObject.	getListSelector _ getListSel.	getIndexSelector _ getSelectionSel.	setIndexSelector _ setSelectionSel.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	getRawListSelector _ getRawSel.	self updateList.	self selectionIndex: self getCurrentSelectionIndex.	self initForKeystrokes! !!SimpleHierarchicalListMorph methodsFor: 'initialization' stamp: 'jmv 2/26/2011 00:13'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel menuGetter: getMenuSel keystrokeAction: keyActionSel	self model: anObject.	getListSelector _ getListSel.	getSelectionSelector _ getSelectionSel.	setSelectionSelector _ setSelectionSel.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	self list: self getList.! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 2/25/2011 23:57'!defaultBorderWidth	"answer the default border width for the receiver"	^ 3! !!SystemWindow methodsFor: 'initialization' stamp: 'jmv 2/25/2011 23:57'!initialize	"Initialize a system window. Add label, stripes, etc., if desired"	super initialize.	labelString ifNil: [ labelString := 'Untitled Window'].	isCollapsed := false.	borderColor := #raised.		self wantsLabel ifTrue: [self initializeLabelArea].	self extent: 300 @ 200.	updatablePanes := Array new.	topAdjuster _ WindowEdgeAdjustingMorph top.	self addMorph: topAdjuster.	bottomAdjuster _ WindowEdgeAdjustingMorph bottom.	self addMorph: bottomAdjuster.	leftAdjuster _ WindowEdgeAdjustingMorph left.	self addMorph: leftAdjuster.	rightAdjuster _ WindowEdgeAdjustingMorph right.	self addMorph: rightAdjuster.	topLeftAdjuster _ WindowEdgeAdjustingMorph topLeft.	self addMorph: topLeftAdjuster.	bottomLeftAdjuster _ WindowEdgeAdjustingMorph bottomLeft.	self addMorph: bottomLeftAdjuster.	topRightAdjuster _ WindowEdgeAdjustingMorph topRight.	self addMorph: topRightAdjuster.	bottomRightAdjuster _ WindowEdgeAdjustingMorph bottomRight.	self addMorph: bottomRightAdjuster.	"by default"	self beColumn! !!TestRunner methodsFor: 'interface opening' stamp: 'jmv 2/26/2011 00:14'!buildDetailsText	detailsText _ TextModelMorph		textProvider: self		textGetter: #details.	detailsText hideScrollBarsIndefinitely.	^detailsText! !!TestRunner methodsFor: 'interface opening' stamp: 'jmv 2/26/2011 00:14'!buildErrorsList	^ PluggableListMorph		model: self		listGetter: #errorsList		indexGetter: #selectedErrorTest		indexSetter: #debugErrorTest:! !!TestRunner methodsFor: 'interface opening' stamp: 'jmv 2/26/2011 00:14'!buildFailuresList	^ PluggableListMorph		model: self		listGetter: #failuresList		indexGetter: #selectedFailureTest		indexSetter: #debugFailureTest:! !!TestRunner methodsFor: 'interface opening' stamp: 'jmv 2/26/2011 00:26'!buildMorphicWindow	"TestRunner new openAsMorph"	| window |	window _ SystemWindow new model: self.	window layoutMorph		addMorph: self buildUpperControls proportionalHeight: 0.25;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.75.	window setLabel: self windowLabel.	self refreshWindow.	window extent: 460 @ 400.	^window! !!TestRunner methodsFor: 'interface opening' stamp: 'jmv 2/26/2011 00:14'!buildPassFailText	passFailText _ TextModelMorph		textProvider: self		textGetter: #passFail.	passFailText hideScrollBarsIndefinitely.	^ passFailText! !!TextModel methodsFor: 'initialize-release' stamp: 'jmv 2/26/2011 00:14'!openInMorphicWindowLabeled: labelString wrap: aBoolean	| window |	window _ SystemWindow new model: self.	window setLabel: labelString.	window layoutMorph		addMorph: ((TextModelMorph withModel: self)			wrapFlag: aBoolean)		proportionalHeight: 1.	^ window openInWorld! !!SyntaxError class methodsFor: 'instance creation' stamp: 'jmv 2/26/2011 00:14'!buildMorphicViewOn: aSyntaxError	"Answer an Morphic view on the given SyntaxError."	| window list text |	list _ PluggableListMorph 			model: aSyntaxError 			listGetter: #list			indexGetter: #listIndex 			indexSetter: nil 			menuGetter: #listMenu.	text _ TextModelMorph withModel: aSyntaxError.	window _ SystemWindow new model: aSyntaxError.	window setLabel: 'Syntax Error'.	window layoutMorph		addMorph: list proportionalHeight: 0.15;		addAdjusterAndMorph: text proportionalHeight: 0.85.	^ window openInWorldExtent: 380@220! !!TranscriptMorph class methodsFor: 'instance creation' stamp: 'jmv 2/26/2011 00:27'!openWindow	"	TranscriptMorph openWindow	"	| win |	win _ SystemWindow new.	win		setLabel: 'Transcript';		model: Transcript;		widgetsColor: Theme current transcript.	win layoutMorph addMorph: TranscriptMorph new proportionalHeight: 1.	win openInWorld! !PluggableListMorph removeSelector: #borderWidth:!ScrollBar removeSelector: #defaultBorderWidth!