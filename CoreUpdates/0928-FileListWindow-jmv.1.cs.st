'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 18 April 2011 at 3:17:33 pm'!!FileList methodsFor: 'initialization' stamp: 'jmv 4/16/2011 13:33'!updateButtonRow	"Dynamically update the contents of the button row, if any."	| window row |	window _ self dependents 				detect: [:m | (m is: #SystemWindow) and: [ m model == self ]]				ifNone: [^self].	row _ window 		findDeepSubmorphThat: [:m | m hasProperty: #buttonRow]		ifAbsent: [^self].			window updateButtonRow: row! !!FileList class methodsFor: 'instance creation' stamp: 'jmv 4/16/2011 13:39'!openMorphicViewInWorld	"	FileList openMorphicViewInWorld	"	FileListWindow open: (self new directory: FileDirectory default) label: nil! !!SimpleServiceEntry methodsFor: 'performing service' stamp: 'jmv 4/16/2011 13:42'!buttonToTriggerIn: aFileList 	"Answer a button that will trigger the receiver service in a file list"	| aButton |	argumentProvider _ aFileList.	aButton := PluggableButtonMorph 				model: self				stateGetter: nil				action: #performService.	aButton label: self buttonLabel.	aButton color: (Theme current buttonColorFrom:Theme current fileList).	aButton setBalloonText: self description.	^aButton! !!SystemWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:38'!defaultButtonPaneHeight	"Answer the user's preferred default height for new button panes."	^Preferences standardButtonFont height * 14 // 8! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:30'!buildMorphicWindow	| middleRow upperRow |	upperRow _ LayoutMorph newRow.	upperRow		addMorph: self morphicPatternPane proportionalWidth: 0.3;		addAdjusterAndMorph: self optionalButtonRow proportionalWidth: 0.7.	middleRow _ LayoutMorph newRow.	middleRow		addMorph: self morphicDirectoryTreePane proportionalWidth: 0.3;		addAdjusterAndMorph: self morphicFileListPane proportionalWidth: 0.7.	self layoutMorph		addMorph: upperRow fixedHeight: self defaultButtonPaneHeight;		addAdjusterAndMorph: middleRow proportionalHeight: 0.4;		addAdjusterAndMorph: self morphicFileContentsPane proportionalHeight: 0.6.	self setLabel: model directory pathName.	model postOpen! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:28'!morphicDirectoryTreePane	^(SimpleHierarchicalListMorph 		model: model		listGetter: #initialDirectoryList		indexGetter: #currentDirectorySelected		indexSetter: #setSelectedDirectoryTo:		menuGetter: #volumeMenu		keystrokeAction: nil)			autoDeselect: false;			enableDrag: false;			enableDrop: true;			yourself! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:28'!morphicFileContentsPane	^TextModelMorph 		textProvider: model		textGetter: #acceptedContents 		textSetter: #put:		selectionGetter: #contentsSelection! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:28'!morphicFileListPane	^(PluggableListMorph 		model: model 		listGetter: #fileList 		indexGetter: #fileListIndex		indexSetter: #fileListIndex: 		menuGetter: #fileListMenu)			enableDrag: true;			enableDrop: false;			yourself! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:28'!morphicPatternPane	^TextModelMorph 		textProvider: model		textGetter: #pattern 		textSetter: #pattern:! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:31'!optionalButtonRow	"Answer the button row associated with a file list"	| row buttonColor |	row _ LayoutMorph newRow.	buttonColor _ Theme current buttonColorFrom: self windowColor.	row setProperty: #buttonRow toValue: true.  "Used for dynamic retrieval later on"	row color: buttonColor.	self updateButtonRow: row.	^row! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:42'!updateButtonRow: row	"Dynamically update the contents of the button row, if any."	| buttons |	row removeAllMorphs.	buttons _ OrderedCollection new.	model universalButtonServices do: [ :service |		buttons add: (service buttonToTriggerIn: model) ].	model dynamicButtonServices do: [ :service | 		buttons add: (service buttonToTriggerIn: model).		service addDependent: model].	row addMorphs: buttons! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/16/2011 13:31'!windowColor	^ Theme current fileList! !!SystemWindow class methodsFor: 'instance creation' stamp: 'jmv 4/16/2011 13:37'!open: model label: aString	|  window |	window _ self new.	aString ifNotNil: [ window setLabel: aString ].	window		model: model;		buildMorphicWindow;		openInWorld! !CodeWindow class removeSelector: #open:label:!CodeWindow removeSelector: #defaultButtonPaneHeight!FileList class removeSelector: #defaultButtonPaneHeight!FileList class removeSelector: #morphicViewOnDirectory:!FileList class removeSelector: #windowColor!!FileList class reorganize!('instance creation' openMorphicViewInWorld)('class initialization' initialize)('file reader registration' itemsForFile: registerFileReader: registeredFileReaderClasses suffixOf: unregisterFileReader:)!FileList removeSelector: #morphicDirectoryTreePane!FileList removeSelector: #morphicDirectoryTreePaneFiltered:!FileList removeSelector: #morphicFileContentsPane!FileList removeSelector: #morphicFileListPane!FileList removeSelector: #morphicPatternPane!FileList removeSelector: #optionalButtonRow!FileList removeSelector: #updateButtonRow:!!FileList reorganize!('file list' fileList fileListIndex fileListIndex: fileName readOnlyStream)('file list menu' compressFile editorClass fileListMenu fileSelectedMenu fullFileListMenu itemsForAnyFile itemsForFile: itemsForNoFile myServicesForFile:suffix: noFileSelectedMenu offerAllFileOptions)('file menu action' addNew:byEvaluating: addNewDirectory addNewFile deleteFile get getHex renameFile sortByDate sortByName sortBySize)('initialization' buttonSelectorsToSuppress directory: dynamicButtonServices initialDirectoryList initialize labelString modelSleep optionalButtonSpecs universalButtonServices updateButtonRow updateDirectory)('menu messages' copyName)('own services' serviceAddNewDirectory serviceAddNewFile serviceAllFileOptions serviceCompressFile serviceCopyName serviceDeleteFile serviceGet serviceGetHex serviceRenameFile serviceSortByDate serviceSortByName serviceSortBySize serviceViewContentsInWorkspace viewContentsInWorkspace)('to be transformed in registration' volumeMenu)('updating' update:)('volume list and pattern' deleteDirectory directory fileNameFormattedFrom:namePad:sizePad:sizeWithCommasPad: listForPatterns: pattern pattern: veryDeepFixupWith:)('private' acceptedStringOrText currentDirectorySelected defaultContents directoryNamesFor: fileNameFromFormattedItem: folderString fullName postOpen put: readContentsBrief: readContentsHex: registeredFileReaderClasses resort: setSelectedDirectoryTo: sortBlock sortingByDate sortingByName sortingBySize updateFileList)('accessing' brevityState)!