'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 19 November 2010 at 2:27:09 pm'!!ColorTheme methodsFor: 'colors' stamp: 'jmv 11/19/2010 14:06'!background	^ Color r: 0.7 g: 0.72 b: 0.83! !!BluesPalette methodsFor: 'colors' stamp: 'jmv 11/19/2010 13:57'!background	^ Color r: 0.745 g: 0.823 b: 0.94! !!ColorTheme class methodsFor: 'colors' stamp: 'jmv 11/19/2010 13:55'!beCurrent	CurrentPalette := self basicNew initialize.	Preferences		initializeTextHighlightingParameters; 		restoreDefaultMenuParameters.	SHTextStylerST80 initialize.	World color: ColorTheme current background.	ThreePhaseButtonMorph initialize.	SystemWindow initialize.	^ CurrentPalette! !!PasteUpMorph methodsFor: 'drawing' stamp: 'jmv 11/19/2010 14:05'!drawOn: aCanvas	"draw background image."	backgroundImage		ifNotNil: [			"self clipsSubmorphs ifTrue: [				aCanvas clipBy: self clippingBounds					during: [ :canvas | canvas image: backgroundImage multipliedBy: color at: bounds topLeft ]]				ifFalse: [ aCanvas image: backgroundImage multipliedBy: color at: bounds topLeft ]"			self clipsSubmorphs ifTrue: [				aCanvas clipBy: self clippingBounds					during: [ :canvas | canvas paintImage: backgroundImage at: bounds topLeft ]]				ifFalse: [ aCanvas paintImage: backgroundImage at: bounds topLeft ]]		ifNil: [			"draw background fill"			(self isWorldMorph and: [aCanvas form == Display] and: [(color := self fillStyle) class == TranslucentColor])				ifTrue: [					"Special case so a translucent background on the Display allows you to see through the main Squeak Window.					Requires proper handling of translucent Display in the VM.					Seems to work only on Linux when using a composing window manager."					(BitBlt current toForm: Display)						clipRect: aCanvas clipRect;						copy: bounds						from: 0@0 in: nil						fillColor: color rule: Form over]				ifFalse: [ super drawOn: aCanvas ]]! !!PasteUpMorph methodsFor: 'accessing' stamp: 'jmv 11/19/2010 13:56'!color: aColor	super color: aColor.	self backgroundImageData: nil! !!SoftColorTheme methodsFor: 'colors' stamp: 'jmv 11/19/2010 11:32'!windowLabel	^Color gray: 0.3! !!SoftColorTheme methodsFor: 'other options' stamp: 'jmv 11/19/2010 11:31'!embossedTitles	^true! !!SoftColorTheme methodsFor: 'tool colors' stamp: 'jmv 11/19/2010 11:38'!packageBrowser"	^ (Color r: 1.0 g: 1.0 b: 0.6) duller (Color r: 0.8 g: 0.8 b: 0.504)"	^ Color r: 0.68 g: 0.68 b: 0.34! !!SystemWindow methodsFor: 'geometry' stamp: 'jmv 11/17/2010 10:34'!labelRectangleForEmbossed	"Actually the whole label area"	| tl br e x0 y0 x1 y1 |	tl _ bounds topLeft.	br _ bounds bottomRight.	e _ self boxExtent.	x0 _ tl x + ( e x * 4 + 14).	y0 _ tl y + 1.	x1 _ br x - 1.	y1 _ tl y + e y + 2.	^x0@y0 corner: x1@y1			! !!SoftColorTheme reorganize!('colors' windowLabel)('other options' embossedTitles roundWindowCorners useWindowTitleGradient)('tool colors' browser fileList messageSet packageBrowser transcript)!!PasteUpMorph reorganize!('WiW support' shouldGetStepsFrom:)('alarms-scheduler' addAlarm:withArguments:for:at: removeAlarm:for:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('classification' isPlayfieldLike isWorldMorph)('copying' veryDeepCopyWith:)('drawing' drawOn:)('dropping/grabbing' acceptDroppingMorph:event: dropEnabled morphToDropFrom: repelsMorph:event: wantsDroppedMorph:event:)('event handling' handlesMouseDown: morphToGrab: mouseDown: mouseUp: wantsWindowEvent: windowEvent: windowEventHandler)('events-processing' processEvent:using:)('geometry' extent: position:)('initialization' becomeActiveDuring: clearWaitDelay defaultBorderColor defaultBorderWidth defaultColor initialize)('interaction loop' doOneCycleNow)('menu & halo' addCustomMenuItems:hand: addWorldHaloMenuItemsTo:hand: addWorldToggleItemsToHaloMenu: deleteBalloonTarget:)('misc' backgroundImageData: buildMagnifiedBackgroundImage cartesianOrigin unhideHiddenObjects)('printing' printOn:)('project state' canvas firstHand hands handsDo: handsReverseDo: listOfSteppingMorphs stepListSize steppingMorphsNotInWorld viewBox viewBox:)('stepping' cleanseStepList runLocalStepMethods runStepMethods startStepping: startStepping:at:selector:arguments:stepTime: stopStepping: stopStepping:selector:)('stepping and presenter' step)('structure' activeHand world)('submorphs-accessing' allMorphsDo: morphsInFrontOf:overlapping:do:)('submorphs-add/remove' addAllMorphs: addMorphFront:)('testing' stepTime)('world menu' bringWindowsFullOnscreen buildWorldMenu: closeUnchangedWindows collapseAll collapseNonWindows deleteNonWindows expandAll findAChangeSorter: findAFileList: findAMessageNamesWindow: findATranscript: findAWindowSatisfying:orMakeOneUsing: findDirtyBrowsers: findDirtyWindows: findWindow: invokeWorldMenu: openRecentSubmissionsBrowser: putUpDesktopMenu: putUpNewMorphMenu putUpWorldMenu: yellowButtonClickOnDesktopWithEvent:)('world state' addMorph:centeredNear: allNonFlapRelatedSubmorphs assuredCanvas deleteAllHalos displayWorld displayWorldSafely doOneCycle doOneSubCycle dragThroughOnDesktop: flashRects:color: fullRepaintNeeded haloMorphs handleFatalDrawingError: install open privateOuterDisplayWorld restoreDisplay restoreMorphicDisplay sleep startSteppingSubmorphsOf:)('private' privateMoveBy:)('errors on draw' addKnownFailing: isKnownFailing: removeAllKnownFailing removeKnownFailing:)('accessing' color:)!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."SoftColorTheme beCurrent!