'From Cuis 3.0 of 31 January 2011 [latest update: #790] on 16 February 2011 at 6:37:53 pm'!!Object methodsFor: 'error handling' stamp: 'jmv 2/16/2011 18:12'!primitiveFail	"#primitiveFail may be invoked by certain methods whose code is translated in C.	In such a case #primitiveFail and not #primitiveFailed should be invoked.	The reason is that this code is translated to C by VMMaker. #primitiveFail is implemented in Interpreter of VMMaker."	^ self primitiveFailed! !!Object methodsFor: 'translation support' stamp: 'jmv 2/16/2011 18:16'!success: aBoolean	"For translation only; noop when running in Smalltalk."! !!BitBlt methodsFor: 'accessing' stamp: 'jmv 2/16/2011 18:22'!halftoneForm: aBitmap	"Sets the receivers half tone form. See class commment."		halftoneForm _ aBitmap! !!DifferenceFinder methodsFor: 'private' stamp: 'jmv 2/16/2011 18:30'!unfold: aPoint on: pending	| i j mij |	i := aPoint x.	j := aPoint y.	(i = 0 or: [j = 0]) ifTrue: [^self].	mij := map i: i j: j.	mij = D ifTrue: [		pending add: i - 1 @ (j - 1).		^self].	mij = U ifTrue: [		pending add: i - 1 @ j.		^self].	mij = L ifTrue: [		pending add: i @ (j - 1).		^self].	mij = UL ifTrue: [		pending add: i - 1 @ j; add: i @ (j - 1).		^self].	self assert: false! !!DifferenceFinder methodsFor: 'computing' stamp: 'jmv 2/16/2011 18:30'!computeLcsAt: i at: j	| mij cij pair left up |	mij := map i: i j: j.	mij = D ifTrue: [		cij := self lcsAt: i - 1 at: j - 1.		pair := Array with: i with: j.		^cij collect: [:s | s copyWith: pair]].	mij = U ifTrue: [^self lcsAt: i - 1 at: j].	mij = L ifTrue: [^self lcsAt: i at: j - 1].	mij = UL ifTrue: [		left := self lcsAt: i at: j - 1.		up := self lcsAt: i - 1 at: j.		^left copy addAll: up; yourself].	self assert: false! !!PositionableStream methodsFor: 'accessing' stamp: 'jmv 2/16/2011 18:36'!back	"Go back one element and return it."	self position = 0 ifTrue: [ self error: 'CantGoBack' ].	self skip: -1.	^ self peek! !!PositionableStream methodsFor: 'accessing' stamp: 'jmv 2/16/2011 18:36'!oldBack	"Go back one element and return it.  Use indirect messages in case I am a StandardFileStream"	"The method is a misconception about what a stream is. A stream contains a pointer *between* elements with past and future elements. This method considers that the pointer is *on* an element. Please consider unit tests which verifies #back and #oldBack behavior. (Damien Cassou - 1 August 2007)"	self position = 0 ifTrue: [self error: 'CantGoBack'].	self position = 1 ifTrue: [self position: 0.  ^ nil].	self skip: -2.	^ self next! !!ZipArchiveMember methodsFor: 'private' stamp: 'jmv 2/16/2011 18:29'!dosToSqueakTime: dt	"DOS years start at 1980, so add 1980."	| year mon mday hour min sec date time |	year := (( dt bitShift: -25 ) bitAnd: 16r7F ).	mon := (( dt bitShift: -21 ) bitAnd: 16r0F ).	mday := (( dt bitShift: -16 ) bitAnd: 16r1F ).	date := Date newDay: mday month: mon year: year+1980.	hour := (( dt bitShift: -11 ) bitAnd: 16r1F ).	min := (( dt bitShift: -5 ) bitAnd: 16r3F ).	sec := (( dt bitShift: 1 ) bitAnd: 16r3E ).	time := ((( hour * 60 ) + min ) * 60 ) + sec.	^date secondsSinceSqueakEpoch + time	! !Heap removeSelector: #collect:!