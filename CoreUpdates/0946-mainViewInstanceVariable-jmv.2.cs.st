'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 24 April 2011 at 10:40:24 pm'!!classDefinition: #PluggableListMorph category: #'Morphic-Views for Models'!ScrollPane subclass: #PluggableListMorph	instanceVariableNames: 'list getListSelector getListSizeSelector getIndexSelector setIndexSelector keystrokeActionSelector autoDeselect lastKeystrokeTime lastKeystrokes doubleClickSelector handlesBasicKeys potentialDropRow listMorph menuGetter mainView '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!!classDefinition: #SimpleHierarchicalListMorph category: #'Morphic-Views for Models'!ScrollPane subclass: #SimpleHierarchicalListMorph	instanceVariableNames: 'selectedMorph getListSelector keystrokeActionSelector autoDeselect columns sortingSelector getSelectionSelector setSelectionSelector potentialDropMorph lineColor menuGetter mainView '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!!BrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:35'!buildMorphicClassList	| myClassList |	myClassList _ PluggableListMorph		model: model		listGetter: #classList		indexGetter: #classListIndex		indexSetter: #classListIndex:		mainView: self		menuGetter: #classListMenu		keystrokeAction: #classListKey:from:.	myClassList enableDragNDrop: false.	^myClassList! !!BrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:34'!buildMorphicMessageCatList	| myMessageCatList |	myMessageCatList _ PluggableMessageCategoryListMorph		model: model		listGetter: #messageCategoryList		indexGetter: #messageCategoryListIndex		indexSetter: #messageCategoryListIndex:		mainView: self		menuGetter: #messageCategoryMenu		keystrokeAction: #arrowKey:from:		rawListGetter: #rawMessageCategoryList.	myMessageCatList enableDragNDrop: false.	^myMessageCatList! !!BrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:18'!buildMorphicMessageList	"Build a morphic message list, with #messageList as its list-getter"	| aListMorph |	aListMorph _ PluggableListMorph		model: model		listGetter: #messageList		indexGetter: #messageListIndex		indexSetter: #messageListIndex:		mainView: self		menuGetter: #messageListMenu		keystrokeAction: #messageListKey:from:.	aListMorph enableDragNDrop: false.	^aListMorph! !!BrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:35'!buildMorphicSystemCatList	| dragNDropFlag myCatList |	dragNDropFlag _ false.	myCatList _ PluggableListMorph		model: model		listGetter: #systemCategoryList		indexGetter: #systemCategoryListIndex		indexSetter: #systemCategoryListIndex:		mainView: self		menuGetter: #systemCategoryMenu		keystrokeAction: #systemCatListKey:from:.	myCatList enableDragNDrop: dragNDropFlag.	^myCatList! !!BrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:19'!buildNoSysCatMorphicWindow	"A Browser without the class categories list"	| mySingletonList upperPanes |	mySingletonList _ PluggableListMorph 				model: model				listGetter: #systemCategorySingleton				indexGetter: #indexIsOne				indexSetter: #indexIsOne:				mainView: self				menuGetter: #systemCatSingletonMenu				keystrokeAction: #systemCatSingletonKey:from:.	mySingletonList enableDragNDrop: false.	mySingletonList hideScrollBarsIndefinitely.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicClassColumn proportionalWidth: 0.3;		addAdjusterAndMorph: self buildMorphicMessageCatList proportionalWidth: 0.3;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.4.	self layoutMorph		addMorph: mySingletonList fixedHeight: Preferences standardCodeFont height + 10;		addAdjusterAndMorph: upperPanes proportionalHeight: 0.3;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.7.	self setUpdatablePanesFrom: #(classList messageCategoryList messageList).	model changed: #editSelection! !!ChangeListWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:32'!buildMorphicWindow	"Open a morphic view for the messageSet, whose label is labelString. 	The listView may be either single or multiple selection type"	| listPane |	listPane _ PluggableListMorphOfMany		model: model		listGetter: #list		primarySelectionGetter: #listIndex		primarySelectionSetter: #toggleListIndex:		listSelectionGetter: #listSelectionAt:		listSelectionSetter: #listSelectionAt:put:		mainView: self		menuGetter: #listMenu		keystrokeAction: #changeListKey:from:.		self layoutMorph		addMorph: listPane proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6! !!ChangeSorterWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:21'!buildMorphicWindow	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0."	| list1 list2 list3 upperPanes |	model myChangeSet ifNil: [ model myChangeSet: ChangeSet current ].	list1 _ (PluggableListMorphByItem 				model: model				listGetter: #changeSetList				indexGetter: #currentCngSet				indexSetter: #showChangeSetNamed:				mainView: self				menuGetter: #changeSetMenu				keystrokeAction: #changeSetListKey:from:)			autoDeselect: false.	list2 _ PluggableListMorphByItem 				model: model				listGetter: #classList				indexGetter: #currentClassName				indexSetter: #currentClassName:				mainView: self				menuGetter: #classListMenu				keystrokeAction: #classListKey:from:.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: list1 proportionalWidth: 0.5;		addAdjusterAndMorph: list2 proportionalWidth: 0.5.	list3 _ PluggableListMorphByItem 				model: model				listGetter: #messageList				indexGetter: #currentSelector				indexSetter: #currentSelector:				mainView: self				menuGetter: #messageMenu				keystrokeAction: #messageListKey:from:.	self layoutMorph		addMorph: upperPanes proportionalHeight: 0.25;		addAdjusterAndMorph: list3 proportionalHeight: 0.25;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.5.	self setLabel: model labelString! !!DebuggerWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:36'!buildMorphicWindow	"Open a full morphic debugger with the given label"	| upperMorph bottomMorph1 bottomMorph2 bottomMorph3 bottomMorph4 bottomMorph |	upperMorph _ PluggableListMorph		model: model 		listGetter: #contextStackList		indexGetter: #contextStackIndex		indexSetter: #toggleContextStackIndex:		mainView: self		menuGetter: #contextStackMenu		keystrokeAction: #contextStackKey:from:.	(bottomMorph1 _ PluggableListMorph			model: model receiverInspector			listGetter: #fieldList			indexGetter: #selectionIndex 			indexSetter: #toggleIndex:			mainView: self			menuGetter: #receiverFieldListMenu			keystrokeAction: #inspectorKey:from:)			doubleClickSelector: #inspectSelection.	bottomMorph2 _ TextModelMorph 			textProvider: model receiverInspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	(bottomMorph3 _ PluggableListMorph			model: model contextVariablesInspector 			listGetter: #fieldList			indexGetter: #selectionIndex 			indexSetter: #toggleIndex:			mainView: self			menuGetter: #contextFieldListMenu			keystrokeAction: #inspectorKey:from:)			doubleClickSelector: #inspectSelection.	bottomMorph4 _ TextModelMorph 			textProvider: model contextVariablesInspector			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	bottomMorph _ LayoutMorph newRow.	bottomMorph		addMorph: bottomMorph1 proportionalWidth: 0.2;		addAdjusterAndMorph: bottomMorph2 proportionalWidth: 0.3;		addAdjusterAndMorph: bottomMorph3 proportionalWidth: 0.2;		addAdjusterAndMorph: bottomMorph4 proportionalWidth: 0.3.	self layoutMorph		addMorph: upperMorph proportionalHeight: 0.25;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.55;		addAdjusterAndMorph: bottomMorph proportionalHeight: 0.2! !!DebuggerWindow class methodsFor: 'Notifier window' stamp: 'jmv 4/24/2011 22:19'!openMorphicNotifierLabelled: label message: messageString debugger: aDebugger	| notifyPane window extentToUse |	aDebugger expandStack.	messageString		ifNil: [			notifyPane _ PluggableListMorph				model: aDebugger				listGetter: #contextStackList				indexGetter: #contextStackIndex				indexSetter: #debugAt:				mainView: nil				menuGetter: nil				keystrokeAction: nil ]		ifNotNil: [			notifyPane _ TextModelMorph withText: messageString.			notifyPane askBeforeDiscardingEdits: false ].	window _ SystemWindow new model: aDebugger.	window layoutMorph		addMorph: (self buttonRowForPreDebugWindow: aDebugger) proportionalHeight: 0.2;		addAdjusterAndMorph: notifyPane proportionalHeight: 0.8.	window setLabel: label.	window widgetsColor: Theme current debugger.	extentToUse _ 650 @ 320.	"nice and wide to show plenty of the error msg"	^ window openInWorldExtent: extentToUse.! !!DualChangeSorterWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:22'!buildMorphicUIIn: aLayoutMorph for: aChangeSorter	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0.""Aca hay cosas que deben ir a la mitad correcta... Y no quiero duplicar con la otra ventana....pensar"	| list1 list2 list3 upperPanes realModel |	list1 _ (PluggableListMorphByItem 				model: aChangeSorter				listGetter: #changeSetList				indexGetter: #currentCngSet				indexSetter: #showChangeSetNamed:				mainView: self				menuGetter: (MessageSend receiver: self selector: #changeSetMenuFor: argument: aChangeSorter)				keystrokeAction: #changeSetListKey:from:)			autoDeselect: false.	list2 _ PluggableListMorphByItem 				model: aChangeSorter				listGetter: #classList				indexGetter: #currentClassName				indexSetter: #currentClassName:				mainView: self				menuGetter: (MessageSend receiver: self selector: #classListMenuFor: argument: aChangeSorter)				keystrokeAction: #classListKey:from:.	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: list1 proportionalWidth: 0.5;		addAdjusterAndMorph: list2 proportionalWidth: 0.5.	list3 _ PluggableListMorphByItem 				model: aChangeSorter				listGetter: #messageList				indexGetter: #currentSelector				indexSetter: #currentSelector:				mainView: self				menuGetter: (MessageSend receiver: self selector: #messageMenuFor: argument: aChangeSorter)				keystrokeAction: #messageListKey:from:.	aLayoutMorph addMorph: upperPanes proportionalHeight: 0.25.	aLayoutMorph addAdjusterAndMorph: list3 proportionalHeight: 0.25.	"set aChangeSorter as the model during #buildLowerPanes, as the inherited methods assume a simple model that is a CodeProvider."	realModel _ model.	model _ aChangeSorter.	aLayoutMorph addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.5.	model _ realModel! !!FileContentsBrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:24'!buildMorphicWindow	"Create a pluggable version of all the views for a Browser, including views and controllers."	| list1 list2 upperPanes |	model systemCategoryListIndex: 1.	list1 _ PluggableListMorph 			model: model 			listGetter: #systemCategorySingleton			indexGetter: #indexIsOne 			indexSetter: #indexIsOne:			mainView: self			menuGetter: #packageListMenu			keystrokeAction: #packageListKey:from:.	list1 hideScrollBarsIndefinitely.		list2 _ PluggableListMorph 			model: model 			listGetter: #messageCategoryList			indexGetter: #messageCategoryListIndex 			indexSetter: #messageCategoryListIndex:			mainView: self			menuGetter: #messageCategoryMenu			keystrokeAction: #arrowKey:from:.		"default"	upperPanes _ LayoutMorph newRow.	upperPanes		addMorph: self buildMorphicClassColumn proportionalWidth: 0.3;		addAdjusterAndMorph: list2 proportionalWidth: 0.3;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.4.	self layoutMorph		addMorph: list1 fixedHeight: Preferences standardCodeFont height + 10;		addAdjusterAndMorph: upperPanes proportionalHeight: 0.3;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.7.	model changed: #editSelection! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:20'!morphicDirectoryTreePane	^(SimpleHierarchicalListMorph 		model: model		listGetter: #initialDirectoryList		indexGetter: #currentDirectorySelected		indexSetter: #setSelectedDirectoryTo:		mainView: self		menuGetter: #volumeMenu		keystrokeAction: nil)			autoDeselect: false;			enableDrag: false;			enableDrop: true;			yourself! !!FileListWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:25'!morphicFileListPane	^(PluggableListMorph 		model: model 		listGetter: #fileList 		indexGetter: #fileListIndex		indexSetter: #fileListIndex: 		mainView: self		menuGetter: #fileListMenu		keystrokeAction: #arrowKey:from:)		"default"			enableDrag: true;			enableDrop: false;			yourself! !!InspectorWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:38'!buildMorphicWindow	" Inspector openAsMorphOn: SystemOrganization "	| contentsText list upperRow evaluatorText |	self flag: #ojo.	"buscar doubleClickSelector: #, porque esto es lo que me abre inspectors locos al double click trucho (no intencional)"	(list _ PluggableListMorph			model: model 			listGetter: #fieldList			indexGetter: #selectionIndex			indexSetter: #toggleIndex:			mainView: self			menuGetter: #fieldListMenu			keystrokeAction: #inspectorKey:from:)			doubleClickSelector: #inspectSelection.	contentsText _ TextModelMorph			textProvider: model			textGetter: #acceptedContents 			textSetter: #accept:			selectionGetter: #contentsSelection.	evaluatorText _ (TextModelMorph textProvider: model)			askBeforeDiscardingEdits: false.	upperRow _ LayoutMorph newRow.	upperRow		addMorph: list proportionalWidth: 0.3;		addAdjusterAndMorph: contentsText proportionalWidth: 0.7.	self layoutMorph		addMorph: upperRow proportionalHeight: 0.7;		addAdjusterAndMorph: evaluatorText proportionalHeight: 0.3.	self setLabel: model object defaultLabelForInspector.	self setUpdatablePanesFrom: #(fieldList)! !!MessageNamesWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:22'!buildMorphicWindow	"Answer a morphic window with the given initial search string, nil if none""MessageNames openMessageNames"	| selectorListView firstRow searchButton textMorph secondRow |	textMorph _ TextModelMorph 		textProvider: model		textGetter: #searchString 		textSetter: #searchString:.	textMorph setProperty: #alwaysAccept toValue: true.	textMorph askBeforeDiscardingEdits: false.	textMorph acceptOnCR: true.	textMorph setTextColor: Color brown.	textMorph hideScrollBarsIndefinitely.	textMorph textMorph		on: #mouseEnter send: #selectAll to: textMorph textMorph.	searchButton _ PluggableButtonMorph new 		model: textMorph;		label: 'Search';		action: #accept.	searchButton setBalloonText: 'Type some letters into the pane at right, and then press this Search button (or hit RETURN) and all method selectors that match what you typed will appear in the list pane below.  Click on any one of them, and all the implementors of that selector will be shown in the right-hand pane, and you can view and edit their code without leaving this tool.'.	firstRow _ LayoutMorph newRow.	firstRow		addMorph: searchButton proportionalWidth: 0.25;		addMorph: textMorph proportionalWidth: 0.75.	selectorListView _ PluggableListMorph 		model: model		listGetter: #selectorList		indexGetter: #selectorListIndex		indexSetter: #selectorListIndex:		mainView: self		menuGetter: #selectorListMenu		keystrokeAction: #selectorListKey:from:.	secondRow _  LayoutMorph newRow.	secondRow		addMorph: selectorListView proportionalWidth: 0.5;		addAdjusterAndMorph: self buildMorphicMessageList proportionalWidth: 0.5.	self layoutMorph		addMorph: firstRow fixedHeight: self defaultButtonPaneHeight+4;		addAdjusterAndMorph: secondRow proportionalHeight: 0.5;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.5.	model changed: #editSelection! !!ObjectExplorerWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:22'!buildMorphicWindow	| listMorph textMorph |	.listMorph _ SimpleHierarchicalListMorph 			model: model			listGetter: #getList			indexGetter: #getCurrentSelection			indexSetter: #noteNewSelection:			mainView: self			menuGetter: #genericMenu			keystrokeAction: #explorerKey:from:.	listMorph autoDeselect: false.	textMorph _ (TextModelMorph textProvider: model)			askBeforeDiscardingEdits: false.	self layoutMorph		addMorph: listMorph proportionalHeight: 0.8;		addAdjusterAndMorph: textMorph proportionalHeight: 0.2.	self setLabel: (model rootObject printStringLimitedTo: 64)! !!PluggableListMorph methodsFor: 'initialization' stamp: 'jmv 4/24/2011 22:17'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel	self model: anObject.	getListSelector _ getListSel.	getIndexSelector _ getSelectionSel.	setIndexSelector _ setSelectionSel.	mainView _ aMainView.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	self		updateList;		selectionIndex: self getCurrentSelectionIndex;		initForKeystrokes! !!PluggableListMorph methodsFor: 'menu' stamp: 'jmv 4/24/2011 22:32'!getMenu	"Answer the menu for this view"	menuGetter ifNil: [^ nil].	(menuGetter is: #MessageSend) ifTrue: [		^menuGetter value ].	menuGetter numArgs = 0 ifTrue: [		^ mainView perform: menuGetter ].	^ self error: 'The menuGetter has an unsupported number of arguments'! !!PluggableListMorph methodsFor: 'model access' stamp: 'jmv 4/24/2011 22:39'!modifierKeyPressed: aChar 	| args |	keystrokeActionSelector ifNil: [^nil].	args _ keystrokeActionSelector numArgs.	args = 1 ifTrue: [^mainView perform: keystrokeActionSelector with: aChar].	args = 2 		ifTrue: [			^mainView 				perform: keystrokeActionSelector				with: aChar				with: self].	^self error: 'keystrokeActionSelector must be a 1- or 2-keyword symbol'! !!PluggableListMorph class methodsFor: 'instance creation' stamp: 'jmv 4/24/2011 22:17'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel	"Create a 'pluggable' list view on the given model parameterized by the given message selectors."	^ self new		model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel! !!PluggableListMorphOfMany methodsFor: 'initialization' stamp: 'jmv 4/24/2011 22:29'!model: anObject listGetter: listSel primarySelectionGetter: getSelectionSel primarySelectionSetter: setSelectionSel listSelectionGetter: getListSel listSelectionSetter: setListSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel	"setup a whole load of pluggability options"	getSelectionListSelector _ getListSel.	setSelectionListSelector _ setListSel.	self 		model: anObject		listGetter: listSel		indexGetter: getSelectionSel		indexSetter: setSelectionSel		mainView: aMainView		menuGetter: getMenuSel		keystrokeAction: keyActionSel! !!PluggableMessageCategoryListMorph methodsFor: 'as yet unclassified' stamp: 'jmv 4/24/2011 22:33'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel rawListGetter: getRawSel	self model: anObject.	getListSelector _ getListSel.	getIndexSelector _ getSelectionSel.	setIndexSelector _ setSelectionSel.	mainView _ aMainView.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	getRawListSelector _ getRawSel.	self updateList.	self selectionIndex: self getCurrentSelectionIndex.	self initForKeystrokes! !!PluggableMessageCategoryListMorph class methodsFor: 'as yet unclassified' stamp: 'jmv 4/24/2011 22:34'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel rawListGetter: getRawSel	^ self new model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel rawListGetter: getRawSel! !!ProcessBrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:22'!buildMorphicWindow	"Create a pluggable version of me, answer a window"	| aTextMorph list1 list2 upperRow |	list1 _ (PluggableListMorph				model: model				listGetter: #processNameList				indexGetter: #processListIndex				indexSetter: #processListIndex:			mainView: self			menuGetter: #processListMenu				keystrokeAction: #processListKey:from:)			enableDragNDrop: false.	list2 _ (PluggableListMorph				model: model				listGetter: #stackNameList				indexGetter: #stackListIndex				indexSetter: #stackListIndex:				mainView: self				menuGetter: #stackListMenu				keystrokeAction: #stackListKey:from:)			enableDragNDrop: false.	upperRow _ LayoutMorph newRow.	upperRow		addMorph: list1 proportionalWidth: 0.5;		addAdjusterAndMorph: list2 proportionalWidth: 0.5.	aTextMorph _ TextModelMorph				textProvider: model				textGetter: #selectedMethod.	aTextMorph askBeforeDiscardingEdits: false.	self layoutMorph		addMorph: upperRow proportionalHeight: 0.5;		addAdjusterAndMorph: aTextMorph proportionalHeight: 0.5.	self setUpdatablePanesFrom: #(#processNameList #stackNameList ).	self setLabel: 'Process Browser'.	model startedCPUWatcher ifTrue: [ self setUpdateCallbackAfter: 7 ]! !!SimpleHierarchicalListMorph methodsFor: 'event handling' stamp: 'jmv 4/24/2011 22:40'!keyStroke: event 	"Process potential command keys"	| args aCharacter |	(self focusKeyboardFor: event)		ifTrue: [ ^ self ].	(self scrollByKeyboard: event)		ifTrue: [ ^self ].	aCharacter _ event keyCharacter.	keystrokeActionSelector ifNil: [^self arrowKey: aCharacter].	(args _ keystrokeActionSelector numArgs) = 1 		ifTrue: [^mainView perform: keystrokeActionSelector with: aCharacter].	args = 2 		ifTrue: [			^mainView 				perform: keystrokeActionSelector				with: aCharacter				with: self].	^self 		error: 'The keystrokeActionSelector must be a 1- or 2-keyword symbol'! !!SimpleHierarchicalListMorph methodsFor: 'initialization' stamp: 'jmv 4/24/2011 22:18'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel	self model: anObject.	getListSelector _ getListSel.	getSelectionSelector _ getSelectionSel.	setSelectionSelector _ setSelectionSel.	mainView _ aMainView.	menuGetter _ getMenuSel.	keystrokeActionSelector _ keyActionSel.	autoDeselect _ true.	self list: self getList.! !!SimpleHierarchicalListMorph methodsFor: 'menu' stamp: 'jmv 4/24/2011 22:31'!getMenu	"Answer the menu for this view"	menuGetter ifNil: [^ nil].	(menuGetter is: #MessageSend) ifTrue: [		^menuGetter value ].	menuGetter numArgs = 0 ifTrue: [		^ mainView perform: menuGetter ].	^ self error: 'The menuGetter has an unsupported number of arguments'! !!SimpleHierarchicalListMorph class methodsFor: 'instance creation' stamp: 'jmv 4/24/2011 22:17'!model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel	"Create a 'pluggable' list view on the given model parameterized by the given message selectors."	^ self new		model: anObject listGetter: getListSel indexGetter: getSelectionSel indexSetter: setSelectionSel mainView: aMainView menuGetter: getMenuSel keystrokeAction: keyActionSel! !!TestRunnerWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:26'!buildErrorsList	^ PluggableListMorph		model: model		listGetter: #errorsList		indexGetter: #selectedErrorTest		indexSetter: #debugErrorTest:		mainView: self		menuGetter: nil		keystrokeAction: #arrowKey:from:		"default"! !!TestRunnerWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:26'!buildFailuresList	^ PluggableListMorph		model: model		listGetter: #failuresList		indexGetter: #selectedFailureTest		indexSetter: #debugFailureTest:		mainView: self		menuGetter: nil		keystrokeAction: #arrowKey:from:		"default"! !!TestRunnerWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:30'!buildUpperControls	| refreshButton filterButton stopButton runOneButton runButton row column1 column2 column3 theTestsList |	refreshButton _ self buildRefreshButton.	filterButton _ self buildFilterButton.	stopButton _ self buildStopButton.	column1 _ LayoutMorph newColumn.	column1 addMorphs: { refreshButton . filterButton . stopButton }.	theTestsList _ PluggableListMorphOfMany				model: model				listGetter: #tests				primarySelectionGetter: #selectedSuite				primarySelectionSetter: #selectedSuite:				listSelectionGetter: #listSelectionAt:				listSelectionSetter: #listSelectionAt:put:				mainView: self				menuGetter: #listMenu				keystrokeAction: #arrowKey:from:.		"default"	theTestsList autoDeselect: false.	theTestsList color: Color veryVeryLightGray.	column2 _ LayoutMorph newColumn.	column2		addMorph: theTestsList proportionalHeight: 1;		addMorph: self optionalButtonRow fixedHeight: self defaultButtonPaneHeight.	runOneButton _ self buildRunOneButton.	runButton _ self buildRunButton.		column3 _ LayoutMorph newColumn.	column3 addMorphs: { runOneButton . runButton }.		row _ LayoutMorph newRow.	row		addMorph: column1 fixedWidth: 80;		addMorph: column2 proportionalWidth: 1;		addMorph: column3 fixedWidth: 120.	^row! !!VersionsBrowserWindow methodsFor: 'GUI building' stamp: 'jmv 4/24/2011 22:32'!buildMorphicWindow	"Open a morphic view for the messageSet, whose label is labelString. 	The listView may be either single or multiple selection type"	| listPane |	listPane _ PluggableListMorph		model: model		listGetter: #list		indexGetter: #listIndex		indexSetter: #toggleListIndex:		mainView: self		menuGetter: #listMenu		keystrokeAction: #changeListKey:from:.		self layoutMorph		addMorph: listPane proportionalHeight: 0.4;		addAdjusterAndMorph: self buildLowerPanes proportionalHeight: 0.6! !SimpleHierarchicalListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:!SimpleHierarchicalListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:!SimpleHierarchicalListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:!SimpleHierarchicalListMorph removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:!!classDefinition: #SimpleHierarchicalListMorph category: #'Morphic-Views for Models'!ScrollPane subclass: #SimpleHierarchicalListMorph	instanceVariableNames: 'selectedMorph getListSelector keystrokeActionSelector autoDeselect columns sortingSelector getSelectionSelector setSelectionSelector potentialDropMorph lineColor menuGetter mainView'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!PluggableMessageCategoryListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:rawListGetter:!PluggableMessageCategoryListMorph removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:rawListGetter:!PluggableListMorphOfMany class removeSelector: #model:listGetter:primarySelectionGetter:primarySelectionSetter:listSelectionGetter:listSelectionSetter:menuGetter:!PluggableListMorphOfMany class removeSelector: #model:listGetter:primarySelectionGetter:primarySelectionSetter:listSelectionGetter:listSelectionSetter:menuGetter:keystrokeAction:!PluggableListMorphOfMany removeSelector: #model:listGetter:primarySelectionGetter:primarySelectionSetter:listSelectionGetter:listSelectionSetter:menuGetter:keystrokeAction:!PluggableListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:!PluggableListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:!PluggableListMorph class removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:!PluggableListMorph removeSelector: #keystrokeActionSelector:!PluggableListMorph removeSelector: #model:listGetter:indexGetter:indexSetter:menuGetter:keystrokeAction:!!classDefinition: #PluggableListMorph category: #'Morphic-Views for Models'!ScrollPane subclass: #PluggableListMorph	instanceVariableNames: 'list getListSelector getListSizeSelector getIndexSelector setIndexSelector keystrokeActionSelector autoDeselect lastKeystrokeTime lastKeystrokes doubleClickSelector handlesBasicKeys potentialDropRow listMorph menuGetter mainView'	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Views for Models'!