'From Cuis 3.2 of 12 April 2011 [latest update: #914] on 14 April 2011 at 9:44:12 am'!!Morph reorganize!('accessing' adoptWidgetsColor: balloonText beSticky borderWidth color color: doesBevels eventHandler eventHandler: highlight highlightColor isLocked isSticky lock lock: raisedColor resistsRemoval sticky: toggleResistsRemoval toggleStickiness unlock unlockContents)('accessing - extension' assureExtension hasExtension initializeExtension privateExtension: resetExtension)('accessing - properties' hasProperty: removeProperty: setProperty:toValue: valueOfProperty: valueOfProperty:ifAbsent: valueOfProperty:ifAbsentPut: valueOfProperty:ifPresentDo:)('as yet unclassified' rotationDegrees:)('caching' fullReleaseCachedState releaseCachedState)('change reporting' addedMorph: invalidRect: invalidRect:from: privateInvalidateMorph:)('classification' isPlayfieldLike isWorldMorph)('copying' copy copyForClipboard deepCopy duplicate veryDeepCopyWith: veryDeepFixupWith: veryDeepInner:)('creation' asMorph)('debug and other' addDebuggingItemsTo:hand: altSpecialCursor0 altSpecialCursor1 altSpecialCursor2 altSpecialCursor3 altSpecialCursor3: buildDebugMenu: inspectOwnerChain ownerChain resumeAfterDrawError resumeAfterStepError)('drawing' addPossiblyUncoveredAreasIn:to: changeClipSubmorphs clipSubmorphs: clippingBounds clipsSubmorphs drawDropHighlightOn: drawErrorOn: drawMouseDownHighlightOn: drawOn: drawSubmorphsOn: drawingFails drawingFailsNot fullDrawOn: hasClipSubmorphsString hide highlightForMouseDown highlightForMouseDown: highlightedForMouseDown imageForm imageForm: imageForm:forRectangle: isKnownFailing ownShadowForm refreshWorld shadowForm show visible visible:)('dropping/grabbing' aboutToBeGrabbedBy: dragEnabled dragEnabled: dragNDropEnabled dropEnabled dropEnabled: dropHighlightColor enableDrag: enableDragNDrop enableDragNDrop: enableDrop: formerOwner formerOwner: formerPosition formerPosition: highlightForDrop highlightForDrop: highlightedForDrop justDroppedInto:event: justGrabbedFrom: rejectDropMorphEvent: repelsMorph:event: resetHighlightForDrop separateDragAndDrop slideBackToFormerSituation: startDrag:with: vanishAfterSlidingTo:event: wantsDroppedMorph:event: wantsToBeDroppedInto:)('e-toy support' embeddedInMorphicWindowLabeled: unlockOneSubpart wantsRecolorHandle)('event handling' click click: cursorPoint doubleClick: doubleClickTimeout: handleMouseDown: handlesKeyboard handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: handlesMouseStillDown: keyDown: keyStroke: keyUp: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseStillDown: mouseStillDownStepRate mouseStillDownThreshold mouseUp: on:send:to: on:send:to:withValue: startDrag: windowEvent:)('events-accessing' actionMap updateableActionMap)('events-alarms' addAlarm:after: addAlarm:at: addAlarm:with:after: addAlarm:with:at: addAlarm:with:with:after: addAlarm:with:with:at: addAlarm:withArguments:after: addAlarm:withArguments:at: alarmScheduler removeAlarm:)('events-processing' containsPoint:event: defaultEventDispatcher focusKeyboardFor: handleDropMorph: handleEvent: handleFocusEvent: handleKeyDown: handleKeyUp: handleKeystroke: handleListenEvent: handleMouseEnter: handleMouseLeave: handleMouseMove: handleMouseOver: handleMouseStillDown: handleMouseUp: handleUnknownEvent: handleWindowEvent: handlerForMouseDown: mouseDownPriority processEvent: processEvent:using: rejectDropEvent: rejectsEvent:)('events-removing' releaseActionMap)('fileIn/out' prepareToBeSaved storeDataOn:)('focus handling' hasKeyboardFocus keyboardFocusChange:)('geometry' align:with: basicExtent: bottom bottom: bottomCenter bottomLeft bottomLeft: bottomRight bottomRight: bounds bounds: bounds:in: center center: displayBounds extent extent: externalizePosition:to: externalizePositionFromOwner:to: externalizePositionToWorld: externalizeScalar:to: externalizeVector:to: fullDisplayBounds height height: innerBounds internalizePosition:from: internalizePositionFromWorld: internalizePositionToOwner:from: internalizeScalar:from: internalizeVector:from: left left: leftCenter minimumExtent moveRight: position position: positionInWorld right right: rightCenter setConstrainedPosition:hangOut: top top: topCenter topLeft topLeft: topRight topRight: width width: worldBoundsForHalo)('geometry eToy' referencePosition referencePosition:)('geometry testing' containsPoint: fullContainsPoint: isOrthoRectangularMorph)('halos and balloon help' addHalo addHalo: addHalo:from: addHandlesTo:box: addOptionalHandlesTo:box: addWorldHandlesTo:box: balloonColor balloonFont balloonHelpAligner balloonHelpDelayTime balloonHelpTextForHandle: comeToFrontAndAddHalo defaultBalloonColor defaultBalloonFont deleteBalloon editBalloonHelpContent: editBalloonHelpText halo haloClass mouseDownOnHelpHandle: noHelpString okayToBrownDragEasily okayToResizeEasily okayToRotateEasily removeHalo setBalloonText: setBalloonText:maxLineLength: showBalloon: showBalloon:hand: transferHalo:from: wantsBalloon wantsHaloFromClick wantsHaloHandleWithSelector:inHalo:)('initialization' defaultBounds inATwoWayScrollPane initialize intoWorld: openCenteredInWorld openInHand openInWorld openInWorld:)('iteration of all morphs' nextMorph nextMorphPart2 previousMorph)('layout' acceptDroppingMorph:event: computeFullBounds doLayoutIfNeeded fullBounds layoutAndComputeFullBounds layoutBounds layoutChanged submorphBounds)('layout-properties' layoutSpec layoutSpec:)('macpal' flash)('menus' addAddHandMenuItemsForHalo:hand: addColorMenuItems:hand: addCopyItemsTo: addCustomHaloMenuItems:hand: addCustomMenuItems:hand: addExportMenuItems:hand: addHaloActionsTo: addStandardHaloMenuItemsTo:hand: addTitleForHaloMenu: addToggleItemsToHaloMenu: changeColor changeDragAndDrop collapse exportAsBMP exportAsJPEG exportAsPNG hasDragAndDropEnabledString inspectInMorphic: lockUnlockMorph lockedString maybeAddCollapseItemTo: resistsRemovalString stickinessString)('meta-actions' addEmbeddingMenuItemsTo:hand: buildHandleMenu: changeColorTarget:selector:originalColor:hand: copyToPasteBuffer: dismissMorph: duplicateMorph: grabMorph: handlerForMetaMenu: handlerForMouseButton3Down: maybeDuplicateMorph mouseButton3Down: mouseButton3Up: potentialEmbeddingTargets resizeFromMenu resizeMorph:)('miscellaneous' setExtentFromHalo:)('naming' nameForFindWindowFeature)('objects from disk' objectForDataStream:)('player' okayToDuplicate)('printing' printOn:)('property extension' extension)('rotate scale and flex' rotationDegrees)('stepping' wantsSteps)('stepping and presenter' arrangeToStartStepping arrangeToStartSteppingIn: shouldGetStepsFrom: start startStepping startStepping:at:arguments:stepTime: startSteppingSelector: step stepAt: stopStepping stopSteppingSelector:)('structure' activeHand allOwners allOwnersDo: firstOwnerSuchThat: hasOwner: isInWorld nearestOwnerThat: outermostWorldMorph owner ownerThatIsA: pasteUpMorph primaryHand root veryLastLeave withAllOwnersDo: world)('submorphs-accessing' allMorphs allMorphsDo: findA: findDeepSubmorphThat:ifAbsent: findSubmorphBinary: firstSubmorph hasSubmorphs lastSubmorph morphsAt: morphsAt:behind:unlocked: morphsAt:unlocked: morphsAt:unlocked:do: noteNewOwner: submorphBehind: submorphCount submorphInFrontOf: submorphThat:ifNone: submorphs submorphsBehind:do: submorphsDo: submorphsInFrontOf:do: submorphsReverseDo: submorphsSatisfying:)('submorphs-add/remove' addAllMorphs: addAllMorphs:after: addMorph: addMorph:behind: addMorph:inFrontOf: addMorphBack: addMorphCentered: addMorphFront: addMorphFront:fromWorldPosition: addMorphFrontFromWorldPosition: comeToFront delete dismissViaHalo goBehind privateDelete removeAllMorphs removeAllMorphsIn: removeMorph: removedMorph: replaceSubmorph:by:)('submorphs-add/remove-layers' addMorphInFrontOfLayer: addMorphInLayer: morphicLayerNumber morphicLayerNumberWithin:)('testing' hasModel is: isOpaqueMorph isReallyVisible shouldDropOnMouseUp stepTime)('updating' redrawNeeded update:)('user interface' activateWindow activateWindowAndSendTopToBack: defaultLabelForInspector initialExtent)('visual properties' defaultColor)('private' privateAddAllMorphs:atIndex: privateAddMorph:atIndex: privateBounds: privateColor: privateFullMoveBy: privateMoveBy: privateOwner: privateRemove:)!