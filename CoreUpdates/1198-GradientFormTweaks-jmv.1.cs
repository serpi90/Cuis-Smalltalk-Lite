'From Cuis 4.0 of 16 November 2011 [latest update: #1144] on 5 January 2012 at 10:41:15 am'!!Form class methodsFor: 'creation - anti aliased' stamp: 'jmv 1/4/2012 23:42'!                   bottomLeftCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	"Create and answer a Form for the bottomLeft corner of a rounded rectangle"	| f bw topColor bottomColor l d c w dy |	topColor _ Color white * gradientTopFactor.	bottomColor _ Color white * gradientBottomFactor.	w _ r.	bw _ 1.3.	f _ Form		extent: w @ height		depth: 32.	0		to: height - 1		do: [ :y |			c _ bottomColor				mixed: 1.0 * y / (height - 1)				with: topColor.			0				to: w - 1				do: [ :x |					dy _ height - r - y.					dy > 0						ifTrue: [ l _ 1.0 ]						ifFalse: [							d _ (w - 1 - x @ dy) r.							l _ ((r - d max: 0.0) min: bw) / bw ].					f						colorAt: x @ y						put: (c alpha: l) ]].	^ f! !!Form class methodsFor: 'creation - anti aliased' stamp: 'jmv 1/4/2012 23:47'!         bottomRightCorner: r height: height gradientTop: gradientTopFactor gradientBottom: gradientBottomFactor	"Create and answer a Form for the bottomRight corner of a rounded rectangle"	| f bw topColor bottomColor l d c w dy |	topColor _ Color white * gradientTopFactor.	bottomColor _ Color white * gradientBottomFactor.	w _ r.	bw _ 1.3.	f _ Form		extent: w @ height		depth: 32.	0		to: height - 1		do: [ :y |			c _ bottomColor				mixed: 1.0 * y / (height - 1)				with: topColor.			0				to: w - 1				do: [ :x |					dy _ height - r - y.					dy > 0						ifTrue: [ l _ 1.0 ]						ifFalse: [							d _ (x @ dy) r.							l _ ((r - d max: 0.0) min: bw) / bw ].					f						colorAt: x @ y						put: (c alpha: l) ]].	^ f! !!FormCanvas methodsFor: 'drawing-roundedRectangles' stamp: 'jmv 1/4/2012 23:45'!            roundRect: aRectangle color: aColor radius: r gradientTop: topFactor gradientBottom: bottomFactor gradientHeight: h	"	Display restore.	FormCanvas clearFormsCache. 	Display getCanvas roundRect: (10@10 extent: 200@100) color: Color red radius: 10 gradientTop: 1.0 gradientBottom: 0.5 gradientHeight: 35	"	| bottomColor |	"top stripe"	self		image: (FormCanvas topLeftCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topLeft.	self		image: (FormCanvas topRightCorner: r height: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topRight - (r@0).	self		fillRectangle: ((aRectangle withHeight: h) insetBy: r@0)		infiniteForm: (FormCanvas verticalGrayGradient: h gradientTop: topFactor gradientBottom: bottomFactor)		multipliedBy: aColor.	bottomColor _ aColor * bottomFactor.	"center stripe"	self fillRectangle: (aRectangle insetBy: (0 @ h corner: 0 @ r)) colorOrInfiniteForm: bottomColor.		"bottom stripe"	self		image: (FormCanvas bottomLeftCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomLeft - (0@r).	self		image: (FormCanvas bottomRightCorner: r height: r gradientTop: 1 gradientBottom: 1)		multipliedBy: bottomColor		at: aRectangle bottomRight - (r@r) .	self fillRectangle: ((aRectangle bottomLeft + (r@r negated)) extent: (aRectangle width - r - r@r)) colorOrInfiniteForm: bottomColor! !!FormCanvas methodsFor: 'drawing-roundedRectangles' stamp: 'jmv 1/4/2012 23:47'!      roundRect: aRectangle color: aColor radius: r gradientTop: topFactor gradientCenter: centerFactor gradientBottom: bottomFactor gradient1Height: h1	"	Display restore.	FormCanvas clearFormsCache. 	Display getCanvas roundRect: (10@10 extent: 200@100) color: Color red radius: 10 gradientTop: 1.0 gradientCenter: 0.0 gradientBottom: 1.0 gradient1Height: 35	"	| h2 |	"top stripe"	self		image: (FormCanvas topLeftCorner: r height: h1 gradientTop: topFactor gradientBottom: centerFactor)		multipliedBy: aColor		at: aRectangle topLeft.	self		image: (FormCanvas topRightCorner: r height: h1 gradientTop: topFactor gradientBottom: centerFactor)		multipliedBy: aColor		at: aRectangle topRight - (r@0).	self		fillRectangle: ((aRectangle withHeight: h1) insetBy: r@0)		infiniteForm: (FormCanvas verticalGrayGradient: h1 gradientTop: topFactor gradientBottom: centerFactor)		multipliedBy: aColor.		"bottom stripe"	h2 _ aRectangle height - h1.	self		image: (FormCanvas bottomLeftCorner: r height: h2 gradientTop: centerFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topLeft + (0@h1).	self		image: (FormCanvas bottomRightCorner: r height: h2 gradientTop: centerFactor gradientBottom: bottomFactor)		multipliedBy: aColor		at: aRectangle topRight + (r negated@h1).	self		fillRectangle: ((aRectangle topLeft + (r@h1)) extent: (aRectangle width-r-r@h2))		infiniteForm: (FormCanvas verticalGrayGradient: h2 gradientTop: centerFactor gradientBottom: bottomFactor)		multipliedBy: aColor.! !!FormCanvas class methodsFor: 'cached forms' stamp: 'jmv 1/5/2012 10:01'!                          steButtonForm: extent	^CachedForms		at: { #steButton . extent }		ifAbsentPut: [			| form canvas |			form _ Form extent: extent depth: 32.			canvas _ form getCanvas.			canvas				roundRect: (0@0 extent: extent)				color: (Color gray: 0.4)				radius: 4.			canvas				roundRect: (1@1 extent: extent-2)				color: Color white				radius: 4				gradientTop: 1.0				gradientCenter: 0.73				gradientBottom: 0.94				gradient1Height: (extent y-8+1 max: extent y//2).			form]! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 1/5/2012 10:16'!                  drawSTELookOn: aCanvas	aCanvas image: (FormCanvas steButtonForm: bounds extent) at: bounds topLeft! !!ScrollBar methodsFor: 'drawing' stamp: 'jmv 1/5/2012 10:07'!                        drawOn: aCanvas	Theme current steButtons		ifTrue: [			aCanvas				roundRect: bounds				color: (Color gray: 0.4)				radius: 4.			aCanvas				roundRect: (bounds insetBy: 1)				color: (Color gray: 0.95)				radius: 4]		ifFalse: [			aCanvas				fillRectangle: bounds				colorOrInfiniteForm: (color alphaMixed: 0.3 with: Color white)				borderWidth: borderWidth				borderStyleSymbol: #simple				baseColorForBorder: borderColor ]! !