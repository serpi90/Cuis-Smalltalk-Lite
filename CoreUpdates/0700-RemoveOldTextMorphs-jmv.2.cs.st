'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 6 December 2010 at 12:42:14 pm'!!DecompilerTests methodsFor: 'utilities' stamp: 'jmv 12/6/2010 11:40'!decompilerFailures	"here is the list of failures: DNU resulting in trying to decompile the following methods"	^ #((AdditionalMethodState at:ifAbsent:)		(AdditionalMethodState at:ifAbsentPut:)		(AdditionalMethodState at:put:)		(AdditionalMethodState hasLiteralSuchThat:)		(AdditionalMethodState hasLiteralThorough:)		(AdditionalMethodState includesProperty:)		(AdditionalMethodState keysAndValuesDo:)		(AdditionalMethodState pragmas)		(AdditionalMethodState properties)		(AdditionalMethodState propertyKeysAndValuesDo:)		(AdditionalMethodState propertyValueAt:ifAbsent:)		(AdditionalMethodState removeKey:ifAbsent:)		(AdditionalMethodState setMethod:)		(BalloonEngineSimulation circleCosTable "-0.3826834323650903 => -0.38268343236509 or -0.3826834323650902")		 (BalloonEngineSimulation circleSinTable "-0.3826834323650903 => -0.38268343236509 or -0.3826834323650902")		(BlockNode emitCodeExceptLast:encoder:)		(BlockNode sizeCodeExceptLast:)		(Categorizer changeFromCategorySpecs:)		(Categorizer elementCategoryDict)		(ChatNotes storeAIFFOnFile:)		(ClosureTests testToDoInsideTemp)		(Command veryDeepFixupWith:)		(CompiledMethod =)		(CompiledMethod allEmbeddedBlockMethods)		(CompiledMethod embeddedBlockMethods)		(CompiledMethod getPreambleFrom:at:)		(CompiledMethod hasLiteralSuchThat:)		(CompiledMethod hasLiteralThorough:)		(CompiledMethod sameTraitCodeAs:)		(Date printOn:)		(DependencyBrowser computePackageDependencies:)		(EventSensor eventTickler)		(Float printPaddedWith:to:)		(FMSound mixSampleCount:into:startingAt:leftVol:rightVol:)		(Form preMultiplyAlpha)		(FTPClient getDataInto:)		 (GeniePlugin primSameClassAbsoluteStrokeDistanceMyPoints:otherPoints:myVectors:otherVectors:mySquaredLengths:otherSquaredLengths:myAngles:otherAngles:maxSizeAndReferenceFlag:rowBase:rowInsertRemove:rowInsertRemoveCount: "Cannot compile -- stack including temps is too deep")		(GZipReadStream on:from:to:)		(GraphMorph drawDataOn:)		(HttpUrl checkAuthorization:retry:)		(Integer asBytesDescription)		(IntegerTest testNumberOfDigits)		(IntegerTest testPrintStringBase)		(JPEGReadWriter decodeBlockInto:component:dcTable:acTable:)		(LoopedSampledSound mixSampleCount:into:startingAt:leftVol:rightVol:)		(MessageTally treePrintOn:tabs:thisTab:total:totalTime:tallyExact:orThreshold:)		(MessageTrace selectAllBetweenAnchorAnd:)		(MethodPragmaTest testCompileCharacter)		(MultiByteBinaryOrTextStream next:)		(MultiByteFileStream next:)		(MVCProject textWindows)		(MVCToolBuilder setLayout:in:)		(Paragraph selectionRectsFrom:to:)		(PackageDependencyTest testPackage:dependsExactlyOn:)		(PasteUpMorph dropFiles:)		(Player veryDeepFixupWith:)		(PluggableTabButtonMorph calculateArcLengths)		(PluggableTabButtonMorph drawTabOn:)		(PluckedSound reset)		(PNGReadWriter copyPixelsGray:)		(PNGReadWriter processInterlaced)		(PNMReadWriter nextPutRGB:)		(PNMReadWriter nextPutBW:reverse:)		(PNMReadWriter readBWreverse:)		(PNMReadWriter readGray)		(PNMReadWriter readPlainRGB)		(PNMReadWriter writeHeader:)		(PointTest testTheta)		(PopUpMenu readKeyboard)		(PostscriptCanvas outlineQuadraticBezierShape:)		(QPickable2D pick:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(QUsersPane userEntryCompare:to:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(RelativeInstructionPrinter print:)		(RemoteHandMorph appendNewDataToReceiveBuffer)		(ScaledDecimalTest testConvertFromFraction)		(SHMCClassDefinition allInstVarNames)		(SHMCClassDefinition withAllSuperclasses)		(ShortIntegerArray writeOn:)		(SHParserST80 isBinary)		(StandardScriptingSystem holderWithAlphabet)		(StrikeFontSet displayStringR2L:on:from:to:at:kern:)		(String howManyMatch:)		(String keywords)		(StringTest testWthNoLineLongerThan)		(SyntaxMorph replaceKeyWord:menuItem:)		(SyntaxMorph replaceSel:menuItem:)		(TextDiffBuilder lcsFor:and:)		(TextURL actOnClickFor:)		(TShaderProgram vertexStrings) "foo ifTrue: []. => foo. => ."		(TShaderProgram fragmentStrings) "foo ifTrue: []. => foo. => ."		(TTContourConstruction segmentsDo:) "out of scope variable"		(TTCFontReader processCharacterMappingTable:)		(TTFileDescription getGlyphFlagsFrom:size:)		(TTFileDescription processCharacterMappingTable:)		(TTFontReader getGlyphFlagsFrom:size:)		(TTFontReader processCharacterMappingTable:)		(TTFontReader processHorizontalMetricsTable:length:)		(TWindow zoomWindow:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(WaveEditor showEnvelope)		(WeakSet scanForLoadedSymbol:)		"(PNMReadWriter nextImage) (Collection #ifEmpty:ifNotEmpty:) (Collection #ifEmpty:) (Collection #ifNotEmpty:ifEmpty:) (Text #alignmentAt:ifAbsent:) (ObjectWithDocumentation propertyAt:ifAbsent:)")! !!FileList2 class methodsFor: 'utility' stamp: 'jmv 12/6/2010 11:54'!textRow: aString 	^AlignmentMorph proportional		addMorph:			((StringMorph new contents: aString)				color: Color blue; 				lock)		fullFrame: (LayoutFrame fractions: (0 @ 0 corner: 1 @ 1))! !!Morph methodsFor: 'menus' stamp: 'jmv 12/6/2010 12:03'!addStandardHaloMenuItemsTo: aMenu hand: aHandMorph	"Add standard halo items to the menu"	| unlockables |	self isWorldMorph ifTrue:		[^ self addWorldHaloMenuItemsTo: aMenu hand: aHandMorph].	aMenu add: 'send to back' translated action: #goBehind.	aMenu add: 'bring to front' translated action: #comeToFront.	self addEmbeddingMenuItemsTo: aMenu hand: aHandMorph.	aMenu addLine.	self addFillStyleMenuItems: aMenu hand: aHandMorph.	self addHaloActionsTo: aMenu.	(owner is: #BareTextMorph) ifTrue:[self addTextAnchorMenuItems: aMenu hand: aHandMorph].	aMenu addLine.	self addToggleItemsToHaloMenu: aMenu.	aMenu addLine.	self addCopyItemsTo: aMenu.	self addExportMenuItems: aMenu hand: aHandMorph.	self addDebuggingItemsTo: aMenu hand: aHandMorph.	aMenu addLine.	aMenu defaultTarget: self.	aMenu addLine.	unlockables _ self submorphs select:		[:m | m isLocked].	unlockables size = 1 ifTrue:		[aMenu			add: ('unlock "{1}"' translated format: unlockables first externalName)			action: #unlockContents].	unlockables size > 1 ifTrue:		[aMenu add: 'unlock all contents' translated action: #unlockContents.		aMenu add: 'unlock...' translated action: #unlockOneSubpart].	aMenu defaultTarget: aHandMorph.! !!Morph methodsFor: 'text-anchor' stamp: 'jmv 12/6/2010 12:03'!changeDocumentAnchor	"Change the anchor from/to document anchoring"	| newType |	newType := self textAnchorType == #document 		ifTrue: [#paragraph]		ifFalse: [ #document].	(owner is: #BareTextMorph) 		ifTrue: [			owner 				anchorMorph: self				at: self position				type: newType]! !!Morph methodsFor: 'text-anchor' stamp: 'jmv 12/6/2010 12:03'!changeInlineAnchor	"Change the anchor from/to line anchoring"	| newType |	newType := self textAnchorType == #inline 				ifTrue: [#paragraph]				ifFalse: [#inline]. 	(owner is: #BareTextMorph)		ifTrue: [			owner				anchorMorph: self				at: self position				type: newType]! !!Morph methodsFor: 'text-anchor' stamp: 'jmv 12/6/2010 12:04'!changeParagraphAnchor	"Change the anchor from/to paragraph anchoring"	| newType |	newType := self textAnchorType == #paragraph 		ifTrue: [#document]		ifFalse: [#paragraph].	(owner is: #BareTextMorph)		ifTrue: [			owner 				anchorMorph: self				at: self position				type: newType]! !!BalloonMorph class methodsFor: 'private' stamp: 'jmv 12/6/2010 12:02'!getTextMorph: aStringOrMorph for: balloonOwner	"Construct text morph."	| m text fontToUse |	(aStringOrMorph is: #Morph)		ifTrue: [ m _ aStringOrMorph ]		ifFalse: [			text _ Text string: aStringOrMorph attribute: TextAlignment centered.			(fontToUse _ balloonOwner balloonFont)				ifNotNil: [					text initialFont: fontToUse ].			m _ StringMorph new contents: text].	^ m! !!BareTextMorph methodsFor: 'classification' stamp: 'jmv 12/6/2010 12:03'!is: aSymbol	^ aSymbol == #BareTextMorph or: [ super is: aSymbol ]! !!BareTextMorph methodsFor: 'macpal' stamp: 'di 11/10/1998 10:13'!flash	^ editView flash! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'jmv 12/6/2010 11:55'!createQueryTextMorph: queryString 	"create the queryTextMorph"	| result frame |	result := StringMorph new contents: queryString.	result lock.	frame := LayoutFrame new.	frame topFraction: 0.02.	frame leftFraction: 0.05.	result layoutFrame: frame.	self addMorph: result.	^ result! !!HaloMorph methodsFor: 'handles' stamp: 'jmv 12/6/2010 12:03'!addFontEmphHandle: haloSpec 	(innerTarget is: #BareTextMorph) 		ifTrue: [			self 				addHandle: haloSpec				on: #mouseDown				send: #chooseEmphasisOrAlignment				to: innerTarget]! !!HaloMorph methodsFor: 'handles' stamp: 'jmv 12/6/2010 12:03'!addFontSizeHandle: haloSpec 	(innerTarget is: #BareTextMorph) 		ifTrue: [			self 				addHandle: haloSpec				on: #mouseDown				send: #chooseFont				to: innerTarget]! !!HaloMorph methodsFor: 'handles' stamp: 'jmv 12/6/2010 12:03'!addFontStyleHandle: haloSpec 	(innerTarget is: #BareTextMorph) 		ifTrue: [			self 				addHandle: haloSpec				on: #mouseDown				send: #chooseStyle				to: innerTarget]! !!MenuMorph methodsFor: 'keyboard control' stamp: 'jmv 12/6/2010 11:57'!displayFiltered: evt	| matchStr allItems isMatch matches feedbackMorph |	matchStr _ self valueOfProperty: #matchString.	allItems _ self submorphs select: [ :m |		m isKindOf: MenuItemMorph ].	matches _ allItems select: [ :m |		isMatch _ matchStr isEmpty or: [			m contents				includesSubstring: matchStr				caseSensitive: false ].		m isEnabled: isMatch.		isMatch ].	feedbackMorph _ self valueOfProperty: #feedbackMorph.	feedbackMorph ifNil: [		feedbackMorph _ StringMorph new color: Color veryDarkGray.		feedbackMorph position: self position - (0@20).		self			 addLine;			 addMorphBack: feedbackMorph lock.		self			setProperty: #feedbackMorph			toValue: feedbackMorph ].	feedbackMorph contents: '<' , matchStr , '>'.	matchStr isEmpty ifTrue: [		feedbackMorph delete.		self submorphs last delete.		self removeProperty: #feedbackMorph ].	matches size = 1 ifTrue: [		self			selectItem: matches first			event: evt ].! !!Paragraph methodsFor: 'composition' stamp: 'jmv 12/6/2010 12:05'!model: aTextModel in: textContainer	model _ aTextModel.	container _ textContainer.	self composeAll! !!TextModel methodsFor: 'accessing' stamp: 'jmv 12/6/2010 12:39'!contents: aTextOrString	self actualContents: aTextOrString! !!PluggableTextModel methodsFor: 'updating' stamp: 'jmv 12/6/2010 11:47'!update: aSymbol	"We are being notified of a change in our provider.	Notify our dependents"	"	self changed: aSymbol	"	aSymbol == textGetter ifTrue: [ ^self changed: #acceptedContents ].	aSymbol == selectionGetter ifTrue: [ ^self changed: #initialSelection ].	"do not try to autoselect on other than the main contents pane.	I.e., in a 'senders' view, do not flash the annotations for not including the sent symbol"	(aSymbol == #autoSelect and: [ textGetter ~= #acceptedContents ])		ifTrue: [ ^self ].	self changed: aSymbol! !!Transcripter methodsFor: 'initialization' stamp: 'jmv 12/6/2010 12:06'!initInFrame: rect	frame _ rect insetBy: 2.  "Leave room for border"	para _ Paragraph new.	para		model: (TextModel new actualContents: self contents asText)		in: ((frame insetBy: 4) withHeight: 9999)! !!WaveletCodec methodsFor: 'subclass responsibilities' stamp: 'jmv 12/6/2010 11:51'!encodeFrames: frameCount from: srcSoundBuffer at: srcIndex into: dstByteArray at: dstIndex	"Encode the given number of frames starting at the given index in the given monophonic SoundBuffer and storing the encoded sound data into the given ByteArray starting at the given destination index. Encode only as many complete frames as will fit into the destination. Answer a pair containing the number of samples consumed and the number of bytes of compressed data produced."	"Note: Assume that the sender has ensured that the given number of frames will not exhaust either the source or destination buffers."	| frameBase coeffs maxVal minVal c scale nullCount frameI outFrameSize threshold outStream cMin val |	threshold _ 2000.	fwt ifNil:		[samplesPerFrame _ self samplesPerFrame.		nLevels _ 8.		"Here are some sample mother wavelets, with the compression achieved on a		sample of my voice at a threshold of 2000:									compression achieved "		alpha _ 0.0.  beta _ 0.0.		"12.1"		alpha _ 1.72.  beta _ 1.51.	"14.0"		alpha _ -1.86.  beta _ -1.53.	"14.4"		alpha _ 1.28.  beta _ -0.86.	"15.9"		alpha _ -1.15.  beta _ 0.69.	"16.0"		fwt _ FWT new.		fwt nSamples: samplesPerFrame nLevels: nLevels.		fwt setAlpha: alpha beta: beta].	(outStream _ WriteStream on: dstByteArray from: dstIndex to: dstByteArray size)		nextNumber: 4 put: frameCount;		nextNumber: 4 put: samplesPerFrame;		nextNumber: 4 put: nLevels;		nextNumber: 4 put: alpha asIEEE32BitWord;		nextNumber: 4 put: beta asIEEE32BitWord.	frameBase _ srcIndex.	1 to: frameCount do:		[:frame | 		"Copy float values into the wavelet sample array"				fwt samples: ((frameBase to: frameBase + samplesPerFrame-1) 				collect: [:i | (srcSoundBuffer at: i) asFloat]).		"Compute the transform"		fwt transformForward: true.		frameI _ outStream position+1.  "Reserve space for frame size"		outStream nextNumber: 2 put: 0.		"Determine and output the scale for this frame"		coeffs _ fwt coeffs.		maxVal _ 0.0.  minVal _ 0.0.		5 to: coeffs size do:			[:i | c _ coeffs at: i.			c > maxVal ifTrue: [maxVal _ c].			c < minVal ifTrue: [minVal _ c]].		scale _ (maxVal max: minVal negated) / 16000.0.  "Will scale all to -16k..16k: 15 bits"		outStream nextNumber: 4 put: scale asIEEE32BitWord.		"Copy scaled values, with run-coded sequences of 0's, to destByteArray"		nullCount _ 0.		cMin _ threshold / scale.		5 to: coeffs size do:			[:i | c _ (coeffs at: i) / scale.			c abs < cMin			ifTrue: ["Below threshold -- count nulls."					nullCount _ nullCount + 1]			ifFalse: ["Above threshold -- emit prior null count and this sample."					nullCount > 0 ifTrue:						[nullCount <= 112						ifTrue: [outStream nextNumber: 1 put: nullCount-1]						ifFalse: [outStream nextNumber: 2 put: (112*256) + nullCount-1].						nullCount _ 0].						val _ c asInteger + 16384 + 32768.  "Map -16k..16k into 32k..64k"						outStream nextNumber: 2 put: val]].					nullCount > 0 ifTrue:						[nullCount <= 112						ifTrue: [outStream nextNumber: 1 put: nullCount-1]						ifFalse: [outStream nextNumber: 2 put: (112*256) + nullCount-1]].		outFrameSize _ outStream position+1 - frameI - 2.  "Write frame size back at the beginning"		(WriteStream on: dstByteArray from: frameI to: dstByteArray size)			nextNumber: 2 put: outFrameSize.		frameBase _ frameBase + samplesPerFrame]."This displays a temporary indication of compression achieved"(((frameBase - srcIndex) *2.0 / (outStream position+1 - dstIndex) truncateTo: 0.1) printString , ' : 1') displayAt: Sensor cursorPoint + (-20@30).	outStream position > dstByteArray size ifTrue:		["The calling routine only provides buffer space for compression of 2:1 or better.  If you are just testing things, you can increase it to, eg, codeFrameSize _ frameSize*3, which would be sufficient for a threshold of 0 (lossless conversion)."		self error: 'Buffer overrun'].	^ Array with: frameBase - srcIndex			with: outStream position+1 - dstIndex! !StringMorph removeSelector: #handlesMouseDown:!StringMorph removeSelector: #launchMiniEditor:!StringMorph removeSelector: #mouseDown:!StringMorph removeSelector: #userEditsAllowed!Smalltalk removeClassNamed: #NewParagraph!Smalltalk removeClassNamed: #StringMorphEditor!Smalltalk removeClassNamed: #TextMorph!