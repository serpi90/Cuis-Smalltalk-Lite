'From Squeak3.7 of ''4 September 2004'' [latest update: #5989] on 3 July 2008 at 6:10:47 pm'!!OldSimpleClientSocket class methodsFor: 'remote cursor example' stamp: 'jmv 7/3/2008 18:10'!remoteCursorSender	"This is the client side of a test that sends samples of the local input sensor state to the server, which may be running on a local or remote host. This method opens the connection, then forks a process to send the cursor data. Data is sent continuously until the user clicks in a 20x20 pixel square at the top-left corner of the display. The server should be started first. Note the server's address, since this method will prompt you for it."	"OldSimpleClientSocket remoteCursorSender"	| sock addr stopRect evt  |	Transcript show: 'starting remote cursor sender'; cr.	Transcript show: 'initializing network'; cr.	Socket initializeNetwork.	addr _ NetNameResolver promptUserForHostAddress.	Transcript show: 'opening connection'; cr.	sock _ OldSimpleClientSocket new.	sock connectTo: addr port: 54323.	sock waitForConnectionUntil: self standardDeadline.	(sock isConnected) ifFalse: [self error: 'sock not connected'].	Transcript show: 'connection established'; cr.	stopRect _ 0@0 corner: 20@20.  "click in this rectangle to stop sending"	Display reverse: stopRect.	evt := Array new: 8.	"the sending process"	[		Sensor primGetNextEvent: evt.		(evt at: 1) = 1 and: [((evt at: 5) = 0) not and: [(evt at: 3) < 21 and: [(evt at: 4) < 21]]]	] whileFalse: [		(evt at: 1) = 0 ifFalse: [			sock sendCommand: evt printString]	].			Display reverse: stopRect.	sock waitForSendDoneUntil: self standardDeadline.	sock destroy.	Transcript show: 'remote cursor sender done'; cr.! !