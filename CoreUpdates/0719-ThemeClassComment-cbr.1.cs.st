'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 19 December 2010 at 10:50:49 am'!!Theme commentStamp: 'jmv 12/19/2010 10:49' prior: 0!To set a theme:"Note that some parts of the UI will not update. You may need to reopen your browsers, etc."ThemeName beCurrent.Themes are collections of methods that affect the way the system presents itself. They can be used to change the color scheme, as well as to modify other look and feel properties (e.g., round versus square window corners, embossed versus solid window labels.) Each of these methods answers a value like true or false, or a Color. Various parts of the system relating primarily to tools and menus query Theme class>>current to determine their configuration.Theme serves as base theme. You can make new color schemes by subclassing it, and you can see what's possible by browsing its methods.Shout's colors are configured using #shout. The method should be fairly self explanatory. The data structure answered by this method is used in #generateShoutConfig to create a large nested array, which is in turn requested by Shout to configure it's color scheme. The default scheme on systems that the present author has encountered thus far use only a subsetof shout's full customizability, as does this facade for it's configuration. For more granular control of Shout, you can override #generateShoutConfig to answer the data structure directly. To get a sense of what it looks like,print:Theme new generateShoutConfig.*Be Warned:* If something goes wrong with this method, or the data isn't shaped correctly, weird and/or bad things can happen to Morphic. Be careful. I've supplied a test for it if you do decide to tinker with it. Send your theme #beCurrent in order to initialize Shout after modifying #shout.!