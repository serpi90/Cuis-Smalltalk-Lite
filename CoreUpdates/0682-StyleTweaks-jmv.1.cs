'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 3 December 2010 at 2:54:46 pm'!!Object methodsFor: 'testing' stamp: 'jmv 12/3/2010 10:18'!is: aSymbol	"A means for cleanly replacing all isXXX like methods.	Please use judiciously!!	Suggested by Igor Stasenko at	http://lists.squeakfoundation.org/pipermail/squeak-dev/2009-June/136793.html	aSymbol is ussually a class name (starting with uppercase) or a protocolo conformance question (starting with lowercase), such as #hasTextSelector, #hasTextProvider, etc."	^false! !!ActiveModel methodsFor: 'dependents access' stamp: 'jmv 12/3/2010 10:23'!addDependent: anObject	"Make the given object one of the receiver's dependents."	self		when: #changed:		send: #update:		to: anObject.	^anObject! !!ActiveModel methodsFor: 'dependents access' stamp: 'jmv 12/3/2010 10:24'!breakDependents	"Remove all of the receiver's dependents."	self removeActionsForEvent: #changed:! !!ActiveModel methodsFor: 'dependents access' stamp: 'jmv 12/3/2010 10:24'!dependents	^(self actionSequenceForEvent: #changed:) asSet		collect: [ :each | each receiver]! !!ActiveModel methodsFor: 'dependents access' stamp: 'jmv 12/3/2010 10:24'!removeDependent: anObject	"Remove the given object as one of the receiver's dependents."	self 		removeActionsWithReceiver: anObject		forEvent: #changed:.	^ anObject! !!ActiveModel methodsFor: 'updating' stamp: 'jmv 12/3/2010 10:24'!changed: aParameter 	"Receiver changed. The change is denoted by the argument aParameter. 	Usually the argument is a Symbol that is part of the dependent's change 	protocol. Inform all of the dependents."	self 		triggerEvent: #changed:		with: aParameter! !!CodeProvider methodsFor: 'misc' stamp: 'jmv 12/3/2010 10:29'!modelWakeUpIn: aWindow	"The window has been activated.  Respond to possible changes that may have taken place while it was inactive"	self updateListsAndCodeIn: aWindow.	self decorateButtons.	super modelWakeUpIn: aWindow! !!PluggableTextMorph methodsFor: 'testing' stamp: 'jmv 12/3/2010 10:19'!is: aSymbol	^ aSymbol == #hasTextSelector or: [ super is: aSymbol ]! !!TextModelMorph methodsFor: 'testing' stamp: 'jmv 12/3/2010 10:19'!is: aSymbol	^ aSymbol == #hasTextSelector or: [ super is: aSymbol ]! !CodeProvider removeSelector: #refreshAnnotation!ActiveModel removeSelector: #changedEventSelector!ActiveModel removeSelector: #updateEventSelector!Object removeSelector: #changed:with:!Object removeSelector: #update:with:!