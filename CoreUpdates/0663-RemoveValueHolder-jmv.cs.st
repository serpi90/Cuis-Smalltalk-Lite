'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 24 November 2010 at 10:41:17 am'!!NewParagraph commentStamp: 'jmv 11/24/2010 09:45' prior: 0!A Paragraph represents text that has been laid out, or composed, in some container.	text 		A Text with encoded per-character emphasis.	container	A Rectangle or TextContainer that determines where text can go.	lines		An Array of TextLines comprising the final layout of the text				after it has been composed within its container.	positionWhenComposed   As its name implies.  Allows display at new locations				without the need to recompose the text.Lines are ordered vertically.  However, for a given y, there may be several lines in left to right order.  Lines must never be empty, even if text is empty.!!TextMorphForEditView commentStamp: '<historical>' prior: 0!Built specifically to be part of a PluggableTextMorph!!CodeHolder methodsFor: 'annotation' stamp: 'jmv 11/24/2010 10:05'!addOptionalAnnotationsTo: window at: fractions plus: verticalOffset	"Add an annotation pane to the window if preferences indicate a desire for it, and return the incoming verticalOffset plus the height of the added pane, if any"	| aTextMorph divider delta |	self wantsAnnotationPane ifFalse: [^ verticalOffset].	aTextMorph _ PluggableTextMorph 		model: self		editorClass: self editorClass		textGetter: #annotation 		textSetter: nil.	aTextMorph		askBeforeDiscardingEdits: false;		borderWidth: 0;		hideScrollBarsIndefinitely.	divider _ BorderedSubpaneDividerMorph forBottomEdge.	divider extent: 4@4; color: Color transparent; borderColor: #raised; borderWidth: 2.	delta _ self defaultAnnotationPaneHeight.	window 		addMorph: aTextMorph 		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@verticalOffset corner: 0@(verticalOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(verticalOffset + delta - 1) corner: 0@(verticalOffset + delta))).	^ verticalOffset + delta! !!PluggableTextMorph class methodsFor: 'as yet unclassified' stamp: 'jmv 11/24/2010 10:04'!noShoutModel: anObject editorClass: anEditorClass textGetter: getTextSel textSetter: setTextSel	^ self		noShoutModel: anObject		editorClass: anEditorClass		textGetter: getTextSel		textSetter: setTextSel		selectionGetter: nil		menuGetter: nil! !!ProgressBarMorph methodsFor: 'accessing' stamp: 'jmv 11/24/2010 10:31'!value: aValue	value _ aValue.	self changed! !!ProgressBarMorph methodsFor: 'drawing' stamp: 'jmv 11/24/2010 10:31'!drawOn: aCanvas	| width inner |	super drawOn: aCanvas.	inner _ self innerBounds.	width _ (inner width * value) truncated min: inner width.	aCanvas fillRectangle: (inner origin extent: width @ inner height) color: progressColor.! !!ProgressBarMorph methodsFor: 'initialization' stamp: 'jmv 11/24/2010 10:31'!initialize	super initialize.	progressColor _ Color green.	value _ 0.0! !!ProgressBarMorph methodsFor: 'menu' stamp: 'jmv 11/24/2010 10:32'!changeProgressValue: evt	| answer |	answer _ FillInTheBlank		request: 'Enter new value (0 - 1.0)'		initialAnswer: self value contents asString.	answer isEmptyOrNil ifTrue: [^ self].	self value: answer asNumber! !!ProgressMorph methodsFor: 'accessing' stamp: 'jmv 11/24/2010 10:33'!done	^progress value! !!ProgressMorph methodsFor: 'accessing' stamp: 'jmv 11/24/2010 10:33'!done: amountDone	progress value: ((amountDone min: 1.0) max: 0.0)! !ProgressBarMorph removeSelector: #update:!ArrayLiteralTest removeSelector: #array!Smalltalk removeClassNamed: #MethodHolder!Smalltalk removeClassNamed: #ValueHolder!