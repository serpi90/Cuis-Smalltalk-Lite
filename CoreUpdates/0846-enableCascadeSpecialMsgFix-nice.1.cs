'From Cuis 3.0 of 18 January 2011 [latest update: #768] on 3 March 2011 at 9:16:54 am'!!classDefinition: #MessageNode category: #'Compiler-ParseNodes'!ParseNode subclass: #MessageNode	instanceVariableNames: 'receiver selector precedence special arguments sizes equalNode caseErrorNode originalArguments originalSelector '	classVariableNames: 'MacroEmitters MacroPrinters MacroSelectors MacroSizers MacroTransformers StdTypers ThenFlag '	poolDictionaries: ''	category: 'Compiler-ParseNodes'!!MessageNode methodsFor: 'testing' stamp: 'nice 3/3/2011 00:00'!ensureCanCascade: encoder	special > 0 ifTrue:		[special := 0.		selector := encoder encodeSelector: originalSelector.		arguments := originalArguments.		arguments do:			[:each|			each isBlockNode ifTrue:				[each deoptimize]]]! !!MessageNode methodsFor: 'private' stamp: 'nice 3/2/2011 23:59'!receiver: rcvr arguments: args precedence: p	receiver := rcvr.	originalArguments := arguments := args.	sizes := Array new: arguments size.	precedence := p! !!MessageNode methodsFor: 'initialize-release' stamp: 'nice 3/2/2011 23:57'!receiver: rcvr selector: selNode arguments: args precedence: p 	"Decompile."	self receiver: rcvr		arguments: args		precedence: p.	originalSelector := selNode key.	selNode code == #macro		ifTrue: [self noteSpecialSelector: selNode key]		ifFalse: [special := 0].	selector := selNode.	"self pvtCheckForPvtSelector: encoder"	"We could test code being decompiled, but the compiler should've checked already. And where to send the complaint?"! !!MessageNode methodsFor: 'initialize-release' stamp: 'nice 3/2/2011 23:55'!receiver: rcvr selector: aSelector arguments: args precedence: p from: encoder 	"Compile."	self receiver: rcvr		arguments: args		precedence: p.	originalSelector := aSelector.	self noteSpecialSelector: aSelector.	(self transform: encoder)		ifTrue: 			[selector isNil ifTrue:				[selector := SelectorNode new 								key: (MacroSelectors at: special)								code: #macro]]		ifFalse: 			[selector := encoder encodeSelector: aSelector.			rcvr == NodeSuper ifTrue: [encoder noteSuper]].	self pvtCheckForPvtSelector: encoder! !!classDefinition: #MessageNode category: #'Compiler-ParseNodes'!ParseNode subclass: #MessageNode	instanceVariableNames: 'receiver selector precedence special arguments sizes equalNode caseErrorNode originalSelector originalArguments'	classVariableNames: 'MacroEmitters MacroPrinters MacroSelectors MacroSizers MacroTransformers StdTypers ThenFlag'	poolDictionaries: ''	category: 'Compiler-ParseNodes'!