'From Cuis 3.3 of 2 June 2011 [latest update: #1024] on 1 November 2011 at 11:40 pm'!!Object methodsFor: 'user interface' stamp: 'jmv 11/1/2011 23:19'!browseClassHierarchy	| targetClass newBrowser |	targetClass := self class isMeta				ifTrue: [self class theNonMetaClass]				ifFalse: [self class ].	newBrowser _ HierarchyBrowser for: targetClass.	HierarchyBrowserWindow openNoSysCat: newBrowser label: nil.	newBrowser assureSelectionsShow! !!Behavior methodsFor: 'as yet unclassified' stamp: 'jmv 11/1/2011 23:15'!environment	"Return the environment in which the receiver is visible"	^Smalltalk! !!Behavior methodsFor: 'system-support' stamp: 'jmv 11/1/2011 23:17'!allCallsOn	"Answer a SortedCollection of all the methods that refer to me by name or 	as part of an association in a global dict."	"	^ (Smalltalk		allCallsOn: (Smalltalk associationAt: self theNonMetaClass name))		, (Smalltalk allCallsOn: self theNonMetaClass name)	"	^ (Smalltalk allCallsOn: self theNonMetaClass name) ! !!BlockClosure methodsFor: 'services' stamp: 'jmv 11/1/2011 23:18'!timeProfile	^TimeProfileBrowser onBlock: self! !!BlockClosure methodsFor: 'services' stamp: 'jmv 11/1/2011 23:18'!valueWithRequestor: aRequestor 	"To do later: make the fillInTheBlank display more informative captions.	Include the description of the service, and maybe record steps"	^ self numArgs isZero 		ifTrue: [self value]		ifFalse: [self value: aRequestor]! !!BlockContext methodsFor: 'services' stamp: 'jmv 11/1/2011 23:18'!valueWithRequestor: aRequestor 	"To do later: make the fillInTheBlank display more informative captions.	Include the description of the service, and maybe record steps"	^ self numArgs isZero 		ifTrue: [self value]		ifFalse: [self value: aRequestor]! !!ClassDescription methodsFor: 'system-support' stamp: 'jmv 11/1/2011 23:17'!allUnreferencedClassVariables	"Answer a list of the names of all the receiver's unreferenced class vars, including those defined in superclasses"	| aList |	aList _ OrderedCollection new.	self withAllSuperclasses reverseDo: [ :aClass |		aClass classVarNames do: [ :var |			(Smalltalk isThereAReferenceTo: (aClass classPool associationAt: var)) ifFalse: [ aList add: var ]]].	^ aList! !!CodeProvider methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:25'!isModeStyleable	"determine if Shout can style in the current mode"	^ self showingSource or: [self showingPrettyPrint]! !!CodeProvider methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:25'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Answer false if showing difs, to veto the styling."		^self showingAnyKindOfDiffs not! !!Browser methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:24'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"	| type |		self isModeStyleable ifFalse: [^false].	type _ self editSelection.	(#(newMessage editMessage editClass newClass) includes: type) ifFalse:[^false].	aSHTextStyler classOrMetaClass: (type = #editClass ifFalse:[self selectedClassOrMetaClass]).	^true! !!ChangeList methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:24'!shoutAboutToStyle: aSHTextStyler	"As our 'methods' are not actual methods in the system, we can not style them."	^false! !!ChangeSorter methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:24'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"	self isModeStyleable ifFalse: [^false].	self currentSelector ifNil: [^false].	aSHTextStyler classOrMetaClass: self selectedClassOrMetaClass.	^true! !!Collection methodsFor: 'math functions' stamp: 'jmv 11/1/2011 23:02'!roundTo: quantum	^self collect: [ :each | each roundTo: quantum ]! !!Debugger methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:25'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"		self isModeStyleable ifFalse: [^false].	aSHTextStyler 		classOrMetaClass: self selectedClassOrMetaClass;		disableFormatAndConvert.	^true! !!FileContentsBrowser methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:25'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"	self isModeStyleable ifFalse: [^false].	aSHTextStyler classOrMetaClass: self selectedClassOrMetaClass.	^true! !!MessageSet methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:26'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"		self isModeStyleable ifFalse: [^false].	aSHTextStyler classOrMetaClass: self selectedClassOrMetaClass.	^true! !!MethodContext methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:06'!inspectorClass	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^ ContextInspector! !!Number methodsFor: 'testing' stamp: 'jmv 11/1/2011 23:19'!isNonZero	"Return true for numbers not zero and false for all other objects "	^ self isZero not! !!Integer methodsFor: 'printing' stamp: 'jmv 11/1/2011 23:10'!asBytesDescription	"Answer a terse, easily-readable representation of this Integer reprsenting a number of bytes.  Useful for file-browsers.	123 asBytesDescription	(12*1024) asBytesDescription	1024 asBytesDescription	(1024*1024) asBytesDescription	(1024*1024*1024) asBytesDescription	(1024*1024*1024*1024) asBytesDescription	(30 factorial) asBytesDescription	"	| suffixes |	suffixes := { 'K'"ilobytes". 'M'"egabytes". 'G'"igabytes". 'T'"erabytes". 'P'"etabytes". 'E'"xabytes". 'Z'"ettabytes". 'Y'"ottabytes"}.	suffixes size to: 1 by: -1 do:		[ : index |  | units |		units := 1024 raisedTo: index.		self >= units ifTrue: [ ^ ((self / units) roundTo: 1/100) asIntegerOrFloat asString, (suffixes at: index) ] ].	^ self asString! !!Integer methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:08'!explorerContents	^#(		('hexadecimal' 16)		('octal' 8)		('binary' 2)) collect: [ :each |			ObjectExplorerWrapper				with: each first				name: (self printStringBase: each second)				model: self ]! !!Integer methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:10'!hasContentsInExplorer	^true! !!PluggableTextModel methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:23'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text.	Set the classOrMetaClass in aSHTextStyler, so that identifiers	will be resolved correctly.	Answer true to allow styling to proceed, or false to veto the styling"	^textProvider shoutAboutToStyle: aSHTextStyler! !!PositionableStream methodsFor: 'accessing' stamp: 'jmv 11/1/2011 23:11'!nextAvailable: aNumber	^self next: aNumber! !!SequenceableCollection methodsFor: 'enumerating' stamp: 'jmv 11/1/2011 23:03'!groupsOf: n atATimeCollect: aBlock 	"Evaluate aBlock with my elements taken n at a time. Ignore any 	leftovers at the end. 	Allows use of a flattened  	array for things that naturally group into groups of n. 	If aBlock has a single argument, pass it an array of n items, 	otherwise, pass the items as separate arguments. 	See also pairsDo:"	| passArray args  |	passArray := aBlock numArgs = 1.	^(n		to: self size		by: n)		collect: [:index | 			args := (self copyFrom: index - n + 1 to: index) asArray.			passArray				ifTrue: [aBlock value: args]				ifFalse: [aBlock valueWithArguments: args]]! !!SequenceableCollection methodsFor: 'enumerating' stamp: 'jmv 11/1/2011 23:03'!groupsOf: n atATimeDo: aBlock 	"Evaluate aBlock with my elements taken n at a time. Ignore any leftovers at the end.	Allows use of a flattened 	array for things that naturally group into groups of n.	If aBlock has a single argument, pass it an array of n items,	otherwise, pass the items as separate arguments.	See also pairsDo:"	| passArray args |	passArray := (aBlock numArgs = 1).	n		to: self size		by: n		do: [:index | 			args := (self copyFrom: index - n + 1 to: index) asArray.			passArray ifTrue: [ aBlock value: args ]				ifFalse: [ aBlock valueWithArguments: args ]].! !!CompiledMethod methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:07'!explorerContents	"(CompiledMethod compiledMethodAt: #explorerContents) explore"		^Array streamContents:		[:s| | tokens |		tokens := Scanner new scanTokens: (self headerDescription readStream skipTo: $"; upTo: $").		s nextPut: (ObjectExplorerWrapper						with: ((0 to: tokens size by: 2) collect:								[:i| i = 0 ifTrue: [self header] ifFalse: [{tokens at: i - 1. tokens at: i}]])						name: 'header'						model: self).		(1 to: self numLiterals) do:			[:key|			s nextPut: (ObjectExplorerWrapper							with: (self literalAt: key)							name: ('literal', key printString contractTo: 32)							model: self)].		self isQuick			ifTrue: [s nextPut: (ObjectExplorerWrapper									with: self symbolic									name: #symbolic									model: self)]			ifFalse:				[self symbolicLinesDo:					[:pc :line|					pc <= 1						ifTrue:							[s nextPut: (ObjectExplorerWrapper											with: line											name: 'pragma'											model: self)]						ifFalse:							[s nextPut: (ObjectExplorerWrapper											with: line											name: pc printString											model: self)]]].				"should be self numLiterals + 1 * Smalltalk wordSize + 1"		self endPC + 1			to: self basicSize			do: [:key|				s nextPut: (ObjectExplorerWrapper								with: (self basicAt: key)								name: key printString								model: self)]]! !!CompiledMethod methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:05'!inspectorClass	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^ CompiledMethodInspector! !!FloatArray methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:04'!inspectorClass 	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^OrderedCollectionInspector! !!OrderedCollection methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:06'!inspectorClass 	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^OrderedCollectionInspector! !!Set methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:06'!inspectorClass 	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^ SetInspector! !!Dictionary methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:05'!inspectorClass	"Answer the class of the inspector to be used on the receiver.  Called by inspect; 	use basicInspect to get a normal (less useful) type of inspector."	^ DictionaryInspector! !!Dictionary methodsFor: 'compiling' stamp: 'jmv 11/1/2011 23:09'!bindingOf: varName	^self associationAt: varName ifAbsent: nil! !!Dictionary methodsFor: 'compiling' stamp: 'jmv 11/1/2011 23:09'!bindingsDo: aBlock	^self associationsDo: aBlock! !!String methodsFor: 'uCompletion' stamp: 'jmv 11/1/2011 23:20'!separateKeywords	^self, ' '! !!Symbol methodsFor: 'uCompletion' stamp: 'jmv 11/1/2011 23:21'!separateKeywords	^self isKeyword		ifFalse: [ self, ' ' ]		ifTrue: [			String streamContents: [ :strm |				self keywords					do: [ :keyword | strm nextPutAll: keyword ]					separatedBy: [ strm space; space ].				strm space]]! !!SystemVersion methodsFor: 'printing' stamp: 'jmv 11/1/2011 23:23'!majorMinorVersion	"Return the major/minor version number of the form X.Y, without any 'alpha' or 'beta' or other suffix."	"(SystemVersion new version: 'Squeak3.7alpha') majorMinorVersion" "  -->  'Squeak3.7' "	"SystemVersion current majorMinorVersion"		| char stream |	stream := ReadStream on: version, 'x'.	stream upTo: $..	char := stream next.	[char isDigit]		whileTrue: [char := stream next].	^ version copyFrom: 1 to: stream position - 1! !!Time class methodsFor: 'squeak protocol' stamp: 'jmv 11/1/2011 23:13'!fromString: aString	^ self readFrom: (ReadStream on: aString)! !!WeakSet methodsFor: 'inspecting' stamp: 'jmv 11/1/2011 23:07'!inspectorClass 	^ WeakSetInspector! !!Workspace methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:27'!shouldStyle	^shouldStyle ifNil: [ Preferences shoutInWorkspaces]! !!Workspace methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:26'!shoutAboutToStyle: aSHTextStyler	"This is a notification that aSHTextStyler is about to re-style its text."	self shouldStyle ifFalse: [ ^false ].	aSHTextStyler 		classOrMetaClass: nil;		workspace: self.	^true! !!Workspace methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:27'!toggleStyling	shouldStyle _ self shouldStyle not.	actualContents _ actualContents asString asText.	self changed: #actualContents! !!Workspace methodsFor: 'shout styling' stamp: 'jmv 11/1/2011 23:27'!toggleStylingLabel	^self shouldStyle 		ifTrue: [ '<on> syntax highlighting' ]		ifFalse: [ '<off> syntax highlighting' ]! !!Workspace reorganize!('initialize-release' initialize)('binding' bindingNamesDo: bindingOf: hasBindingOf: hasBindingThatBeginsWith: initializeBindings)('drag and drop' acceptDroppingMorph:event:inMorph:)('code pane menu' autoCompleter editorClass)('variable declarations' mustDeclareVariableWording toggleVariableDeclarationMode)('testing' is:)('gui' openLabel:)('shout styling' shouldStyle shoutAboutToStyle: toggleStyling toggleStylingLabel)!!WeakSet reorganize!('public' add: collect: do: do:after: includes: like: printElementsOn: remove:ifAbsent: size slowSize)('private' fixCollisionsFrom: grow growTo: init: rehash scanFor:)('inspecting' inspectorClass)!!Time class reorganize!('benchmarks' benchmarkMillisecondClock benchmarkPrimitiveResponseDelay)('general inquiries' condenseBunches: humanWordsForSecondsAgo: millisecondClockMask millisecondClockValue milliseconds:since: millisecondsSince: millisecondsToRun: namesForTimes: totalSeconds)('smalltalk-80' dateAndTimeFromSeconds: dateAndTimeNow fromSeconds: new primMillisecondClock primSecondsClock readFrom:)('squeak protocol' current fromString: hour:minute:second: hour:minute:second:nanoSecond: midnight noon seconds: seconds:nanoSeconds:)('ansi protocol' milliSecondsSinceMidnight now)('clock' initializeMillisecondClockMask primMicrosecondClock primMillisecondClockMask secondsWhenClockTicks)!TextModelMorph removeSelector: #removeCharacterStyles!!TextModelMorph reorganize!('accessing' editor textMorph wrapFlag:)('dependents access' canDiscardEdits)('drawing' drawOn: wantsFrameAdornments)('editor access' clearSelection handleEdit: scrollSelectionIntoView scrollSelectionIntoView: selectAll)('event handling' doubleClick: handlesKeyboard keyStroke: mouseEnter: tripleClick:)('geometry' bottom innerHeight: resizeScroller scrollDeltaHeight top)('initialization' acceptOnCR: initialize model:)('interactive error protocol' correctFrom:to:with: correctSelectionWithString: nextTokenFrom:direction: notify:at:in: selectFrom:to: selectInvisiblyFrom:to: selectionInterval)('menu commands' accept browseIt cancel chooseAlignment classCommentsContainingIt copySelection cut debugIt doIt explain exploreIt fileItIn find findAgain implementorsOfIt inspectIt methodSourceContainingIt methodStringsContainingit offerFontMenu offerUndoHistory paste pasteRecent pasteString printIt redo referencesToIt sendersOfIt setSearchString undo)('model access' setSelection: setTextColor: text)('transcript' replaceSelectionWith:)('unaccepted edits' askBeforeDiscardingEdits: hasEditingConflicts hasEditingConflicts: hasUnacceptedEdits:)('updating' update:)('scrolling' hTotalScrollRange mightNeedHorizontalScrollBar)('focus handling' focusText)('menu' getMenu)('shout' autoCompleter: styler: stylerStyled)('notifications' possiblyChanged)('testing' is:)('*Styled Text')!!SystemVersion reorganize!('accessing' date date: datedVersion highestUpdate highestUpdate: includesUpdate: registerUpdate: resetHighestUpdate unregisterUpdate: updates version version:)('initialize' initialize)('printing' majorMinorVersion printOn:)!!Symbol reorganize!('accessing' at:put: precedence replaceFrom:to:with:startingAt:)('comparing' =)('copying' clone copy shallowCopy)('converting' asString asSymbol capitalized)('printing' print storeOn:)('system primitives' flushCache numArgs:)('private' errorNoModification species string: stringhash)('testing' isInfix isKeyword isLiteral isPvtSelector isSymbol isUnary)('uCompletion' separateKeywords)!!String reorganize!('accessing' at: at:put: byteAt: byteAt:put: byteSize do:toFieldNumber: endsWithDigit findAnySubStr:startingAt: findBetweenSubStrs: findCloseParenthesisFor: findDelimiters:startingAt: findLastOccurrenceOfString:startingAt: findString: findString:startingAt: findString:startingAt:caseSensitive: findTokens: findTokens:includes: findTokens:keep: findWordStart:startingAt: includesSubString: includesSubstring:caseSensitive: indexOf: indexOf:startingAt: indexOf:startingAt:ifAbsent: indexOfAnyOf: indexOfAnyOf:ifAbsent: indexOfAnyOf:startingAt: indexOfAnyOf:startingAt:ifAbsent: indexOfSubCollection:startingAt:ifAbsent: lineCorrespondingToIndex: lineCount lineIndicesDo: lineNumber: lines linesDo: skipAnySubStr:startingAt: skipDelimiters:startingAt: startsWithDigit tabDelimitedFieldsDo:)('comparing' < <= = > >= alike: beginsWith: caseInsensitiveLessOrEqual: caseSensitiveLessOrEqual: commonPartWith:startAt:stopAt:applying: commonPrefixWith: compare: compare:caseSensitive: crc16 endsWith: endsWithAnyOf: hash match: sameAs: startingAt:match:startingAt:)('copying' , copyReplaceTokens:with: padded:to:with:)('converting' adaptToCollection:andSend: adaptToNumber:andSend: adaptToPoint:andSend: asCamelCase asCharacter asDate asFileName asFourCode asHex asIdentifier: asInteger asLegalSelector asLowercase asNumber asPacked asSignedInteger asSmalltalkComment asString asStringOrText asSymbol asText asUnaccented asUppercase base64Decoded base64Encoded capitalized contractTo: correctAgainst: correctAgainst:continuedFrom: correctAgainstDictionary:continuedFrom: findSelector initialIntegerOrNil iso8859s15ToUtf8 keywords numericSuffix onlyLetters periodPrefixAndSuffix romanNumber sansPeriodSuffix splitInteger squeezedTo: stemAndNumericSuffix substrings surroundedBySingleQuotes translateFrom:to:table: translateToLowercase translateToUppercase translateWith: truncateTo: truncateWithElipsisTo: unparenthetically unzipped utf8ToISO8859s15 withBlanksCondensed withBlanksTrimmed withFirstCharacterDownshifted withLineEndings: withNoLineLongerThan: withSeparatorsCompacted withSqueakLineEndings withoutLeadingDigits withoutTrailingBlanks withoutTrailingDigits)('displaying' displayAt: displayOn: displayOn:at: displayOn:at:textColor: displayProgressAt:from:to:during:)('printing' encodeDoublingQuoteOn: isLiteral print printOn: storeOn: stringRepresentation)('private' correctAgainstEnumerator:continuedFrom: evaluateExpression:parameters: getEnclosedExpressionFrom: replaceFrom:to:with:startingAt: stringhash)('system primitives' compare:with:collated: findSubstring:in:startingAt:matchTable: numArgs)('Celeste' withCRs)('internet' decodeMimeHeader decodeQuotedPrintable unescapePercents withoutQuoting)('testing' hasAccents hasContentsInExplorer isAllDigits isAllSeparators isString lastSpacePosition)('paragraph support' encompassLine: encompassParagraph: endOfParagraphBefore: indentationIfBlank:)('arithmetic' * + - / // \\)('encoding' getInteger32: putInteger32:at:)('user interface' edit)('formatting' format:)('uCompletion' separateKeywords)!!Dictionary reorganize!('accessing' associationAt: associationAt:ifAbsent: associations at: at:ifAbsent: at:ifAbsentPut: at:ifPresent: at:ifPresentAndInMemory: at:put: customizeExplorerContents keyAtIdentityValue: keyAtIdentityValue:ifAbsent: keyAtValue: keyAtValue:ifAbsent: keys keysSortedSafely values)('testing' hasBindingThatBeginsWith: hasContentsInExplorer includes: includesIdentity: includesKey: keyForIdentity: occurrencesOf:)('adding' add: addAll: declare:from:)('removing' keysAndValuesRemove: remove: remove:ifAbsent: removeKey: removeKey:ifAbsent: removeUnreferencedKeys unreferencedKeys)('enumerating' associationsDo: collect: do: keysAndValuesDo: keysDo: select: valuesDo:)('printing' printElementsOn: storeOn:)('private' copy errorKeyNotFound errorValueNotFound keyAt: noCheckAdd: rehash scanFor: valueAtNewKey:put:atIndex:declareFrom:)('user interface' explorerContentsWithIndexCollect:)('comparing' =)('inspecting' inspectorClass)('compiling' bindingOf: bindingsDo:)!!Set reorganize!('accessing' atRandom: like: size someElement)('adding' add: add:withOccurrences:)('converting' asSet)('copying' copy)('enumerating' collect: do: doWithIndex: union:)('objects from disk' comeFullyUpOnReload:)('private' array atNewIndex:put: findElementOrNil: fixCollisionsFrom: fullCheck grow growSize init: keyAt: noCheckAdd: rehash scanFor: swap:with: withArray:)('removing' copyWithout: remove:ifAbsent:)('testing' = includes: occurrencesOf:)('explorer' hasContentsInExplorer)('inspecting' inspectorClass)!!OrderedCollection reorganize!('accessing' at: at:put: size)('copying' copyEmpty copyFrom:to: copyReplaceFrom:to:with: copyWith: reversed)('adding' add: add:after: add:afterIndex: add:before: add:beforeIndex: addAll: addAllFirst: addAllFirstUnlessAlreadyPresent: addAllLast: addFirst: addLast: at:ifAbsentPut: grow growSize)('removing' remove:ifAbsent: removeAll removeAllSuchThat: removeAt: removeFirst removeFirst: removeLast removeLast:)('enumerating' collect: collect:from:to: do: reverseDo: select: with:collect: withIndexCollect:)('private' collector errorNoSuchElement find: insert:before: makeRoomAtFirst makeRoomAtLast removeIndex: reset resetTo: setCollection: setContents:)('testing' hasContentsInExplorer)('sorting' sort sort: sorted:)('inspecting' inspectorClass)!!FloatArray reorganize!('accessing' at: at:put: defaultElement length squaredLength)('arithmetic' * *= + += - -= / /= adaptToNumber:andSend: dot: negated normalize \\=)('comparing' = hash)('primitives-plugin' primAddArray: primAddScalar: primDivArray: primDivScalar: primMulArray: primMulScalar: primSubArray: primSubScalar: sum)('converting' asFloatArray)('private' replaceFrom:to:with:startingAt:)('testing' is:)('inspecting' inspectorClass)!!CompiledMethod reorganize!('initialize-release' copyWithTrailerBytes: needsFrameSize:)('accessing' clearFlag defaultSelector endPC flag flushCache frameSize initialPC methodClass methodClass: methodClassAssociation methodReference numArgs numLiterals numTemps primitive properties properties: returnField scanner searchForClass searchForSelector selector selector: trailer)('comparing' = equivalentTo:)('testing' hasNewPropertyFormat hasReportableSlip is: isAbstract isBlueBookCompiled isClosureCompiled isConflict isDisabled isDisabled: isExplicitlyRequired isExplicitlyRequired: isImplicitlyRequired isImplicitlyRequired: isInstalled isProvided isProvided: isQuick isRequired isRequired: isReturnField isReturnSelf isReturnSpecial isSubclassResponsibility isSubclassResponsibility: usesClosureBytecodes)('printing' abstractSymbolic decompileString longPrintOn: longPrintOn:indent: longPrintRelativeOn:indent: primitiveErrorVariableName printOn: printOnStream: printPrimitiveOn: storeLiteralsOn:forClass: storeOn: symbolic symbolicLinesDo:)('literals' allLiterals hasLiteral: hasLiteralSuchThat: hasLiteralThorough: header headerDescription indexOfLiteral: literalAt: literalAt:put: literalStrings literals literalsDo: objectAt: objectAt:put: refersToLiteral: sendsSelector:)('scanning' hasInstVarRef messages messagesDo: messagesSequence readsField: readsRef: scanFor: scanLongLoad: scanLongStore: scanVeryLongLoad:offset: scanVeryLongStore:offset: sendsToSuper writesField: writesRef:)('source code management' checkOKToAdd:at:in: copyWithTempNames: copyWithTempsFromMethodNode: destroySourcePointer fileIndex filePosition getPreambleFrom:at: getSource getSourceFor:in: getSourceFromFile holdsTempNames linesOfCode putSource:fromParseNode:class:category:inFile:priorMethod: putSource:fromParseNode:class:category:withStamp:inFile:priorMethod: putSource:fromParseNode:inFile:withPreamble: qCompress: qDecompressFrom: setMySourcePointer: setSourcePointer: setSourcePosition:inFile: sourceClass sourceFileStream sourcePointer sourceSelector tempNamesString)('file in/out' objectForDataStream: readDataFrom:size: storeDataOn: zapSourcePointer)('evaluating' valueWithReceiver:arguments:)('decompiling' compilerClass decompile decompileWithTemps decompilerClass methodNode parserClass)('breakpoints' hasBreakpoint)('code analysis' scanForEqSmallConstant)('debugger support' abstractPCForConcretePC: blockExtentsInto:from:to:scanner:numberer: blockExtentsToTempsMap debuggerMap mapFromBlockKeys:toSchematicTemps: pcPreviousTo: startpcsToBlockExtents tempsSubSequenceFrom:)('private' markerOrNil penultimateLiteral penultimateLiteral: replace:with:in:)('accessing-pragmas & properties' pragmaAt: pragmas propertyKeysAndValuesDo: propertyValueAt: propertyValueAt:ifAbsent: propertyValueAt:put: removeProperty: removeProperty:ifAbsent:)('closures' containsBlockClosures embeddedBlockClosures)('tracing' outboundPointersDo:)('converting' asString)('time stamp' author dateAndtime dateMethodLastSubmitted dateSortingValue timeStamp timeStampPartsDo:)('inspecting' explorerContents inspectorClass)!!SequenceableCollection reorganize!('accessing' after: after:ifNone: allButFirst allButFirst: allButLast allButLast: anyOne at:ifAbsent: at:incrementBy: atAll: atAll:put: atAll:putAll: atAllPut: atLast: atLast:ifAbsent: atLast:put: atPin: atRandom: atWrap: atWrap:put: before: before:ifNone: customizeExplorerContents eighth fifth first first: fourth from:to:put: identityIndexOf: identityIndexOf:ifAbsent: indexOf: indexOf:ifAbsent: indexOf:startingAt: indexOf:startingAt:ifAbsent: indexOfSubCollection:startingAt: indexOfSubCollection:startingAt:ifAbsent: integerAt: integerAt:put: last last: lastIndexOf: lastIndexOf:ifAbsent: lastIndexOf:startingAt:ifAbsent: middle ninth penultimate replaceAll:with: replaceFrom:to:with: replaceFrom:to:with:startingAt: second seventh sixth swap:with: third)('comparing' = hasEqualElements: hash)('converting' asArray asByteArray asColorArray asFloatArray asIntegerArray asPointArray asStringWithCr asWordArray concatenation isSequenceable readStream reverse reversed writeStream @)('copying' , copyAfter: copyAfterLast: copyEmpty copyFrom:to: copyLast: copyReplaceAll:with: copyReplaceFrom:to:with: copyUpThrough: copyUpTo: copyUpToLast: copyWith: copyWithFirst: copyWithoutFirst copyWithoutIndex: forceTo:paddingStartWith: forceTo:paddingWith: shallowCopy shuffled shuffledBy:)('enumerating' allButFirstDo: allButLastDo: asDigitsToPower:do: collect: collect:from:to: collectWithIndex: combinations:atATimeDo: do: do:separatedBy: do:without: doWithIndex: findBinary: findBinary:do:ifNone: findBinaryIndex: findBinaryIndex:do:ifNone: findFirst: findLast: from:to:do: groupsOf:atATimeCollect: groupsOf:atATimeDo: keysAndValuesDo: pairsCollect: pairsDo: permutationsDo: polynomialEval: replace: reverseDo: reverseWith:do: select: upTo: with:collect: with:do: with:reverseDo: withIndexCollect: withIndexDo:)('private' asDigitsAt:in:do: checkedAt: combinationsAt:in:after:do: copyReplaceAll:with:asTokens: errorFirstObject: errorOutOfBounds permutationsStartingAt:do:)('removing' remove:ifAbsent:)('testing' beginsWith: endsWith: includes:)('gui' do:displayingProgress:)!!PositionableStream reorganize!('accessing' back contents contentsOfEntireFile crLfNextLine last next: next:into: next:into:startingAt: next:putAll: next:putAll:startingAt: nextAvailable: nextDelimited: nextInto: nextInto:startingAt: nextKeyword nextLine nextWordsInto: oldBack oldPeekBack originalContents peek peekBack peekFor: untilAnySatisfying: upTo: upToAll: upToAny: upToEnd)('testing' atEnd isBinary isEmpty notEmpty)('positioning' backUpTo: match: padTo:put: padToNextLongPut: position position: reset resetContents setToEnd skip: skipTo:)('fileIn/Out' backChunk checkForPreamble: copyMethodChunkFrom: fileIn fileInAnnouncing: nextChunk nextChunkText skipSeparators skipStyleChunk unCommand)('private' collectionSpecies on: positionError setFrom:to:)('nonhomogeneous accessing' nextInt32 nextInt32Put: nextLittleEndianNumber: nextLittleEndianNumber:put: nextNumber: nextNumber:put: nextString nextStringOld nextStringPut: nextWord nextWordPut:)('converting' asBinaryOrTextStream asZLibReadStream)('data get/put' boolean boolean: int16 int16: int32 int32: string string: uint16 uint16: uint24 uint24: uint32 uint32:)('filein/out' copyPreamble:from:at:)('gui' untilEnd:displayingProgress:)!!PluggableTextModel reorganize!('accessing' actualContents textGetter:textSetter:selectionGetter: textProvider)('testing' is: refusesToAccept wantsFrameAdornments)('misc' autoSelectString getSelection refetch)('pane menu' autoCompleter editorClass)('updating' update:)('commands' acceptFrom:)('initialize-release' initWith:)('shout styling' shoutAboutToStyle:)!!Integer reorganize!('testing' even isInteger isPowerOfTwo isPrime isProbablyPrime)('arithmetic' * + - / // alignedTo: crossSumBase: quo: reciprocalModulo: \\\)('comparing' < <= = > >= hash)('truncation and round off' asLargerPowerOfTwo asPowerOfTwo asSmallerPowerOfTwo atRandom atRandom: ceiling floor normalize rounded truncated)('enumerating' timesRepeat:)('mathematical functions' factorial gcd: lcm: ln log nthRoot: nthRootTruncated: raisedTo:modulo: raisedToInteger:modulo: sqrt sqrtFloor take:)('bit manipulation' << >> allMask: anyBitOfMagnitudeFrom:to: anyMask: bitAnd: bitAt: bitAt:put: bitClear: bitInvert bitInvert32 bitOr: bitReverse: bitShift: bitShiftMagnitude: bitXor: highBit highBitOfMagnitude lowBit noMask:)('converting' adaptToFraction:andSend: asCharacter asColorOfDepth: asFloat asFraction asHexDigit asInteger asIntegerOrFloat)('printing' asBytesDescription asStringThousandSeparator:includePlusSign: asStringWithCommas asStringWithCommasSigned asTwoCharacterString asWords destinationBuffer: digitBuffer: hex hex8 isLiteral numberOfDigitsInBase: printOn: printOn:base:showRadix: printOn:showingDecimalPlaces: printPaddedWith:to: printPaddedWith:to:base: printString printStringRadix: radix:)('system primitives' lastDigit replaceFrom:to:with:startingAt:)('private' copyto: digitAdd: digitCompare: digitDiv:neg: digitLogic:op:length: digitLshift: digitMultiply:neg: digitRshift:bytes:lookfirst: digitSubtract: growby: growto: isProbablyPrimeWithK:andQ: montgomeryRaisedTo:times:modulo:mInvModB: montgomeryTimes:modulo:mInvModB: print:on:prefix:length:padded: romanDigits:for:on: slidingLeftRightRaisedTo:modulo:)('benchmarks' benchFib benchmark tinyBenchmarks)('tiles' asPrecedenceName)('intervals' integersTo:count:)('printing-numerative' printOn:base: printOn:base:length:padded: printOn:base:nDigits: printStringBase:length:padded: printStringHex printStringLength: printStringLength:padded: printStringPadded: printStringRoman storeOn:base: storeOn:base:length:padded: storeStringBase:length:padded: storeStringHex)('inspecting' explorerContents hasContentsInExplorer)!!Number reorganize!('arithmetic' * + - / // abs arg negated quo: reciprocal rem: \\)('mathematical functions' arCosh arSinh arTanh arcCos arcSin arcTan arcTan: copySignTo: cos cosh degreeCos degreeSin exp floorLog: interpolateTo:at: ln log log: magnitude nthRoot: raisedTo: raisedToInteger: sign: sin sinh sqrt squared tan tanh)('truncation and round off' ceiling detentBy:atMultiplesOf:snap: floor fractionPart integerPart reduce roundDownTo: roundTo: roundUpTo: rounded truncateTo: truncated)('testing' even isDivisibleBy: isInfinite isNaN isNonZero isNumber isZero negative odd positive sign strictlyPositive)('converting' adaptToCollection:andSend: adaptToComplex:andSend: adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend: adaptToPoint:andSend: asB3DVector3 asComplex asInteger asIntegerOrFloat asNumber asPoint asSmallAngleDegrees asSmallPositiveDegrees days degreesToRadians hours i milliSeconds minutes nanoSeconds radiansToDegrees seconds weeks withNegativeSign @)('intervals' to: to:by: to:by:do: to:count: to:do:)('printing' isOrAreStringWith: printOn: printOn:base: printOn:showingDecimalPlaces: printShowingDecimalPlaces: printString printStringBase: storeOn: storeOn:base: storeStringBase:)('comparing' closeTo:)!MouseButtonEvent removeSelector: #whichButton!!MouseButtonEvent reorganize!('accessing' mouseButton1Changed mouseButton2Changed mouseButton3Changed)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' storeOn:)('private' setType:position:which:buttons:hand:stamp:)!!MethodContext reorganize!('initialize-release' privRefresh privRefreshWith:)('accessing' activeHome activeOuterContext closure contextForLocalVariables hasInstVarRef hasMethodReturn home isExecutingBlock method methodReturnContext outerContext receiver removeSelf tempAt: tempAt:put:)('private' aboutToReturn:through: instVarAt:put: setSender:receiver:method:arguments: setSender:receiver:method:closure:startpc: startpc)('private-exceptions' isHandlerContext isUnwindContext receiver: restartWithNewReceiver: swapReceiver:)('private-debugger' cachesStack hideFromDebugger)('printing' printDetails: printOn: printString)('closure support' asContext contextTag isClosureContext)('nil' cannotReturn:)('instruction decoding (closures)' blockReturnTop pushConsArrayWithElements:)('system simulation' pushArgs:from:)('testing' atEnd isMethodContext)('inspecting' inspectorClass)!!MessageSet reorganize!('message list' addItem: growable messageList messageListIndex: selectedMessageName sortByDate)('message functions' deleteFromMessageList: methodCategoryChanged reformulateList removeMessage removeMessageFromBrowser)('class list' metaClassIndicated selectedClass selectedClassName selectedClassOrMetaClass selectedMessageCategoryName)('contents' acceptedStringOrText selectedMessage)('private' autoSelectString autoSelectString: contents:notifying: initializeMessageList: selection setClassAndSelectorIn: setFilteredList:)('filtering' filterFrom: filterToAnyChangeSet filterToCommentedMethods filterToCurrentAuthor filterToCurrentChangeSet filterToImplementorsOf filterToMessagesInChangesFile filterToMessagesInSourcesFile filterToMessagesThat filterToMessagesWithPriorVersions filterToMessagesWithoutPriorVersions filterToNotAnyChangeSet filterToNotCurrentAuthor filterToNotCurrentChangeSet filterToNotImplementorsOf filterToNotSendersOf filterToSendersOf filterToUncommentedMethods filterToUnsentMessages)('message category functions' canShowMultipleMessageCategories)('metaclass' classCommentIndicated)('accessing' labelString reformulateListNoting:)('shout styling' shoutAboutToStyle:)!!FileContentsBrowser reorganize!('accessing' acceptedStringOrText contents:notifying: contentsSymbol selectedPackage thePackage:)('removing' removeClass removeMessage removeMessageCategory removeUnmodifiedCategories removeUnmodifiedClasses removeUnmodifiedMethods)('class list' classList renameClass selectedClass)('edit pane' selectedBytecodes selectedMessage)('diffs' methodDiffFor:class:selector:meta: modifiedClassDefinition)('fileIn/fileOut' fileInClass fileInMessage fileInMessageCategories fileInPackage fileIntoNewChangeSet fileOutClass fileOutMessage fileOutMessageCategories fileOutPackage)('infoView' annotation extraInfo infoViewContents packageInfo: updateInfoView)('metaclass' selectedClassOrMetaClass setClassOrganizer)('other' changeMessageCategories: didCodeChangeElsewhere labelString)('menus' contentsSymbolQuints)('initialize-release' defaultBrowserTitle)('shout styling' shoutAboutToStyle:)!Exception removeSelector: #searchFrom:!!Exception reorganize!('exceptionBuilder' messageText: tag:)('exceptionDescription' defaultAction description messageText tag)('handling' isNested outer pass rearmHandlerDuring: resignalAs: resume resume: resumeUnchecked: retry retryUsing: return return:)('printing' printOn: receiver signalerContext)('signaling' signal signal:)('priv handling' isResumable privHandlerContext:)('Camp Smalltalk' sunitExitWith:)('defaults' defaultResumeValue)!!Debugger reorganize!('initialize' errorWasInUIProcess: openFullMorphicLabel: openFullNoSuspendLabel: openNotifierContents:label: windowIsClosing)('accessing' acceptedStringOrText contents:notifying: contextVariablesInspector debuggerMap interruptedContext interruptedProcess isNotifier labelString labelString: proceedValue proceedValue: receiver receiverInspector receiverInspectorObject:context:)('notifier menu' storeLog)('context stack (message list)' contextStackIndex contextStackList expandStack fullyExpandStack messageListIndex selectedMessage selectedMessageName toggleContextStackIndex:)('context stack menu' askForCategoryIn:default: doStep down fullStack implement:inClass: peelToFirst proceed restart returnValue: selectPC send stepIntoBlock up where)('code pane' contentsSelection doItContext doItReceiver pc pcRange)('code pane menu' runToSelection:)('message category list' selectedMessageCategoryName)('class list' selectedClass selectedClassOrMetaClass)('dependents access' updateInspectors wantsSteps)('private' checkContextSelection contextStackIndex:oldContextWas: externalInterrupt: lowSpaceChoices newStack: process:controller:context: resetContext: resumeProcess selectedContext)('breakpoints' toggleBreakOnEntry)('shout styling' shoutAboutToStyle:)!!Collection reorganize!('accessing' anyOne atRandom size)('adapting' adaptToCollection:andSend: adaptToNumber:andSend: adaptToPoint:andSend:)('adding' add: add:withOccurrences: addAll:)('arithmetic' * + - / // raisedTo: \\)('comparing' hash)('converting' asArray asBag asByteArray asCharacterSet asIdentitySet asIdentitySkipList asOrderedCollection asSet asSkipList asSkipList: asSortedArray asSortedCollection asSortedCollection:)('copying' , copyWith: copyWithDependent: copyWithout: copyWithoutAll:)('enumerating' allSatisfy: anySatisfy: associationsDo: collect: collect:andFold: collect:thenSelect: count: detect: detect:ifFound:ifNone: detect:ifNone: detectMax: detectMin: detectSum: difference: do: do:separatedBy: do:without: explorerContents explorerContentsWithIndexCollect: fold: groupBy:having: inject:into: intersection: noneSatisfy: reduce: reject: select: select:thenCollect: union:)('filter streaming' contents)('math functions' abs arcCos arcSin arcTan average ceiling cos degreeCos degreeSin exp floor ln log max median min negated range reciprocal roundTo: rounded sign sin sqrt squared sum sum: tan truncated)('printing' printElementsOn: printNameOn: printOn: storeOn:)('private' emptyCheck errorCollectionToSmall errorEmptyCollection errorNoMatch errorNotFound: errorNotKeyed toBraceStack:)('removing' remove: remove:ifAbsent: removeAll: removeAllFoundIn: removeAllSuchThat:)('testing' identityIncludes: ifEmpty: ifEmpty:ifNotEmpty: ifNotEmpty: ifNotEmpty:ifEmpty: includes: includesAllOf: includesAnyOf: includesSubstringAnywhere: isCollection isEmpty isEmptyOrNil isSequenceable isZero notEmpty occurrencesOf:)('sorting' sorted:)!!ChangeSorter reorganize!('creation' setDefaultChangeSetCategory)('access' changeSet changeSetCategory currentHasPostscript currentHasPreamble label labelString methodInfoFromRemoval: myChangeSet myChangeSet: parent parent: parenthesizedCategoryName showChangeSet: showChangeSetNamed:)('changeSet menu' addPreamble changeSetList checkThatSidesDiffer: copyAllToOther currentCngSet editPostscript fileOut mainButtonName methodConflicts methodConflictsWithOtherSide newCurrent newSet remove removePostscript removePreamble removePrompting: rename submergeIntoOtherSide subtractOtherSide trimHistory update updateIfNecessary viewAffectedClassCategories)('class list' classList copyClassToOther currentClassName currentClassName: fileOutClass forgetClass moveClassToOther selectedClass selectedClassOrMetaClass)('message list' copyMethodToOther currentSelector currentSelector: forget messageList moveMethodToOther removeFromCurrentChanges removeMessage selectedMessageName)('code pane' acceptedStringOrText contents:notifying: toggleDiffing)('annotation' addPriorVersionsCountForSelector:ofClass:to:)('self-updating' stepIn:)('shout styling' shoutAboutToStyle:)!!ChangeList reorganize!('initialization-release' addItem:text: initialize wantsPrettyDiffOption)('scanning' scanCategory scanCategory:class:meta:stamp: scanFile:from:to:)('menu actions' compareToCurrentVersion currentVersionsOfSelections deselectAll destroyCurrentCodeOfSelections fileInSelections fileOutSelections invertSelections removeDoIts removeEmptyClassComments removeExistingMethodVersions removeNonSelections removeOlderMethodVersions removeSelections selectAll selectAllConflicts selectConflicts selectConflicts: selectConflictsWith selectEquivalentMethods selectMethodsForAbsentClasses selectMethodsForThisClass selectNewMethods selectRemovalsOfSent selectSuchThat: selectUnchangedMethods xtraVersion)('viewing access' acceptedStringOrText annotation contentsDiffedFromCurrent contentsSymbolQuints diffedVersionContents list listIndex listSelectionAt: listSelectionAt:put: selectedClass selectedClassOrMetaClass selectedMessageName toggleListIndex: undiffedContents)('accessing' changeList currentChange file showsVersions)('shout styling' shoutAboutToStyle:)!!Browser reorganize!('accessing' acceptedStringOrText contents:notifying: contentsSelection doItReceiver editSelection editSelection: request:initialAnswer:)('annotation' annotation)('breakpoints' toggleBreakOnEntry)('class comment pane' newClassComment:)('class functions' addAllMethodsToCurrentChangeSet classCommentText classDefinitionText copyClass createInstVarAccessors defineClass:notifying: editClass editComment explainSpecial: fileOutClass hierarchy makeNewSubclass plusButtonHit removeClass renameClass)('class list' classList classListIndex classListIndex: recent selectClass: selectedClass selectedClassName)('code pane' compileMessage:notifying:)('initialize-release' defaultBrowserTitle labelString methodCategoryChanged setClass:selector: setSelector: systemOrganizer:)('message category functions' addCategory alphabetizeMessageCategories canShowMultipleMessageCategories categoryOfCurrentMethod changeMessageCategories: editMessageCategories fileOutMessageCategories removeEmptyCategories removeMessageCategory renameCategory showHomeCategory)('message category list' categorizeAllUncategorizedMethods messageCategoryList messageCategoryListIndex messageCategoryListIndex: messageCategoryListSelection rawMessageCategoryList selectOriginalCategoryForCurrentMethod selectedMessageCategoryName setOriginalCategoryIndexForCurrentMethod)('message functions' defineMessageFrom:notifying: removeMessage removeMessageFromBrowser)('message list' messageList messageListIndex messageListIndex: reformulateList selectedMessage selectedMessageName selectedMessageName:)('metaclass' classCommentIndicated classMessagesIndicated classOrMetaClassOrganizer indicateClassMessages indicateInstanceMessages instanceMessagesIndicated metaClassIndicated metaClassIndicated: selectedClassOrMetaClass setClassOrganizer)('system category functions' addSystemCategory alphabetizeSystemCategories changeSystemCategories: editSystemCategories fileOutSystemCategory moveSystemCategoryBottom moveSystemCategoryDown moveSystemCategoryTop moveSystemCategoryUp potentialClassNames removeSystemCategory renameSystemCategory systemCategoryBrowser updateSystemCategories)('system category list' indexIsOne indexIsOne: selectCategoryForClass: selectedEnvironment selectedSystemCategoryName systemCategoryList systemCategoryListIndex systemCategoryListIndex: systemCategorySingleton)('shout styling' shoutAboutToStyle:)!!CodeProvider reorganize!('annotation' addPriorVersionsCountForSelector:ofClass:to: annotation annotationForClassCommentFor: annotationForClassDefinitionFor: annotationForHierarchyFor: annotationForSelector:ofClass: annotationRequests annotationSeparator)('categories' categoryFromUserWithPrompt:for: categoryOfCurrentMethod changeCategory letUserReclassify:in: methodCategoryChanged selectedMessageCategoryName)('contents' acceptedContentsChanged acceptedStringOrText commentContents contentsSymbol contentsSymbol:)('commands' adoptMessageInCurrentChangeset hierarchyBrowser removeClass)('controls' contentsSymbolQuints sourceAndDiffsQuintsOnly)('diffs' defaultDiffsSymbol diffFromPriorSourceFor: shouldDiffWords showDiffs: showLineDiffs: showPrettyLineDiffs: showPrettyWordDiffs: showWordDiffs: showingAnyKindOfDiffs showingAnyKindOfPrettyDiffs showingLineDiffs showingLineDiffsString showingPrettyLineDiffs showingPrettyLineDiffsString showingPrettyWordDiffs showingPrettyWordDiffsString showingWordDiffs showingWordDiffsString toggleDiffing toggleLineDiffing togglePlainSource togglePrettyLineDiffing togglePrettyPrint togglePrettyWordDiffing toggleWordDiffing)('misc' isThereAnOverride isThisAnOverride okayToAccept priorSourceOrNil releaseCachedState setClassAndSelectorIn:)('self-updating' didCodeChangeElsewhere stepIn: updateListsAndCodeIn: updatePaneIfNeeded wantsSteps)('what to show' prettyPrintString showByteCodes: showComment showDecompile: showDocumentation: showingByteCodes showingByteCodesString showingDecompile showingDecompileString showingDocumentation showingDocumentationString showingPlainSource showingPlainSourceString showingPrettyPrint showingSource toggleDecompile toggleShowDocumentation toggleShowingByteCodes)('message list' decompiledSource selectedBytecodes selectedMessage sourceStringPrettifiedAndDiffed validateMessageSource:forSelector:inClass:)('message list menu' copySelector fileOutMessage removeFromCurrentChanges revertAndForget revertToPreviousVersion timeStamp unusedMethods)('message category functions' canShowMultipleMessageCategories)('testing' is: refusesToAccept)('code pane menu' autoCompleterClass editorClass)('accessing' currentCompiledMethod selectedClass selectedClassOrMetaClass selectedMessageName)('evaluation' doItContext)('shout styling' isModeStyleable shoutAboutToStyle:)!!ClassDescription reorganize!('initialize-release' doneCompiling obsolete superclass:methodDictionary:format: updateInstances:from:isMeta: updateInstancesFrom:)('accessing' classVersion comment comment: comment:stamp: hasComment theMetaClass theNonMetaClass)('copying' copy:from: copy:from:classified: copyAll:from: copyAll:from:classified: copyAllCategoriesFrom: copyCategory:from: copyCategory:from:classified: copyMethodDictionaryFrom:)('printing' classVariablesString instanceVariablesString printOn: printWithClosureAnalysisOn: sharedPoolsString storeOn:)('instance variables' addInstVarName: allInstVarNamesEverywhere browseClassVarRefs checkForInstVarsOK: chooseClassVarName chooseInstVarAlphabeticallyThenDo: chooseInstVarThenDo: classThatDefinesClassVariable: classThatDefinesInstanceVariable: forceNewFrom: instVarNameForIndex: instVarNames removeInstVarName: renameInstVar:to: renameSilentlyInstVar:to: replaceSilently:to:)('accessing method dictionary' addAndClassifySelector:withMethod:inProtocol:notifying: addSelector:withMethod:notifying: allMethodCategoriesIntegratedThrough: induceMDFault methodsInCategory: recoverFromMDFault recoverFromMDFaultWithTrace removeCategory: removeSelector: ultimateSourceCodeAt:ifAbsent:)('organization' category category: organization organization: whichCategoryIncludesSelector: zapOrganization)('compiling' acceptsLoggingOfCompilation compile:classified: compile:classified:notifying: compile:classified:withStamp:notifying: compile:classified:withStamp:notifying:logSource: compile:notifying: compileSilently:classified: compileSilently:classified:notifying: instVarNamesAndOffsetsDo: moveInstVarNamed:to:after: noteCompilationOf:meta: wantsChangeSetLogging wantsRecompilationProgressReported)('fileIn/Out' classComment: classComment:stamp: commentFollows commentStamp: commentStamp:prior: definition definitionPreamble fileOutCategory: fileOutCategory:on:moveSource:toFile: fileOutChangedMessages:on: fileOutChangedMessages:on:moveSource:toFile: fileOutMethod: fileOutOn: fileOutOn:moveSource:toFile: fileOutOrganizationOn: methods methodsFor: methodsFor:priorSource:inFile: methodsFor:stamp: methodsFor:stamp:prior: moveChangesTo: printCategoryChunk:on: printCategoryChunk:on:priorMethod: printCategoryChunk:on:withStamp:priorMethod: printCategoryChunk:withStamp:on: printMethodChunk:withPreamble:on:moveSource:toFile: putClassCommentToCondensedChangesFile: reformatAll reformatMethodAt: reorganize)('private' errorCategoryName instVarMappingFrom: linesOfCode logMethodSource:forMethodWithNode:inCategory:withStamp:notifying: newInstanceFrom:variable:size:map: setInstVarNames:)('accessing class hierarchy' classesThatImplementAllOf: printSubclassesOn:level: removeUninstantiatedSubclassesSilently subclasses subclassesDo:)('method dictionary' allMethodsInCategory:)('system-support' allUnreferencedClassVariables)!!BlockContext reorganize!('initialize-release' home:startpc:nargs: privRefresh)('accessing' activeHome argumentCount caller closureHome contextForLocalVariables copyForSaving fixTemps hasInstVarRef hasMethodReturn home isBlock isExecutingBlock method methodReturnContext numArgs receiver reentrant tempAt: tempAt:put:)('controlling' doWhileFalse: doWhileTrue: repeat repeatWithGCIf: whileFalse whileFalse: whileTrue whileTrue:)('evaluating' bench durationToRun ifError: timeToRun value value: value:value: value:value:value: value:value:value:value: valueSupplyingAnswer: valueSupplyingAnswers: valueSuppressingAllMessages valueSuppressingMessages: valueSuppressingMessages:supplyingAnswers: valueWithArguments: valueWithEnoughArguments: valueWithExit valueWithPossibleArgs: valueWithPossibleArgument: valueWithPossibleArgument:and: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do: on:do:on:do: on:do:on:do:on:do: onDNU:do: valueUninterruptably)('instruction decoding' blockReturnTop)('printing' decompile decompileString fullPrintOn: printOn: printOnStream:)('scheduling' asContext fork forkAndWait forkAt: forkAt:named: forkNamed: newProcess newProcessWith: valueAt:)('system simulation' pushArgs:from: stepToSendOrReturn)('private' aboutToReturn:through: cannotReturn: copyTo:blocks: endPC hideFromDebugger instVarAt:put: myEnv privHome: startpc valueError valueUnpreemptively)('services' valueWithRequestor:)!!BlockClosure reorganize!('accessing' argumentCount copiedValueAt: home isBlock method numArgs numCopiedValues outerContext receiver size startpc)('controlling' repeat repeatWithGCIf: whileFalse whileFalse: whileNil: whileNotNil: whileTrue whileTrue:)('evaluating' bench durationToRun ifError: simulateValueWithArguments:caller: timeToRun timeToRunWithoutGC value value: value:value: value:value:value: value:value:value:value: valueAt: valueNoContextSwitch valueNoContextSwitch: valueSupplyingAnswer: valueSupplyingAnswers: valueSuppressingAllMessages valueSuppressingMessages: valueSuppressingMessages:supplyingAnswers: valueWithArguments: valueWithExit valueWithPossibleArgs: valueWithPossibleArgument: valueWithPossibleArgument:and: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do: on:do:on:do: on:do:on:do:on:do: onDNU:do: valueUninterruptably)('printing' decompile fullPrintOn: printOn: printStack:)('scheduling' asContext fork forkAndWait forkAt: forkAt:named: forkNamed: newProcess newProcessWith:)('private' asContextWithSender: copyForSaving grabProcessor grabProcessorFor:onTimeout: grabProcessorOnlyFor: reentrant valueUnpreemptively)('testing' hasMethodReturn isClean isClosure isDead)('error handing' numArgsError:)('initialize-release' outerContext:startpc:numArgs:copiedValues:)('events-support' asMinimalRepresentation isReceiverOrAnyArgumentGarbage)('debugger access' sender)('objects from disk' objectForDataStream:)('services' timeProfile valueWithRequestor:)!!Behavior reorganize!('initialize-release' obsolete superclass:methodDictionary:format:)('accessing' classDepth compilerClass decompilerClass evaluatorClass format methodDict name parserClass sourceCodeTemplate subclassDefinerClass typeOfClass)('testing' canZapMethodDictionary instSize instSpec isBehavior isBits isBytes isFixed isMeta isObsolete isPointers isVariable isWeak isWords shouldNotBeRedefined sourceMatchesBytecodeAt:)('copying' copyOfMethodDictionary postCopy)('printing' literalScannedAs:notifying: longPrintOn: printHierarchy printOn: printWithClosureAnalysisOn: storeLiteral:on:)('compiling' allowUnderscoreAssignments allowUnderscoreSelectors binding compile: compile:notifying: compileAll compileAllFrom: decompile: defaultMethodTrailer instVarNamesAndOffsetsDo: recompile: recompile:from: recompileChanges recompileNonResidentMethod:atSelector:from: variablesAndOffsetsDo:)('instance creation' adoptInstance: basicNew basicNew: initializedInstance new new:)('accessing class hierarchy' allSubclasses allSubclassesWithLevelDo:startingLevel: allSuperclasses subclasses superclass superclass: withAllSubclasses withAllSuperclasses)('accessing method dictionary' >> addSelector:withMethod: addSelector:withMethod:notifying: addSelectorSilently:withMethod: allSelectors changeRecordsAt: compiledMethodAt: compiledMethodAt:ifAbsent: compress firstCommentAt: firstPrecodeCommentFor: lookupSelector: methodDict: methodDictionary methodDictionary: methodHeaderFor: methodsDo: precodeCommentOrInheritedCommentFor: removeSelector: removeSelectorSilently: selectorAtMethod:setClass: selectors selectorsAndMethodsDo: selectorsDo: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: standardMethodHeaderFor: supermostPrecodeCommentFor: zapAllMethods)('accessing instances and variables' allClassVarNames allInstVarNames allInstances allSharedPools allSubInstances allowsSubInstVars classVarNames inspectAllInstances inspectSubInstances instVarNames instanceCount sharedPools someInstance)('testing class hierarchy' includesBehavior: inheritsFrom: kindOfSubclass)('testing method dictionary' allUnsentMessages bindingOf: canUnderstand: classBindingOf: hasMethods includesSelector: thoroughWhichSelectorsReferTo:special:byte: whichClassIncludesSelector: whichSelectorsAccess: whichSelectorsReferTo: whichSelectorsReferTo:special:byte: whichSelectorsStoreInto:)('enumerating' allInstancesDo: allSubInstancesDo: allSubclassesDo: allSubclassesDoGently: allSuperclassesDo: selectSuperclasses: withAllSubclassesDo: withAllSuperAndSubclassesDoGently: withAllSuperclassesDo:)('user interface' allLocalCallsOn: allUnreferencedInstanceVariables crossReference unreferencedInstanceVariables withAllSubAndSuperclassesDo:)('private' basicCompile:notifying:trailer:ifFail: basicRemoveSelector: becomeCompact becomeCompactSimplyAt: becomeUncompact flushCache indexIfCompact setFormat: spaceUsed)('system startup' shutDown shutDown: startUp startUp:)('obsolete subclasses' addObsoleteSubclass: obsoleteSubclasses removeAllObsoleteSubclasses removeObsoleteSubclass:)('as yet unclassified' environment)('methods' closuresInfoAt: stampAt:)('system-support' allCallsOn)!!Object reorganize!('Breakpoint' break)('accessing' addInstanceVarNamed:withValue: at: at:put: basicAt: basicAt:put: basicSize customizeExplorerContents size yourself)('as yet unclassified' revisar)('associating' ->)('binding' bindingOf:)('casing' caseOf: caseOf:otherwise:)('class membership' class isKindOf: isMemberOf: respondsTo:)('comparing' = closeTo: hash literalEqual: ~=)('converting' adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend: as: asOrderedCollection asString asStringOrText complexContents mustBeBoolean mustBeBooleanIn: withoutListWrapper)('copying' clone copy copyForClipboard copyFrom: copySameFrom: copyTwoLevel postCopy shallowCopy)('events-old protocol' addDependent: breakDependents changed: removeDependent: update:)('drag and drop' acceptDroppingMorph:event:inMorph:)('error handling' assert: caseError confirm: confirm:orCancel: doesNotUnderstand: error: halt halt: handles: notify:at: notifyWithLabel: primitiveFail primitiveFailed primitiveFailed: shouldBeImplemented shouldNotImplement subclassResponsibility)('evaluating' value valueWithArguments:)('events-accessing' actionForEvent: actionMap actionSequenceForEvent: actionsDo: hasActionForEvent: setActionSequence:forEvent: updateableActionMap)('events-registering' when:evaluate: when:send:to: when:send:to:with: when:send:to:withArguments:)('events-removing' releaseActionMap removeAction:forEvent: removeActionsForEvent: removeActionsSatisfying: removeActionsSatisfying:forEvent: removeActionsWithReceiver: removeActionsWithReceiver:forEvent:)('events-triggering' triggerEvent: triggerEvent:with: triggerEvent:withArguments:)('finalization' actAsExecutor executor finalizationRegistry finalize retryWithGC:until: toFinalizeSend:to:with:)('inspecting' basicInspect inspect inspectWithLabel: inspectorClass)('macpal' currentWorld flash)('message handling' disableCode: executeMethod: perform: perform:with: perform:with:with: perform:with:with:with: perform:withArguments: perform:withArguments:inSuperclass: with:executeMethod: with:with:executeMethod: with:with:with:executeMethod: with:with:with:with:executeMethod: withArgs:executeMethod:)('object serialization' comeFullyUpOnReload: convertToCurrentVersion:refStream: objectForDataStream: readDataFrom:size: storeDataOn:)('printing' fullPrintString isLiteral longPrintOn: longPrintOn:limitedTo:indent: longPrintString longPrintStringLimitedTo: nominallyUnsent: print printOn: printString printStringLimitedTo: printWithClosureAnalysisOn: storeOn: storeString stringRepresentation)('system primitives' becomeForward: becomeForward:copyHash: className instVarAt: instVarAt:put: instVarNamed: instVarNamed:put: primitiveChangeClassTo: someObject)('testing' is: isArray isBehavior isBlock isClosure isCollection isComplex isFloat isFraction isHeap isInteger isInterval isMethodProperties isNumber isPoint isPseudoContext isString isSymbol isVariableBinding name renameTo: stepAt:in: stepIn: wantsSteps wantsStepsIn:)('translation support' inline: success: var:declareC:)('user interface' browseClassHierarchy explore hasContentsInExplorer inform: notYetImplemented notify:)('private' errorImproperStore errorNonIntegerIndex errorNotIndexable errorSubscriptBounds: primitiveError: species storeAt:inTempFrame:)('tracing' explorePointers inboundPointers inboundPointersExcluding: outboundPointers outboundPointersDo:)!