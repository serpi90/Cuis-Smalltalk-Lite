'From Cuis 2.9 of 5 November 2010 [latest update: #634] on 1 December 2010 at 4:10:57 pm'!!CodeProvider methodsFor: 'annotation' stamp: 'jmv 12/1/2010 16:00'!addOptionalAnnotationsTo: window at: fractions plus: verticalOffset	"Add an annotation pane to the window if preferences indicate a desire for it, and return the incoming verticalOffset plus the height of the added pane, if any"	| aTextMorph divider delta |	self wantsAnnotationPane ifFalse: [^ verticalOffset].	aTextMorph _ PluggableTextMorph 		model: self		editorClass: self editorClass		textGetter: #annotation 		textSetter: nil.	aTextMorph		askBeforeDiscardingEdits: false;		borderWidth: 0;		hideScrollBarsIndefinitely.	divider _ BorderedSubpaneDividerMorph forBottomEdge.	delta _ self defaultAnnotationPaneHeight.	window 		addMorph: aTextMorph 		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@verticalOffset corner: 0@(verticalOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(verticalOffset + delta - 1) corner: 0@(verticalOffset + delta))).	^ verticalOffset + delta! !!CodeProvider methodsFor: 'annotation' stamp: 'jmv 12/1/2010 16:04'!defaultButtonPaneHeight	"Answer the user's preferred default height for new button panes."	^Preferences standardButtonFont height * 14 // 8! !!CodeProvider methodsFor: 'controls' stamp: 'jmv 12/1/2010 16:00'!addOptionalButtonsTo: window at: fractions plus: verticalOffset	"If the receiver wishes it, add a button pane to the window, and answer the verticalOffset plus the height added"	| delta buttons divider |	self wantsOptionalButtons ifFalse: [^verticalOffset].	delta _ self defaultButtonPaneHeight.	buttons _ self optionalButtonRow.	divider _ BorderedSubpaneDividerMorph forBottomEdge.	window 		addMorph: buttons		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@verticalOffset corner: 0@(verticalOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(verticalOffset + delta - 1) corner: 0@(verticalOffset + delta))).	^ verticalOffset + delta! !!CodeProvider methodsFor: 'controls' stamp: 'jmv 12/1/2010 16:01'!decorateForInheritance	"Check to see if the currently-viewed method has a super send or an override, and if so, change screen feedback, unless the #decorateBrowserButtons says not to."	| aColor aButton flags buttonColor |	(aButton _ self inheritanceButton) ifNil: [^ self].	((currentCompiledMethod isKindOf: CompiledMethod) and: [Preferences decorateBrowserButtons])		ifFalse: [ ^aButton color: self class windowColor ].	"This table duplicates the old logic, but adds two new colors for the cases where there is a superclass definition, but this method doesn't call it."	flags _ 0.	self isThisAnOverride ifTrue: [ flags _ flags bitOr: 4 ].	currentCompiledMethod sendsToSuper ifTrue: [ flags _ flags bitOr: 2 ].	self isThereAnOverride ifTrue: [ flags _ flags bitOr: 1 ].	buttonColor _ ColorTheme current buttonColorFrom: self class windowColor.	aColor _ {		"This is NOTan override. There is no super implementation."		buttonColor.							"no sends to super. there is not an override"		Color tan.							"no sends to super. there is an override"		Color red.							"sends to super. there is not an override. Error: no super to call"		Color red.							"sends to super. there is  an override. Error: no super to call"		"This is an override. There is some super implementation"		Color red muchLighter.			"doesn't have sub; has super but doesn't call it"		Color r: 0.94 g: 0.823 b: 0.673.		"has sub; has super but doesn't call it"		Color green muchLighter.			"doesn't have sub; has super and callsl it"		Color blue muchLighter.			"has sub; has super and callsl it"	} at: flags + 1.	aButton color: aColor! !!CodeProvider methodsFor: 'controls' stamp: 'jmv 12/1/2010 16:01'!optionalButtonRow	"Answer a row of control buttons"	| row buttons widths buttonColor |	buttons _ OrderedCollection new.	widths _ OrderedCollection new.	buttonColor _ ColorTheme current buttonColorFrom: self class windowColor.	self optionalButtonTuples do: [ :tuple | | button |		widths add: tuple first.		button _ PluggableButtonMorph 					model: self					stateGetter: nil					action: tuple third.		button color: buttonColor.		button label: tuple second asString.		tuple size > 3 ifTrue: [button setBalloonText: tuple fourth].		buttons add: button ].	row _ AlignmentMorph proportional.	row color: buttonColor.	row addInRow: buttons widthProportionalTo: widths.	^row! !!CodeProvider methodsFor: 'controls' stamp: 'jmv 12/1/2010 16:06'!optionalButtonTuples	"Answer a tuple buttons, in the format:			button label			selector to send			help message"	| aList |	aList _ #(	(10	'browse'			browseMethodFull				'view this method in a browser')	(11	'senders' 			browseSendersOfMessages	'browse senders of...')	(16	'implementors'		browseMessages				'browse implementors of...')	(12	'versions'			browseVersions					'browse versions')), 	(Preferences decorateBrowserButtons		ifTrue:			[{#(13	'inheritance'		methodHierarchy 	'browse method inheritancegreen: sends to supertan: has override(s)mauve: both of the abovepink: is an override but doesn''t call superpinkish tan: has override(s), also is an override but doesn''t call super' )}]		ifFalse:			[{#(13	'inheritance'		methodHierarchy	'browse method inheritance')}]),	#(	(12	'hierarchy'			classHierarchy					'browse class hierarchy')	(10	'inst vars'			browseInstVarRefs				'inst var refs...')	(11	'class vars'			browseClassVarRefs			'class var refs...')	(10	'show...'				offerWhatToShowMenu		'menu of what to show in lower pane')).	^ aList! !!FileContentsBrowser methodsFor: 'creation' stamp: 'jmv 12/1/2010 16:02'!addLowerPanesTo: window at: nominalFractions with: editString	| verticalOffset column codePane infoPane infoHeight divider |	column _ AlignmentMorph proportional.	codePane _ PluggableTextMorph 		model: self 		editorClass: self editorClass		textGetter: #acceptedContents 		textSetter: #contents:notifying:		selectionGetter: #contentsSelection 		menuGetter: #paneMenu:shifted:editorClass:.	infoPane _ PluggableTextMorph 		model: self 		editorClass: self editorClass		textGetter: #infoViewContents 		textSetter: nil		selectionGetter: nil 		menuGetter: nil.	infoPane askBeforeDiscardingEdits: false.	verticalOffset _ 0.	infoHeight _ 20.	column 		addMorph: (codePane borderWidth: 0)		fullFrame: (			LayoutFrame 				fractions: (0@0 corner: 1@1) 				offsets: (0@verticalOffset corner: 0@infoHeight negated)		).	divider _ BorderedSubpaneDividerMorph forTopEdge.	column 		addMorph: divider		fullFrame: (			LayoutFrame 				fractions: (0@1 corner: 1@1) 				offsets: (0@infoHeight negated corner: 0@(1-infoHeight))		).	column 		addMorph: (infoPane borderWidth: 0; hideScrollBarsIndefinitely)		fullFrame: (			LayoutFrame 				fractions: (0@1 corner: 1@1) 				offsets: (0@(1-infoHeight) corner: 0@0)		).	window 		addMorph: column		frame: nominalFractions.	column on: #mouseEnter send: #paneTransition: to: window.	column on: #mouseLeave send: #paneTransition: to: window! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'jmv 12/1/2010 16:05'!draw3DLookOn: aCanvas	| w f center x y borderStyleSymbol c availableW l labelMargin |	borderStyleSymbol _ self isPressed ifFalse: [ #raised ] ifTrue: [ #inset ].	c _ self fillStyle asColor.	self mouseIsOver ifTrue: [ c _ c  lighter ].	aCanvas		fillRectangle: bounds		fillStyle: c		borderWidth: 2		borderStyleSymbol: borderStyleSymbol.	f _ self fontToUse.	center _ bounds center.	label ifNotNil: [		labelMargin _ 4.		w _ f widthOfString: label.		availableW _ bounds width-labelMargin-labelMargin-1.		availableW >= w			ifTrue: [				x _ center x - (w // 2).				l _ label ]			ifFalse: [				x _ bounds left + labelMargin.				l _ label squeezedTo: (label size * availableW / w) rounded ].		y _ center y - (f height // 2).		self isPressed ifTrue: [			x _ x + 1.			y _ y + 1 ].		aCanvas			drawString: l			in: (x@y extent: bounds extent - (labelMargin*2-2@4))			font: f			color: ColorTheme current buttonLabel ]! !